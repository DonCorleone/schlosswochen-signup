{"ast":null,"code":"import { interval, Subject } from 'rxjs';\nimport { map, take, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"@angular/common\";\n\nfunction CountDownComponent_ng_container_3_ng_container_1_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"s\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountDownComponent_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \" Day\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, CountDownComponent_ng_container_3_ng_container_1_span_5_Template, 2, 0, \"span\", 1);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7, \", \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const daysToDday_r2 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(daysToDday_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", daysToDday_r2 && daysToDday_r2 > 1);\n  }\n}\n\nfunction CountDownComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CountDownComponent_ng_container_3_ng_container_1_Template, 8, 2, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const daysToDday_r2 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", daysToDday_r2 && daysToDday_r2 > 0);\n  }\n}\n\nfunction CountDownComponent_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6, \":\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 1, i0.ɵɵpipeBind1(4, 4, ctx_r7.hoursToDday$), \"2.0\"), \"\");\n  }\n}\n\nfunction CountDownComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CountDownComponent_ng_container_5_ng_container_1_Template, 7, 6, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const hoursToDday_r6 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", hoursToDday_r6 && hoursToDday_r6 > 0);\n  }\n}\n\nexport let CountDownComponent = /*#__PURE__*/(() => {\n  class CountDownComponent {\n    constructor(translate) {\n      this.translate = translate;\n      this.dDay = new Date('Jan 01 2022 00:00:00');\n      this.title = 'HELLO';\n      this._ngDestroy$ = new Subject();\n    }\n\n    ngOnInit() {\n      const timeDifference = this.dDay.getTime() - new Date().getTime();\n      const milliSecondsInASecond = 1000;\n      const hoursInADay = 24;\n      const minutesInAnHour = 60;\n      const SecondsInAMinute = 60;\n      const time = Math.floor(timeDifference / milliSecondsInASecond);\n      this.secondsToDdayTotal$ = interval(1000).pipe(take(time), map(x => time - x));\n      this.secondsToDday$ = this.secondsToDdayTotal$.pipe(map(x => Math.floor(x % SecondsInAMinute)));\n      this.minutesToDday$ = this.secondsToDdayTotal$.pipe(map(x => Math.floor(x / SecondsInAMinute % SecondsInAMinute)));\n      this.hoursToDday$ = this.secondsToDdayTotal$.pipe(map(x => Math.floor(x / (SecondsInAMinute * minutesInAnHour) % hoursInADay)));\n      this.daysToDday$ = this.secondsToDdayTotal$.pipe(map(x => Math.floor(x / (SecondsInAMinute * minutesInAnHour * hoursInADay))));\n      this.translate.stream(this.title).pipe(takeUntil(this._ngDestroy$)).subscribe(res => {\n        this.countDownTitle = res;\n      });\n    }\n\n    ngOnDestroy() {\n      this._ngDestroy$.complete();\n\n      this._ngDestroy$.next();\n    }\n\n  }\n\n  CountDownComponent.ɵfac = function CountDownComponent_Factory(t) {\n    return new (t || CountDownComponent)(i0.ɵɵdirectiveInject(i1.TranslateService));\n  };\n\n  CountDownComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountDownComponent,\n    selectors: [[\"app-count-down\"]],\n    inputs: {\n      dDay: \"dDay\",\n      title: \"title\"\n    },\n    decls: 17,\n    vars: 19,\n    consts: [[1, \"countDownDateTime\"], [4, \"ngIf\"]],\n    template: function CountDownComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"span\", 0);\n        i0.ɵɵtemplate(3, CountDownComponent_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵtemplate(5, CountDownComponent_ng_container_5_Template, 2, 1, \"ng-container\", 1);\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵelementStart(7, \"span\");\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"number\");\n        i0.ɵɵpipe(10, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"span\");\n        i0.ɵɵtext(12, \":\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"span\");\n        i0.ɵɵtext(14);\n        i0.ɵɵpipe(15, \"number\");\n        i0.ɵɵpipe(16, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.countDownTitle, \": \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 5, ctx.daysToDday$));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(6, 7, ctx.hoursToDday$));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 9, i0.ɵɵpipeBind1(10, 12, ctx.minutesToDday$), \"2.0\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 14, i0.ɵɵpipeBind1(16, 17, ctx.secondsToDday$), \"2.0\"));\n      }\n    },\n    directives: [i2.NgIf],\n    pipes: [i2.AsyncPipe, i2.DecimalPipe],\n    styles: [\".countDownDateTime[_ngcontent-%COMP%]{white-space:nowrap}\"],\n    changeDetection: 0\n  });\n  return CountDownComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}