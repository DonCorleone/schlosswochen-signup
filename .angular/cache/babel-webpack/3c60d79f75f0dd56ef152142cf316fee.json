{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport { Component, ViewChild, NgZone, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectControlValueAccessor, ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FieldWrapper, FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FormlyBootstrapAddonsModule } from '@ngx-formly/bootstrap/addons';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@ngx-formly/core';\nimport * as ɵngcc4 from '@ngx-formly/core/select';\n\nfunction FormlyFieldCheckbox_label_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtext(1, \"*\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction FormlyFieldCheckbox_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, FormlyFieldCheckbox_label_2_span_2_Template, 2, 0, \"span\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"form-check-label\", ctx_r0.to.formCheck.indexOf(\"custom\") === -1)(\"custom-control-label\", ctx_r0.to.formCheck.indexOf(\"custom\") === 0);\n    ɵngcc0.ɵɵproperty(\"for\", ctx_r0.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.to.label, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.to.required && ctx_r0.to.hideRequiredMarker !== true);\n  }\n}\n\nconst _c0 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    \"form-check\": a0,\n    \"form-check-inline\": a1,\n    \"custom-control\": a2,\n    \"custom-checkbox\": a3,\n    \"custom-control-inline\": a4,\n    \"custom-switch\": a5\n  };\n};\n\nfunction FormlyFieldMultiCheckbox_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 2);\n    ɵngcc0.ɵɵlistener(\"change\", function FormlyFieldMultiCheckbox_div_1_Template_input_change_1_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r4);\n      const option_r1 = restoredCtx.$implicit;\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onChange(option_r1.value, $event.target.checked);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"label\", 3);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction6(15, _c0, ctx_r0.to.formCheck.indexOf(\"custom\") === -1, ctx_r0.to.formCheck === \"inline\", ctx_r0.to.formCheck.indexOf(\"custom\") === 0, ctx_r0.to.formCheck === \"custom\" || ctx_r0.to.formCheck === \"custom-inline\", ctx_r0.to.formCheck === \"custom-inline\", ctx_r0.to.formCheck === \"custom-switch\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"form-check-input\", ctx_r0.to.formCheck.indexOf(\"custom\") === -1)(\"custom-control-input\", ctx_r0.to.formCheck.indexOf(\"custom\") === 0);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id + \"_\" + i_r2)(\"value\", option_r1.value)(\"checked\", ctx_r0.isChecked(option_r1))(\"formlyAttributes\", ctx_r0.field);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"form-check-label\", ctx_r0.to.formCheck.indexOf(\"custom\") === -1)(\"custom-control-label\", ctx_r0.to.formCheck.indexOf(\"custom\") === 0);\n    ɵngcc0.ɵɵproperty(\"for\", ctx_r0.id + \"_\" + i_r2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", option_r1.label, \" \");\n  }\n}\n\nfunction FormlyFieldInput_input_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx_r0.showError);\n    ɵngcc0.ɵɵproperty(\"type\", ctx_r0.type)(\"formControl\", ctx_r0.formControl)(\"formlyAttributes\", ctx_r0.field);\n  }\n}\n\nfunction FormlyFieldInput_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx_r2.showError);\n    ɵngcc0.ɵɵproperty(\"formControl\", ctx_r2.formControl)(\"formlyAttributes\", ctx_r2.field);\n  }\n}\n\nconst _c1 = function (a0, a1, a2, a3) {\n  return {\n    \"form-check\": a0,\n    \"form-check-inline\": a1,\n    \"custom-control custom-radio\": a2,\n    \"custom-control-inline\": a3\n  };\n};\n\nfunction FormlyFieldRadio_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelement(1, \"input\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"label\", 3);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(20, _c1, ctx_r0.to.formCheck.indexOf(\"custom\") === -1, ctx_r0.to.formCheck === \"inline\", ctx_r0.to.formCheck.indexOf(\"custom\") === 0, ctx_r0.to.formCheck === \"custom-inline\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"form-check-input\", ctx_r0.to.formCheck.indexOf(\"custom\") === -1)(\"custom-control-input\", ctx_r0.to.formCheck.indexOf(\"custom\") === 0)(\"is-invalid\", ctx_r0.showError);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id + \"_\" + i_r2)(\"name\", ctx_r0.field.name || ctx_r0.id)(\"value\", option_r1.value)(\"formControl\", ctx_r0.formControl)(\"formlyAttributes\", ctx_r0.field);\n    ɵngcc0.ɵɵattribute(\"value\", option_r1.value)(\"disabled\", option_r1.disabled || ctx_r0.formControl.disabled ? true : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"form-check-label\", ctx_r0.to.formCheck.indexOf(\"custom\") === -1)(\"custom-control-label\", ctx_r0.to.formCheck.indexOf(\"custom\") === 0);\n    ɵngcc0.ɵɵproperty(\"for\", ctx_r0.id + \"_\" + i_r2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", option_r1.label, \" \");\n  }\n}\n\nfunction FormlyFieldSelect_select_0_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"option\", 7);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r9 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngValue\", opt_r9.value)(\"disabled\", opt_r9.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(opt_r9.label);\n  }\n}\n\nfunction FormlyFieldSelect_select_0_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_select_0_ng_container_1_ng_container_1_ng_container_1_Template, 3, 3, \"ng-container\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const opts_r4 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", opts_r4);\n  }\n}\n\nfunction FormlyFieldSelect_select_0_ng_container_1_ng_template_2_ng_container_0_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r12 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ngValue\", opt_r12.value)(\"disabled\", opt_r12.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(opt_r12.label);\n  }\n}\n\nfunction FormlyFieldSelect_select_0_ng_container_1_ng_template_2_ng_container_0_ng_template_2_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const child_r18 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngValue\", child_r18.value)(\"disabled\", child_r18.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", child_r18.label, \" \");\n  }\n}\n\nfunction FormlyFieldSelect_select_0_ng_container_1_ng_template_2_ng_container_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"optgroup\", 10);\n    ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_select_0_ng_container_1_ng_template_2_ng_container_0_ng_template_2_option_1_Template, 2, 3, \"option\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r12 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"label\", opt_r12.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", opt_r12.group);\n  }\n}\n\nfunction FormlyFieldSelect_select_0_ng_container_1_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_select_0_ng_container_1_ng_template_2_ng_container_0_option_1_Template, 2, 3, \"option\", 8);\n    ɵngcc0.ɵɵtemplate(2, FormlyFieldSelect_select_0_ng_container_1_ng_template_2_ng_container_0_ng_template_2_Template, 2, 2, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r12 = ctx.$implicit;\n\n    const _r14 = ɵngcc0.ɵɵreference(3);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !opt_r12.group)(\"ngIfElse\", _r14);\n  }\n}\n\nfunction FormlyFieldSelect_select_0_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, FormlyFieldSelect_select_0_ng_container_1_ng_template_2_ng_container_0_Template, 4, 2, \"ng-container\", 6);\n  }\n\n  if (rf & 2) {\n    const opts_r4 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵproperty(\"ngForOf\", opts_r4);\n  }\n}\n\nfunction FormlyFieldSelect_select_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_select_0_ng_container_1_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵtemplate(2, FormlyFieldSelect_select_0_ng_container_1_ng_template_2_Template, 1, 1, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r6 = ɵngcc0.ɵɵreference(3);\n\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.to._flatOptions)(\"ngIfElse\", _r6);\n  }\n}\n\nfunction FormlyFieldSelect_select_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"select\", 2);\n    ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_select_0_ng_container_1_Template, 4, 2, \"ng-container\", 3);\n    ɵngcc0.ɵɵpipe(2, \"async\");\n    ɵngcc0.ɵɵpipe(3, \"formlySelectOptions\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"custom-select\", ctx_r0.to.customSelect)(\"is-invalid\", ctx_r0.showError);\n    ɵngcc0.ɵɵproperty(\"formControl\", ctx_r0.formControl)(\"compareWith\", ctx_r0.to.compareWith)(\"formlyAttributes\", ctx_r0.field);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(2, 8, ɵngcc0.ɵɵpipeBind2(3, 10, ctx_r0.to.options, ctx_r0.field)));\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_1_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngValue\", null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r21.to.placeholder);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_1_ng_container_2_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"option\", 7);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r28 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngValue\", opt_r28.value)(\"disabled\", opt_r28.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(opt_r28.label);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_1_ng_container_2_ng_container_1_ng_container_1_Template, 3, 3, \"ng-container\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const opts_r23 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", opts_r23);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_1_ng_container_2_ng_template_2_ng_container_0_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r31 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ngValue\", opt_r31.value)(\"disabled\", opt_r31.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(opt_r31.label);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_1_ng_container_2_ng_template_2_ng_container_0_ng_template_2_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const child_r37 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngValue\", child_r37.value)(\"disabled\", child_r37.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", child_r37.label, \" \");\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_1_ng_container_2_ng_template_2_ng_container_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"optgroup\", 10);\n    ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_1_ng_container_2_ng_template_2_ng_container_0_ng_template_2_option_1_Template, 2, 3, \"option\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r31 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"label\", opt_r31.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", opt_r31.group);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_1_ng_container_2_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_1_ng_container_2_ng_template_2_ng_container_0_option_1_Template, 2, 3, \"option\", 8);\n    ɵngcc0.ɵɵtemplate(2, FormlyFieldSelect_ng_template_1_ng_container_2_ng_template_2_ng_container_0_ng_template_2_Template, 2, 2, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r31 = ctx.$implicit;\n\n    const _r33 = ɵngcc0.ɵɵreference(3);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !opt_r31.group)(\"ngIfElse\", _r33);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_1_ng_container_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, FormlyFieldSelect_ng_template_1_ng_container_2_ng_template_2_ng_container_0_Template, 4, 2, \"ng-container\", 6);\n  }\n\n  if (rf & 2) {\n    const opts_r23 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵproperty(\"ngForOf\", opts_r23);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_1_ng_container_2_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵtemplate(2, FormlyFieldSelect_ng_template_1_ng_container_2_ng_template_2_Template, 1, 1, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r25 = ɵngcc0.ɵɵreference(3);\n\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r22.to._flatOptions)(\"ngIfElse\", _r25);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"select\", 12);\n    ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_1_option_1_Template, 2, 2, \"option\", 13);\n    ɵngcc0.ɵɵtemplate(2, FormlyFieldSelect_ng_template_1_ng_container_2_Template, 4, 2, \"ng-container\", 3);\n    ɵngcc0.ɵɵpipe(3, \"async\");\n    ɵngcc0.ɵɵpipe(4, \"formlySelectOptions\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"custom-select\", ctx_r2.to.customSelect)(\"is-invalid\", ctx_r2.showError);\n    ɵngcc0.ɵɵproperty(\"formControl\", ctx_r2.formControl)(\"compareWith\", ctx_r2.to.compareWith)(\"formlyAttributes\", ctx_r2.field);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.to.placeholder);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(3, 9, ɵngcc0.ɵɵpipeBind2(4, 11, ctx_r2.to.options, ctx_r2.field)));\n  }\n}\n\nfunction FormlyWrapperFormField_label_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 6);\n    ɵngcc0.ɵɵtext(1, \"*\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction FormlyWrapperFormField_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, FormlyWrapperFormField_label_1_span_2_Template, 2, 0, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r0.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.to.label, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.to.required && ctx_r0.to.hideRequiredMarker !== true);\n  }\n}\n\nfunction FormlyWrapperFormField_ng_template_2_Template(rf, ctx) {}\n\nfunction FormlyWrapperFormField_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵelement(1, \"formly-validation-message\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"display\", \"block\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"field\", ctx_r3.field);\n  }\n}\n\nfunction FormlyWrapperFormField_small_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"small\", 9);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.to.description);\n  }\n}\n\nlet FormlyFieldCheckbox = /*#__PURE__*/(() => {\n  class FormlyFieldCheckbox extends FieldType {\n    constructor() {\n      super(...arguments);\n      this.defaultOptions = {\n        templateOptions: {\n          indeterminate: true,\n          hideLabel: true,\n          formCheck: 'custom'\n        }\n      };\n    }\n\n  }\n\n  FormlyFieldCheckbox.ɵfac = /*@__PURE__*/function () {\n    let ɵFormlyFieldCheckbox_BaseFactory;\n    return function FormlyFieldCheckbox_Factory(t) {\n      return (ɵFormlyFieldCheckbox_BaseFactory || (ɵFormlyFieldCheckbox_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormlyFieldCheckbox)))(t || FormlyFieldCheckbox);\n    };\n  }();\n\n  FormlyFieldCheckbox.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyFieldCheckbox,\n    selectors: [[\"formly-field-checkbox\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 20,\n    consts: [[3, \"ngClass\"], [\"type\", \"checkbox\", 3, \"indeterminate\", \"formControl\", \"formlyAttributes\"], [3, \"for\", \"form-check-label\", \"custom-control-label\", 4, \"ngIf\"], [3, \"for\"], [\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\"]],\n    template: function FormlyFieldCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"input\", 1);\n        ɵngcc0.ɵɵtemplate(2, FormlyFieldCheckbox_label_2_Template, 3, 7, \"label\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction6(13, _c0, ctx.to.formCheck.indexOf(\"custom\") === -1, ctx.to.formCheck === \"inline\", ctx.to.formCheck.indexOf(\"custom\") === 0, ctx.to.formCheck === \"custom\" || ctx.to.formCheck === \"custom-inline\", ctx.to.formCheck === \"custom-inline\", ctx.to.formCheck === \"custom-switch\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.showError)(\"form-check-input\", ctx.to.formCheck.indexOf(\"custom\") === -1)(\"position-static\", ctx.to.formCheck === \"nolabel\")(\"custom-control-input\", ctx.to.formCheck.indexOf(\"custom\") === 0);\n        ɵngcc0.ɵɵproperty(\"indeterminate\", ctx.to.indeterminate && ctx.formControl.value === null)(\"formControl\", ctx.formControl)(\"formlyAttributes\", ctx.field);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.to.formCheck !== \"nolabel\");\n      }\n    },\n    directives: [ɵngcc1.NgClass, ɵngcc2.CheckboxControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc3.FormlyAttributes, ɵngcc1.NgIf],\n    encapsulation: 2\n  });\n  return FormlyFieldCheckbox;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FormlyFieldMultiCheckbox = /*#__PURE__*/(() => {\n  class FormlyFieldMultiCheckbox extends FieldType {\n    constructor() {\n      super(...arguments);\n      this.defaultOptions = {\n        templateOptions: {\n          options: [],\n          formCheck: 'custom'\n        }\n      };\n    }\n    /**\n     * @param {?} value\n     * @param {?} checked\n     * @return {?}\n     */\n\n\n    onChange(value, checked) {\n      if (this.to.type === 'array') {\n        this.formControl.patchValue(checked ? [...(this.formControl.value || []), value] : [...(this.formControl.value || [])].filter(\n        /**\n        * @param {?} o\n        * @return {?}\n        */\n        o => o !== value));\n      } else {\n        this.formControl.patchValue(Object.assign({}, this.formControl.value, {\n          [value]: checked\n        }));\n      }\n\n      this.formControl.markAsTouched();\n    }\n    /**\n     * @param {?} option\n     * @return {?}\n     */\n\n\n    isChecked(option) {\n      /** @type {?} */\n      const value = this.formControl.value;\n      return value && (this.to.type === 'array' ? value.indexOf(option.value) !== -1 : value[option.value]);\n    }\n\n  }\n\n  FormlyFieldMultiCheckbox.ɵfac = /*@__PURE__*/function () {\n    let ɵFormlyFieldMultiCheckbox_BaseFactory;\n    return function FormlyFieldMultiCheckbox_Factory(t) {\n      return (ɵFormlyFieldMultiCheckbox_BaseFactory || (ɵFormlyFieldMultiCheckbox_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormlyFieldMultiCheckbox)))(t || FormlyFieldMultiCheckbox);\n    };\n  }();\n\n  FormlyFieldMultiCheckbox.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyFieldMultiCheckbox,\n    selectors: [[\"formly-field-multicheckbox\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 6,\n    consts: [[3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [\"type\", \"checkbox\", 3, \"id\", \"value\", \"checked\", \"formlyAttributes\", \"change\"], [3, \"for\"]],\n    template: function FormlyFieldMultiCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵtemplate(1, FormlyFieldMultiCheckbox_div_1_Template, 4, 22, \"div\", 0);\n        ɵngcc0.ɵɵpipe(2, \"async\");\n        ɵngcc0.ɵɵpipe(3, \"formlySelectOptions\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 1, ɵngcc0.ɵɵpipeBind2(3, 3, ctx.to.options, ctx.field)));\n      }\n    },\n    directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc3.FormlyAttributes],\n    pipes: [ɵngcc1.AsyncPipe, ɵngcc4.ɵa],\n    encapsulation: 2\n  });\n  return FormlyFieldMultiCheckbox;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FormlyFieldInput = /*#__PURE__*/(() => {\n  class FormlyFieldInput extends FieldType {\n    /**\n     * @return {?}\n     */\n    get type() {\n      return this.to.type || 'text';\n    }\n\n  }\n\n  FormlyFieldInput.ɵfac = /*@__PURE__*/function () {\n    let ɵFormlyFieldInput_BaseFactory;\n    return function FormlyFieldInput_Factory(t) {\n      return (ɵFormlyFieldInput_BaseFactory || (ɵFormlyFieldInput_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormlyFieldInput)))(t || FormlyFieldInput);\n    };\n  }();\n\n  FormlyFieldInput.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyFieldInput,\n    selectors: [[\"formly-field-input\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[\"class\", \"form-control\", 3, \"type\", \"formControl\", \"formlyAttributes\", \"is-invalid\", 4, \"ngIf\", \"ngIfElse\"], [\"numberTmp\", \"\"], [1, \"form-control\", 3, \"type\", \"formControl\", \"formlyAttributes\"], [\"type\", \"number\", 1, \"form-control\", 3, \"formControl\", \"formlyAttributes\"]],\n    template: function FormlyFieldInput_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FormlyFieldInput_input_0_Template, 1, 5, \"input\", 0);\n        ɵngcc0.ɵɵtemplate(1, FormlyFieldInput_ng_template_1_Template, 1, 4, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.type !== \"number\")(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc3.FormlyAttributes, ɵngcc2.NumberValueAccessor],\n    encapsulation: 2\n  });\n  return FormlyFieldInput;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FormlyFieldRadio = /*#__PURE__*/(() => {\n  class FormlyFieldRadio extends FieldType {\n    constructor() {\n      super(...arguments);\n      this.defaultOptions = {\n        templateOptions: {\n          options: [],\n          formCheck: 'custom'\n        }\n      };\n    }\n\n  }\n\n  FormlyFieldRadio.ɵfac = /*@__PURE__*/function () {\n    let ɵFormlyFieldRadio_BaseFactory;\n    return function FormlyFieldRadio_Factory(t) {\n      return (ɵFormlyFieldRadio_BaseFactory || (ɵFormlyFieldRadio_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormlyFieldRadio)))(t || FormlyFieldRadio);\n    };\n  }();\n\n  FormlyFieldRadio.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyFieldRadio,\n    selectors: [[\"formly-field-radio\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 6,\n    consts: [[3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [\"type\", \"radio\", 3, \"id\", \"name\", \"value\", \"formControl\", \"formlyAttributes\"], [3, \"for\"]],\n    template: function FormlyFieldRadio_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵtemplate(1, FormlyFieldRadio_div_1_Template, 4, 25, \"div\", 0);\n        ɵngcc0.ɵɵpipe(2, \"async\");\n        ɵngcc0.ɵɵpipe(3, \"formlySelectOptions\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 1, ɵngcc0.ɵɵpipeBind2(3, 3, ctx.to.options, ctx.field)));\n      }\n    },\n    directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc2.RadioControlValueAccessor, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc3.FormlyAttributes],\n    pipes: [ɵngcc1.AsyncPipe, ɵngcc4.ɵa],\n    encapsulation: 2\n  });\n  return FormlyFieldRadio;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FormlyFieldTextArea = /*#__PURE__*/(() => {\n  class FormlyFieldTextArea extends FieldType {\n    constructor() {\n      super(...arguments);\n      this.defaultOptions = {\n        templateOptions: {\n          cols: 1,\n          rows: 1\n        }\n      };\n    }\n\n  }\n\n  FormlyFieldTextArea.ɵfac = /*@__PURE__*/function () {\n    let ɵFormlyFieldTextArea_BaseFactory;\n    return function FormlyFieldTextArea_Factory(t) {\n      return (ɵFormlyFieldTextArea_BaseFactory || (ɵFormlyFieldTextArea_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormlyFieldTextArea)))(t || FormlyFieldTextArea);\n    };\n  }();\n\n  FormlyFieldTextArea.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyFieldTextArea,\n    selectors: [[\"formly-field-textarea\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 6,\n    consts: [[1, \"form-control\", 3, \"formControl\", \"cols\", \"rows\", \"formlyAttributes\"]],\n    template: function FormlyFieldTextArea_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"textarea\", 0);\n        ɵngcc0.ɵɵtext(1, \"    \");\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.showError);\n        ɵngcc0.ɵɵproperty(\"formControl\", ctx.formControl)(\"cols\", ctx.to.cols)(\"rows\", ctx.to.rows)(\"formlyAttributes\", ctx.field);\n      }\n    },\n    directives: [ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc3.FormlyAttributes],\n    encapsulation: 2\n  });\n  return FormlyFieldTextArea;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FormlyFieldSelect = /*#__PURE__*/(() => {\n  class FormlyFieldSelect extends FieldType {\n    /**\n     * @param {?} ngZone\n     */\n    constructor(ngZone) {\n      super();\n      this.ngZone = ngZone;\n      this.defaultOptions = {\n        templateOptions: {\n          options: [],\n\n          /**\n           * @param {?} o1\n           * @param {?} o2\n           * @return {?}\n           */\n          compareWith(o1, o2) {\n            return o1 === o2;\n          }\n\n        }\n      };\n    } // workaround for https://github.com/angular/angular/issues/10010\n\n    /**\n     * @param {?} s\n     * @return {?}\n     */\n\n\n    set selectAccessor(s) {\n      if (!s) return;\n      /** @type {?} */\n\n      const writeValue = s.writeValue.bind(s);\n\n      if (s._getOptionId(s.value) === null) {\n        writeValue(s.value);\n      }\n\n      s.writeValue =\n      /**\n      * @param {?} value\n      * @return {?}\n      */\n      value => {\n        /** @type {?} */\n        const id = s._idCounter;\n        writeValue(value);\n\n        if (value === null) {\n          this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(\n          /**\n          * @return {?}\n          */\n          () => {\n            if (id !== s._idCounter && s._getOptionId(value) === null && s._elementRef.nativeElement.selectedIndex !== -1) {\n              writeValue(value);\n            }\n          });\n        }\n      };\n    }\n\n  }\n\n  FormlyFieldSelect.ɵfac = function FormlyFieldSelect_Factory(t) {\n    return new (t || FormlyFieldSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  FormlyFieldSelect.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyFieldSelect,\n    selectors: [[\"formly-field-select\"]],\n    viewQuery: function FormlyFieldSelect_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(SelectControlValueAccessor, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectAccessor = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[\"class\", \"form-control\", \"multiple\", \"\", 3, \"custom-select\", \"formControl\", \"compareWith\", \"is-invalid\", \"formlyAttributes\", 4, \"ngIf\", \"ngIfElse\"], [\"singleSelect\", \"\"], [\"multiple\", \"\", 1, \"form-control\", 3, \"formControl\", \"compareWith\", \"formlyAttributes\"], [4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"grouplist\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\", \"disabled\"], [3, \"ngValue\", \"disabled\", 4, \"ngIf\", \"ngIfElse\"], [\"optgroup\", \"\"], [3, \"label\"], [3, \"ngValue\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-control\", 3, \"formControl\", \"compareWith\", \"formlyAttributes\"], [3, \"ngValue\", 4, \"ngIf\"], [3, \"ngValue\"]],\n    template: function FormlyFieldSelect_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FormlyFieldSelect_select_0_Template, 4, 13, \"select\", 0);\n        ɵngcc0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_1_Template, 5, 14, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.to.multiple)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc2.SelectMultipleControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc3.FormlyAttributes, ɵngcc1.NgForOf, ɵngcc2.NgSelectOption, ɵngcc2.ɵNgSelectMultipleOption, ɵngcc2.SelectControlValueAccessor],\n    pipes: [ɵngcc1.AsyncPipe, ɵngcc4.ɵa],\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return FormlyFieldSelect;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FormlyWrapperFormField = /*#__PURE__*/(() => {\n  class FormlyWrapperFormField extends FieldWrapper {}\n\n  FormlyWrapperFormField.ɵfac = /*@__PURE__*/function () {\n    let ɵFormlyWrapperFormField_BaseFactory;\n    return function FormlyWrapperFormField_Factory(t) {\n      return (ɵFormlyWrapperFormField_BaseFactory || (ɵFormlyWrapperFormField_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormlyWrapperFormField)))(t || FormlyWrapperFormField);\n    };\n  }();\n\n  FormlyWrapperFormField.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyWrapperFormField,\n    selectors: [[\"formly-wrapper-form-field\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 5,\n    consts: [[1, \"form-group\"], [4, \"ngIf\"], [\"fieldComponent\", \"\"], [\"class\", \"invalid-feedback\", 3, \"display\", 4, \"ngIf\"], [\"class\", \"form-text text-muted\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\"], [1, \"invalid-feedback\"], [3, \"field\"], [1, \"form-text\", \"text-muted\"]],\n    template: function FormlyWrapperFormField_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, FormlyWrapperFormField_label_1_Template, 3, 3, \"label\", 1);\n        ɵngcc0.ɵɵtemplate(2, FormlyWrapperFormField_ng_template_2_Template, 0, 0, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(4, FormlyWrapperFormField_div_4_Template, 2, 3, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(5, FormlyWrapperFormField_small_5_Template, 2, 1, \"small\", 4);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"has-error\", ctx.showError);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.to.label && ctx.to.hideLabel !== true);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showError);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.to.description);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc3.ɵc],\n    encapsulation: 2\n  });\n  return FormlyWrapperFormField;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst FIELD_TYPE_COMPONENTS = [// types\nFormlyFieldInput, FormlyFieldCheckbox, FormlyFieldRadio, FormlyFieldSelect, FormlyFieldTextArea, FormlyFieldMultiCheckbox, // wrappers\nFormlyWrapperFormField];\n/** @type {?} */\n\nconst BOOTSTRAP_FORMLY_CONFIG = {\n  types: [{\n    name: 'input',\n    component: FormlyFieldInput,\n    wrappers: ['form-field']\n  }, {\n    name: 'checkbox',\n    component: FormlyFieldCheckbox,\n    wrappers: ['form-field']\n  }, {\n    name: 'radio',\n    component: FormlyFieldRadio,\n    wrappers: ['form-field']\n  }, {\n    name: 'select',\n    component: FormlyFieldSelect,\n    wrappers: ['form-field']\n  }, {\n    name: 'textarea',\n    component: FormlyFieldTextArea,\n    wrappers: ['form-field']\n  }, {\n    name: 'multicheckbox',\n    component: FormlyFieldMultiCheckbox,\n    wrappers: ['form-field']\n  }],\n  wrappers: [{\n    name: 'form-field',\n    component: FormlyWrapperFormField\n  }]\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nlet FormlyBootstrapModule = /*#__PURE__*/(() => {\n  class FormlyBootstrapModule {}\n\n  FormlyBootstrapModule.ɵfac = function FormlyBootstrapModule_Factory(t) {\n    return new (t || FormlyBootstrapModule)();\n  };\n\n  FormlyBootstrapModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FormlyBootstrapModule\n  });\n  FormlyBootstrapModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, FormlySelectModule, FormlyModule.forChild(BOOTSTRAP_FORMLY_CONFIG), FormlyBootstrapAddonsModule]]\n  });\n  return FormlyBootstrapModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyBootstrapModule, {\n    declarations: function () {\n      return [FormlyFieldInput, FormlyFieldCheckbox, FormlyFieldRadio, FormlyFieldSelect, FormlyFieldTextArea, FormlyFieldMultiCheckbox, FormlyWrapperFormField];\n    },\n    imports: function () {\n      return [CommonModule, ReactiveFormsModule, FormlySelectModule, ɵngcc3.FormlyModule, FormlyBootstrapAddonsModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { FormlyBootstrapModule, FormlyFieldCheckbox, FormlyFieldMultiCheckbox, FormlyFieldInput, FormlyFieldRadio, FormlyFieldTextArea, FormlyFieldSelect, FormlyWrapperFormField, BOOTSTRAP_FORMLY_CONFIG as ɵb, FIELD_TYPE_COMPONENTS as ɵa }; //# sourceMappingURL=ngx-formly-bootstrap.js.map","map":null,"metadata":{},"sourceType":"module"}