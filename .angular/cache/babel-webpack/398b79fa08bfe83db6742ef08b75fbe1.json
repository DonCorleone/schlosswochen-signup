{"ast":null,"code":"import _asyncToGenerator from \"/Users/dev/Documents/Projects/Schlosswochen-Inscription/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/dev/Documents/Projects/Schlosswochen-Inscription/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/dev/Documents/Projects/Schlosswochen-Inscription/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/dev/Documents/Projects/Schlosswochen-Inscription/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { EJSON, ObjectId } from 'bson';\nimport * as bson from 'bson';\nexport { bson as BSON };\n\nvar __spreadArrays = undefined && undefined.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nvar BrowserInfo =\n/** @class */\nfunction () {\n  function BrowserInfo(name, version, os) {\n    this.name = name;\n    this.version = version;\n    this.os = os;\n    this.type = 'browser';\n  }\n\n  return BrowserInfo;\n}();\n\nvar NodeInfo =\n/** @class */\nfunction () {\n  function NodeInfo(version) {\n    this.version = version;\n    this.type = 'node';\n    this.name = 'node';\n    this.os = process.platform;\n  }\n\n  return NodeInfo;\n}();\n\nvar SearchBotDeviceInfo =\n/** @class */\nfunction () {\n  function SearchBotDeviceInfo(name, version, os, bot) {\n    this.name = name;\n    this.version = version;\n    this.os = os;\n    this.bot = bot;\n    this.type = 'bot-device';\n  }\n\n  return SearchBotDeviceInfo;\n}();\n\nvar BotInfo =\n/** @class */\nfunction () {\n  function BotInfo() {\n    this.type = 'bot';\n    this.bot = true; // NOTE: deprecated test name instead\n\n    this.name = 'bot';\n    this.version = null;\n    this.os = null;\n  }\n\n  return BotInfo;\n}();\n\nvar ReactNativeInfo =\n/** @class */\nfunction () {\n  function ReactNativeInfo() {\n    this.type = 'react-native';\n    this.name = 'react-native';\n    this.version = null;\n    this.os = null;\n  }\n\n  return ReactNativeInfo;\n}(); // tslint:disable-next-line:max-line-length\n\n\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [['aol', /AOLShield\\/([0-9\\._]+)/], ['edge', /Edge\\/([0-9\\._]+)/], ['edge-ios', /EdgiOS\\/([0-9\\._]+)/], ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/], ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/], ['samsung', /SamsungBrowser\\/([0-9\\.]+)/], ['silk', /\\bSilk\\/([0-9._-]+)\\b/], ['miui', /MiuiBrowser\\/([0-9\\.]+)$/], ['beaker', /BeakerBrowser\\/([0-9\\.]+)/], ['edge-chromium', /Edg\\/([0-9\\.]+)/], ['chromium-webview', /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/], ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/], ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/], ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/], ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/], ['fxios', /FxiOS\\/([0-9\\.]+)/], ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/], ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/], ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/], ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/], ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/], ['ie', /MSIE\\s(7\\.0)/], ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/], ['android', /Android\\s([0-9\\.]+)/], ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/], ['safari', /Version\\/([0-9\\._]+).*Safari/], ['facebook', /FBAV\\/([0-9\\.]+)/], ['instagram', /Instagram\\s([0-9\\.]+)/], ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/], ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/], ['searchbot', SEARCHBOX_UA_REGEX]];\nvar operatingSystemRules = [['iOS', /iP(hone|od|ad)/], ['Android OS', /Android/], ['BlackBerry OS', /BlackBerry|BB10/], ['Windows Mobile', /IEMobile/], ['Amazon OS', /Kindle/], ['Windows 3.11', /Win16/], ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/], ['Windows 98', /(Windows 98)|(Win98)/], ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/], ['Windows XP', /(Windows NT 5.1)|(Windows XP)/], ['Windows Server 2003', /(Windows NT 5.2)/], ['Windows Vista', /(Windows NT 6.0)/], ['Windows 7', /(Windows NT 6.1)/], ['Windows 8', /(Windows NT 6.2)/], ['Windows 8.1', /(Windows NT 6.3)/], ['Windows 10', /(Windows NT 10.0)/], ['Windows ME', /Windows ME/], ['Open BSD', /OpenBSD/], ['Sun OS', /SunOS/], ['Chrome OS', /CrOS/], ['Linux', /(Linux)|(X11)/], ['Mac OS', /(Mac_PowerPC)|(Macintosh)/], ['QNX', /QNX/], ['BeOS', /BeOS/], ['OS/2', /OS\\/2/]];\n\nfunction detect(userAgent) {\n  if (!!userAgent) {\n    return parseUserAgent(userAgent);\n  }\n\n  if (typeof document === 'undefined' && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return new ReactNativeInfo();\n  }\n\n  if (typeof navigator !== 'undefined') {\n    return parseUserAgent(navigator.userAgent);\n  }\n\n  return getNodeVersion();\n}\n\nfunction matchUserAgent(ua) {\n  // opted for using reduce here rather than Array#first with a regex.test call\n  // this is primarily because using the reduce we only perform the regex\n  // execution once rather than once for the test and for the exec again below\n  // probably something that needs to be benchmarked though\n  return ua !== '' && userAgentRules.reduce(function (matched, _a) {\n    var browser = _a[0],\n        regex = _a[1];\n\n    if (matched) {\n      return matched;\n    }\n\n    var uaMatch = regex.exec(ua);\n    return !!uaMatch && [browser, uaMatch];\n  }, false);\n}\n\nfunction parseUserAgent(ua) {\n  var matchedRule = matchUserAgent(ua);\n\n  if (!matchedRule) {\n    return null;\n  }\n\n  var name = matchedRule[0],\n      match = matchedRule[1];\n\n  if (name === 'searchbot') {\n    return new BotInfo();\n  }\n\n  var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n\n  if (versionParts) {\n    if (versionParts.length < REQUIRED_VERSION_PARTS) {\n      versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n    }\n  } else {\n    versionParts = [];\n  }\n\n  var version = versionParts.join('.');\n  var os = detectOS(ua);\n  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n\n  if (searchBotMatch && searchBotMatch[1]) {\n    return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n  }\n\n  return new BrowserInfo(name, version, os);\n}\n\nfunction detectOS(ua) {\n  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n    var _a = operatingSystemRules[ii],\n        os = _a[0],\n        regex = _a[1];\n    var match = regex.exec(ua);\n\n    if (match) {\n      return os;\n    }\n  }\n\n  return null;\n}\n\nfunction getNodeVersion() {\n  var isNode = typeof process !== 'undefined' && process.version;\n  return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\n\nfunction createVersionParts(count) {\n  var output = [];\n\n  for (var ii = 0; ii < count; ii++) {\n    output.push('0');\n  }\n\n  return output;\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nclass DefaultNetworkTransport {\n  constructor() {\n    if (!DefaultNetworkTransport.fetch) {\n      throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n    }\n\n    if (!DefaultNetworkTransport.AbortController) {\n      throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n    }\n  }\n\n  fetchWithCallbacks(request, handler) {\n    // tslint:disable-next-line: no-console\n    this.fetch(request).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        const decodedBody = yield response.text(); // Pull out the headers of the response\n\n        const responseHeaders = {};\n        response.headers.forEach((value, key) => {\n          responseHeaders[key] = value;\n        });\n        return {\n          statusCode: response.status,\n          headers: responseHeaders,\n          body: decodedBody\n        };\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).then(r => handler.onSuccess(r)).catch(e => handler.onError(e));\n  }\n\n  fetch(request) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        timeoutMs,\n        url,\n        ...rest\n      } = request;\n\n      const {\n        signal,\n        cancelTimeout\n      } = _this2.createTimeoutSignal(timeoutMs);\n\n      try {\n        // We'll await the response to catch throw our own error\n        return yield DefaultNetworkTransport.fetch(url, {\n          signal,\n          ...rest\n        });\n      } finally {\n        // Whatever happens, cancel any timeout\n        cancelTimeout();\n      }\n    })();\n  }\n\n  createTimeoutSignal(timeoutMs) {\n    if (typeof timeoutMs === \"number\") {\n      const controller = new DefaultNetworkTransport.AbortController(); // Call abort after a specific number of milliseconds\n\n      const timeout = setTimeout(() => {\n        controller.abort();\n      }, timeoutMs);\n      return {\n        signal: controller.signal,\n        cancelTimeout: () => {\n          clearTimeout(timeout);\n        }\n      };\n    } else {\n      return {\n        signal: undefined,\n        cancelTimeout: () => {\n          /* No-op */\n        }\n      };\n    }\n  }\n\n}\n\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/json\"\n}; ////////////////////////////////////////////////////////////////////////////\n\nDefaultNetworkTransport.fetch = window.fetch.bind(window);\nDefaultNetworkTransport.AbortController = window.AbortController;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar base64 = createCommonjsModule(function (module, exports) {\n  (function (global, factory) {\n    module.exports = factory(global);\n  })(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : commonjsGlobal, function (global) {\n    // existing version for noConflict()\n    global = global || {};\n    var _Base64 = global.Base64;\n    var version = \"2.6.4\"; // constants\n\n    var b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    var b64tab = function (bin) {\n      var t = {};\n\n      for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n\n      return t;\n    }(b64chars);\n\n    var fromCharCode = String.fromCharCode; // encoder stuff\n\n    var cb_utob = function (c) {\n      if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c : cc < 0x800 ? fromCharCode(0xc0 | cc >>> 6) + fromCharCode(0x80 | cc & 0x3f) : fromCharCode(0xe0 | cc >>> 12 & 0x0f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);\n      } else {\n        var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);\n        return fromCharCode(0xf0 | cc >>> 18 & 0x07) + fromCharCode(0x80 | cc >>> 12 & 0x3f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);\n      }\n    };\n\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n\n    var utob = function (u) {\n      return u.replace(re_utob, cb_utob);\n    };\n\n    var cb_encode = function (ccc) {\n      var padlen = [0, 2, 1][ccc.length % 3],\n          ord = ccc.charCodeAt(0) << 16 | (ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8 | (ccc.length > 2 ? ccc.charCodeAt(2) : 0),\n          chars = [b64chars.charAt(ord >>> 18), b64chars.charAt(ord >>> 12 & 63), padlen >= 2 ? '=' : b64chars.charAt(ord >>> 6 & 63), padlen >= 1 ? '=' : b64chars.charAt(ord & 63)];\n      return chars.join('');\n    };\n\n    var btoa = global.btoa && typeof global.btoa == 'function' ? function (b) {\n      return global.btoa(b);\n    } : function (b) {\n      if (b.match(/[^\\x00-\\xFF]/)) throw new RangeError('The string contains invalid characters.');\n      return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n\n    var _encode = function (u) {\n      return btoa(utob(String(u)));\n    };\n\n    var mkUriSafe = function (b64) {\n      return b64.replace(/[+\\/]/g, function (m0) {\n        return m0 == '+' ? '-' : '_';\n      }).replace(/=/g, '');\n    };\n\n    var encode = function (u, urisafe) {\n      return urisafe ? mkUriSafe(_encode(u)) : _encode(u);\n    };\n\n    var encodeURI = function (u) {\n      return encode(u, true);\n    };\n\n    var fromUint8Array;\n    if (global.Uint8Array) fromUint8Array = function (a, urisafe) {\n      // return btoa(fromCharCode.apply(null, a));\n      var b64 = '';\n\n      for (var i = 0, l = a.length; i < l; i += 3) {\n        var a0 = a[i],\n            a1 = a[i + 1],\n            a2 = a[i + 2];\n        var ord = a0 << 16 | a1 << 8 | a2;\n        b64 += b64chars.charAt(ord >>> 18) + b64chars.charAt(ord >>> 12 & 63) + (typeof a1 != 'undefined' ? b64chars.charAt(ord >>> 6 & 63) : '=') + (typeof a2 != 'undefined' ? b64chars.charAt(ord & 63) : '=');\n      }\n\n      return urisafe ? mkUriSafe(b64) : b64;\n    }; // decoder stuff\n\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n\n    var cb_btou = function (cccc) {\n      switch (cccc.length) {\n        case 4:\n          var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3),\n              offset = cp - 0x10000;\n          return fromCharCode((offset >>> 10) + 0xD800) + fromCharCode((offset & 0x3FF) + 0xDC00);\n\n        case 3:\n          return fromCharCode((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));\n\n        default:\n          return fromCharCode((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));\n      }\n    };\n\n    var btou = function (b) {\n      return b.replace(re_btou, cb_btou);\n    };\n\n    var cb_decode = function (cccc) {\n      var len = cccc.length,\n          padlen = len % 4,\n          n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0) | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0) | (len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0) | (len > 3 ? b64tab[cccc.charAt(3)] : 0),\n          chars = [fromCharCode(n >>> 16), fromCharCode(n >>> 8 & 0xff), fromCharCode(n & 0xff)];\n      chars.length -= [0, 0, 2, 1][padlen];\n      return chars.join('');\n    };\n\n    var _atob = global.atob && typeof global.atob == 'function' ? function (a) {\n      return global.atob(a);\n    } : function (a) {\n      return a.replace(/\\S{1,4}/g, cb_decode);\n    };\n\n    var atob = function (a) {\n      return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n    };\n\n    var _decode = function (a) {\n      return btou(_atob(a));\n    };\n\n    var _fromURI = function (a) {\n      return String(a).replace(/[-_]/g, function (m0) {\n        return m0 == '-' ? '+' : '/';\n      }).replace(/[^A-Za-z0-9\\+\\/]/g, '');\n    };\n\n    var decode = function (a) {\n      return _decode(_fromURI(a));\n    };\n\n    var toUint8Array;\n    if (global.Uint8Array) toUint8Array = function (a) {\n      return Uint8Array.from(atob(_fromURI(a)), function (c) {\n        return c.charCodeAt(0);\n      });\n    };\n\n    var noConflict = function () {\n      var Base64 = global.Base64;\n      global.Base64 = _Base64;\n      return Base64;\n    }; // export Base64\n\n\n    global.Base64 = {\n      VERSION: version,\n      atob: atob,\n      btoa: btoa,\n      fromBase64: decode,\n      toBase64: encode,\n      utob: utob,\n      encode: encode,\n      encodeURI: encodeURI,\n      btou: btou,\n      decode: decode,\n      noConflict: noConflict,\n      fromUint8Array: fromUint8Array,\n      toUint8Array: toUint8Array\n    }; // if ES5 is available, make Base64.extendString() available\n\n    if (typeof Object.defineProperty === 'function') {\n      var noEnum = function (v) {\n        return {\n          value: v,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        };\n      };\n\n      global.Base64.extendString = function () {\n        Object.defineProperty(String.prototype, 'fromBase64', noEnum(function () {\n          return decode(this);\n        }));\n        Object.defineProperty(String.prototype, 'toBase64', noEnum(function (urisafe) {\n          return encode(this, urisafe);\n        }));\n        Object.defineProperty(String.prototype, 'toBase64URI', noEnum(function () {\n          return encode(this, true);\n        }));\n      };\n    } //\n    // export Base64 to the namespace\n    //\n\n\n    if (global['Meteor']) {\n      // Meteor.js\n      Base64 = global.Base64;\n    } // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n\n\n    if (module.exports) {\n      module.exports.Base64 = global.Base64;\n    } // that's it!\n\n\n    return {\n      Base64: global.Base64\n    };\n  });\n}); ////////////////////////////////////////////////////////////////////////////\n\nconst SERIALIZATION_OPTIONS = {\n  relaxed: false\n};\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\n\nfunction serialize(obj) {\n  return EJSON.serialize(obj, SERIALIZATION_OPTIONS);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\n\n\nfunction deserialize(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(doc => EJSON.deserialize(doc));\n  } else {\n    return EJSON.deserialize(obj);\n  }\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * The type of a user.\n */\n\n\nvar UserType;\n\n(function (UserType) {\n  /**\n   * A normal end-user created this user.\n   */\n  UserType[\"Normal\"] = \"normal\";\n  /**\n   * The user was created by the server.\n   */\n\n  UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\n\n\nvar DataKey;\n\n(function (DataKey) {\n  /** @ignore */\n  DataKey[\"NAME\"] = \"name\";\n  /** @ignore */\n\n  DataKey[\"EMAIL\"] = \"email\";\n  /** @ignore */\n\n  DataKey[\"PICTURE\"] = \"picture\";\n  /** @ignore */\n\n  DataKey[\"FIRST_NAME\"] = \"first_name\";\n  /** @ignore */\n\n  DataKey[\"LAST_NAME\"] = \"last_name\";\n  /** @ignore */\n\n  DataKey[\"GENDER\"] = \"gender\";\n  /** @ignore */\n\n  DataKey[\"BIRTHDAY\"] = \"birthday\";\n  /** @ignore */\n\n  DataKey[\"MIN_AGE\"] = \"min_age\";\n  /** @ignore */\n\n  DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\n\nconst DATA_MAPPING = {\n  [DataKey.NAME]: \"name\",\n  [DataKey.EMAIL]: \"email\",\n  [DataKey.PICTURE]: \"pictureUrl\",\n  [DataKey.FIRST_NAME]: \"firstName\",\n  [DataKey.LAST_NAME]: \"lastName\",\n  [DataKey.GENDER]: \"gender\",\n  [DataKey.BIRTHDAY]: \"birthday\",\n  [DataKey.MIN_AGE]: \"minAge\",\n  [DataKey.MAX_AGE]: \"maxAge\"\n};\n/** @inheritdoc */\n\nclass UserProfile {\n  /**\n   * @param response The response of a call fetching the users profile.\n   */\n  constructor(response) {\n    /** @ignore */\n    this.type = UserType.Normal;\n    /** @ignore */\n\n    this.identities = [];\n\n    if (typeof response === \"object\" && response !== null) {\n      const {\n        type,\n        identities,\n        data\n      } = response;\n\n      if (typeof type === \"string\") {\n        this.type = type;\n      } else {\n        throw new Error(\"Expected 'type' in the response body\");\n      }\n\n      if (Array.isArray(identities)) {\n        this.identities = identities.map(identity => {\n          return {\n            id: identity.id,\n            providerType: identity[\"provider_type\"]\n          };\n        });\n      } else {\n        throw new Error(\"Expected 'identities' in the response body\");\n      }\n\n      if (typeof data === \"object\" && data !== null) {\n        const mappedData = Object.fromEntries(Object.entries(data).map(([key, value]) => {\n          if (key in DATA_MAPPING) {\n            // Translate any known data field to its JS idiomatic alias\n            return [DATA_MAPPING[key], value];\n          } else {\n            // Pass through any other values\n            return [key, value];\n          }\n        })); // We can use `any` since we trust the user supplies the correct type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        this.data = deserialize(mappedData);\n      } else {\n        throw new Error(\"Expected 'data' in the response body\");\n      }\n    } else {\n      this.data = {};\n    }\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\n\n\nclass PrefixedStorage {\n  /**\n   * Construct a `Storage` which will prefix a key part to every operation.\n   *\n   * @param storage The underlying storage to use for operations.\n   * @param keyPart The part of the key to prefix when performing operations.\n   */\n  constructor(storage, keyPart) {\n    this.storage = storage;\n    this.keyPart = keyPart;\n  }\n  /** @inheritdoc */\n\n\n  get(key) {\n    return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n  }\n  /** @inheritdoc */\n\n\n  set(key, value) {\n    return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n  }\n  /** @inheritdoc */\n\n\n  remove(key) {\n    return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n  }\n  /** @inheritdoc */\n\n\n  prefix(keyPart) {\n    return new PrefixedStorage(this, keyPart);\n  }\n  /** @inheritdoc */\n\n\n  clear(prefix = \"\") {\n    return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n  }\n  /** @inheritdoc */\n\n\n  addListener(listener) {\n    return this.storage.addListener(listener);\n  }\n  /** @inheritdoc */\n\n\n  removeListener(listener) {\n    return this.storage.addListener(listener);\n  }\n\n}\n/**\n * The string separating two parts.\n */\n\n\nPrefixedStorage.PART_SEPARATOR = \":\"; ////////////////////////////////////////////////////////////////////////////\n\nconst ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nconst PROFILE_STORAGE_KEY = \"profile\";\nconst PROVIDER_TYPE_STORAGE_KEY = \"providerType\";\n/**\n * Storage specific to the app.\n */\n\nclass UserStorage extends PrefixedStorage {\n  /**\n   * Construct a storage for a `User`.\n   *\n   * @param storage The underlying storage to wrap.\n   * @param userId The id of the user.\n   */\n  constructor(storage, userId) {\n    super(storage, `user(${userId})`);\n  }\n  /**\n   * Get the access token from storage.\n   *\n   * @returns Access token (null if unknown).\n   */\n\n\n  get accessToken() {\n    return this.get(ACCESS_TOKEN_STORAGE_KEY);\n  }\n  /**\n   * Set the access token in storage.\n   *\n   * @param value Access token (null if unknown).\n   */\n\n\n  set accessToken(value) {\n    if (value === null) {\n      this.remove(ACCESS_TOKEN_STORAGE_KEY);\n    } else {\n      this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n    }\n  }\n  /**\n   * Get the refresh token from storage.\n   *\n   * @returns Refresh token (null if unknown and user is logged out).\n   */\n\n\n  get refreshToken() {\n    return this.get(REFRESH_TOKEN_STORAGE_KEY);\n  }\n  /**\n   * Set the refresh token in storage.\n   *\n   * @param value Refresh token (null if unknown and user is logged out).\n   */\n\n\n  set refreshToken(value) {\n    if (value === null) {\n      this.remove(REFRESH_TOKEN_STORAGE_KEY);\n    } else {\n      this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n    }\n  }\n  /**\n   * Get the user profile from storage.\n   *\n   * @returns User profile (undefined if its unknown).\n   */\n\n\n  get profile() {\n    const value = this.get(PROFILE_STORAGE_KEY);\n\n    if (value) {\n      const profile = new UserProfile(); // Patch in the values\n\n      Object.assign(profile, JSON.parse(value));\n      return profile;\n    }\n  }\n  /**\n   * Set the user profile in storage.\n   *\n   * @param value User profile (undefined if its unknown).\n   */\n\n\n  set profile(value) {\n    if (value) {\n      this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n    } else {\n      this.remove(PROFILE_STORAGE_KEY);\n    }\n  }\n  /**\n   * Get the type of authentication provider used to authenticate\n   *\n   * @returns User profile (undefined if its unknown).\n   */\n\n\n  get providerType() {\n    const value = this.get(PROVIDER_TYPE_STORAGE_KEY);\n\n    if (value) {\n      return value;\n    }\n  }\n  /**\n   * Set the type of authentication provider used to authenticate\n   *\n   * @param value Type of authentication provider.\n   */\n\n\n  set providerType(value) {\n    if (value) {\n      this.set(PROVIDER_TYPE_STORAGE_KEY, value);\n    } else {\n      this.remove(PROVIDER_TYPE_STORAGE_KEY);\n    }\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * @param obj The object to remove keys (and undefined values from)\n * @returns A new object without the keys where the value is undefined.\n */\n\n\nfunction removeKeysWithUndefinedValues(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => typeof entry[1] !== \"undefined\"));\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\n\n\nfunction generateRandomString(length, alphabet) {\n  let result = \"\";\n\n  for (let i = 0; i < length; i++) {\n    result += alphabet[Math.floor(Math.random() * alphabet.length)];\n  }\n\n  return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @param prefixed Should the \"?\" prefix be added if values exists?\n * @returns A URL encoded representation of the parameters (omitting a \"?\" prefix).\n */\n\n\nfunction encodeQueryString(params, prefixed = true) {\n  // Filter out undefined values\n  const cleanedParams = removeKeysWithUndefinedValues(params); // Determine if a prefixed \"?\" is appropreate\n\n  const prefix = prefixed && Object.keys(cleanedParams).length > 0 ? \"?\" : \"\"; // Transform keys and values to a query string\n\n  return prefix + Object.entries(cleanedParams).map(([k, v]) => `${k}=${encodeURIComponent(v)}`).join(\"&\");\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\n\n\nfunction decodeQueryString(str) {\n  const cleanStr = str[0] === \"?\" ? str.substr(1) : str;\n  return Object.fromEntries(cleanStr.split(\"&\").filter(s => s.length > 0).map(kvp => kvp.split(\"=\")).map(([k, v]) => [k, decodeURIComponent(v)]));\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\n\n\nconst RESERVED_NAMES = [\"inspect\", \"callFunction\", \"callFunctionStreaming\", // Methods defined on the Object.prototype might be \"typeof probed\" and called by libraries and runtime environments.\n...Object.getOwnPropertyNames(Object.prototype)];\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\n\nfunction cleanArgs(args) {\n  for (const arg of args) {\n    if (typeof arg === \"object\") {\n      for (const [key, value] of Object.entries(arg)) {\n        if (value === undefined) {\n          delete arg[key];\n        }\n      }\n    }\n  }\n\n  return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\n\n\nfunction cleanArgsAndSerialize(args) {\n  const cleaned = cleanArgs(args);\n  return cleaned.map(arg => typeof arg === \"object\" ? serialize(arg) : arg);\n}\n/**\n * Defines how functions are called.\n */\n\n\nclass FunctionsFactory {\n  /**\n   * @param fetcher The underlying fetcher to use when sending requests.\n   * @param config Additional configuration parameters.\n   */\n  constructor(fetcher, config = {}) {\n    this.fetcher = fetcher;\n    this.serviceName = config.serviceName;\n    this.argsTransformation = config.argsTransformation || cleanArgsAndSerialize;\n  }\n  /**\n   * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n   *\n   * @param fetcher The underlying fetcher to use when requesting.\n   * @param config Additional configuration parameters.\n   * @returns The newly created factory of functions.\n   */\n\n\n  static create(fetcher, config = {}) {\n    // Create a proxy, wrapping a simple object returning methods that calls functions\n    // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n    const factory = new FunctionsFactory(fetcher, config); // Wrap the factory in a proxy that calls the internal call method\n\n    return new Proxy(factory, {\n      get(target, p, receiver) {\n        if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n          return target.callFunction.bind(target, p);\n        } else {\n          const prop = Reflect.get(target, p, receiver);\n          return typeof prop === \"function\" ? prop.bind(target) : prop;\n        }\n      }\n\n    });\n  }\n  /**\n   * Call a remote function by it's name.\n   *\n   * @param name Name of the remote function.\n   * @param args Arguments to pass to the remote function.\n   * @returns A promise of the value returned when executing the remote function.\n   */\n\n\n  callFunction(name, ...args) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n      const body = {\n        name,\n        arguments: _this3.argsTransformation ? _this3.argsTransformation(args) : args\n      };\n\n      if (_this3.serviceName) {\n        body.service = _this3.serviceName;\n      }\n\n      const appRoute = _this3.fetcher.appRoute;\n      return _this3.fetcher.fetchJSON({\n        method: \"POST\",\n        path: appRoute.functionsCall().path,\n        body\n      });\n    })();\n  }\n  /**\n   * Call a remote function by it's name.\n   *\n   * @param name Name of the remote function.\n   * @param args Arguments to pass to the remote function.\n   * @returns A promise of the value returned when executing the remote function.\n   */\n\n\n  callFunctionStreaming(name, ...args) {\n    const body = {\n      name,\n      arguments: this.argsTransformation ? this.argsTransformation(args) : args\n    };\n\n    if (this.serviceName) {\n      body.service = this.serviceName;\n    }\n\n    const appRoute = this.fetcher.appRoute;\n    const qs = encodeQueryString({\n      [\"baas_request\"]: Base64.encode(JSON.stringify(body))\n    });\n    return this.fetcher.fetchStream({\n      method: \"GET\",\n      path: appRoute.functionsCall().path + qs\n    });\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/** @inheritdoc */\n\n\nclass EmailPasswordAuth {\n  /**\n   * Construct an interface to the email / password authentication provider.\n   *\n   * @param fetcher The underlying fetcher used to request the services.\n   * @param providerName Optional custom name of the authentication provider.\n   */\n  constructor(fetcher, providerName = \"local-userpass\") {\n    this.fetcher = fetcher;\n    this.providerName = providerName;\n  }\n  /** @inheritdoc */\n\n\n  registerUser(email, password) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const appRoute = _this4.fetcher.appRoute;\n      yield _this4.fetcher.fetchJSON({\n        method: \"POST\",\n        path: appRoute.emailPasswordAuth(_this4.providerName).register().path,\n        body: {\n          email,\n          password\n        }\n      });\n    })();\n  }\n  /** @inheritdoc */\n\n\n  confirmUser(token, tokenId) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const appRoute = _this5.fetcher.appRoute;\n      yield _this5.fetcher.fetchJSON({\n        method: \"POST\",\n        path: appRoute.emailPasswordAuth(_this5.providerName).confirm().path,\n        body: {\n          token,\n          tokenId\n        }\n      });\n    })();\n  }\n  /** @inheritdoc */\n\n\n  resendConfirmationEmail(email) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const appRoute = _this6.fetcher.appRoute;\n      yield _this6.fetcher.fetchJSON({\n        method: \"POST\",\n        path: appRoute.emailPasswordAuth(_this6.providerName).confirmSend().path,\n        body: {\n          email\n        }\n      });\n    })();\n  }\n  /** @inheritdoc */\n\n\n  resetPassword(token, tokenId, password) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      const appRoute = _this7.fetcher.appRoute;\n      yield _this7.fetcher.fetchJSON({\n        method: \"POST\",\n        path: appRoute.emailPasswordAuth(_this7.providerName).reset().path,\n        body: {\n          token,\n          tokenId,\n          password\n        }\n      });\n    })();\n  }\n  /** @inheritdoc */\n\n\n  sendResetPasswordEmail(email) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      const appRoute = _this8.fetcher.appRoute;\n      yield _this8.fetcher.fetchJSON({\n        method: \"POST\",\n        path: appRoute.emailPasswordAuth(_this8.providerName).resetSend().path,\n        body: {\n          email\n        }\n      });\n    })();\n  }\n  /** @inheritdoc */\n\n\n  callResetPasswordFunction(email, password, ...args) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      const appRoute = _this9.fetcher.appRoute;\n      yield _this9.fetcher.fetchJSON({\n        method: \"POST\",\n        path: appRoute.emailPasswordAuth(_this9.providerName).resetCall().path,\n        body: {\n          email,\n          password,\n          arguments: args\n        }\n      });\n    })();\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * @returns The base api route.\n */\n\n\nfunction api() {\n  return {\n    path: \"/api/client/v2.0\",\n\n    /**\n     * @param appId The id of the app.\n     * @returns The URL of the app endpoint.\n     */\n    app(appId) {\n      return {\n        path: this.path + `/app/${appId}`,\n\n        /**\n         * @returns The URL of the app location endpoint.\n         */\n        location() {\n          return {\n            path: this.path + \"/location\"\n          };\n        },\n\n        /**\n         * @param providerName The name of the provider.\n         * @returns The app url concatinated with the /auth/providers/{providerName}\n         */\n        authProvider(providerName) {\n          return {\n            path: this.path + `/auth/providers/${providerName}`,\n\n            /**\n             * @returns Get the URL of an authentication provider.\n             */\n            login() {\n              return {\n                path: this.path + \"/login\"\n              };\n            }\n\n          };\n        },\n\n        /**\n         * @param providerName The name of the provider.\n         * @returns The app url concatinated with the /auth/providers/{providerName}\n         */\n        emailPasswordAuth(providerName) {\n          const authProviderRoutes = this.authProvider(providerName);\n          return { ...authProviderRoutes,\n\n            register() {\n              return {\n                path: this.path + \"/register\"\n              };\n            },\n\n            confirm() {\n              return {\n                path: this.path + \"/confirm\"\n              };\n            },\n\n            confirmSend() {\n              return {\n                path: this.path + \"/confirm/send\"\n              };\n            },\n\n            reset() {\n              return {\n                path: this.path + \"/reset\"\n              };\n            },\n\n            resetSend() {\n              return {\n                path: this.path + \"/reset/send\"\n              };\n            },\n\n            resetCall() {\n              return {\n                path: this.path + \"/reset/call\"\n              };\n            }\n\n          };\n        },\n\n        functionsCall() {\n          return {\n            path: this.path + \"/functions/call\"\n          };\n        }\n\n      };\n    },\n\n    auth() {\n      return {\n        path: this.path + \"/auth\",\n\n        apiKeys() {\n          return {\n            path: this.path + \"/api_keys\",\n\n            key(id) {\n              return {\n                path: this.path + `/${id}`,\n\n                enable() {\n                  return {\n                    path: this.path + \"/enable\"\n                  };\n                },\n\n                disable() {\n                  return {\n                    path: this.path + \"/disable\"\n                  };\n                }\n\n              };\n            }\n\n          };\n        },\n\n        profile() {\n          return {\n            path: this.path + \"/profile\"\n          };\n        },\n\n        session() {\n          return {\n            path: this.path + \"/session\"\n          };\n        }\n\n      };\n    }\n\n  };\n}\n\nvar routes = {\n  api\n}; ////////////////////////////////////////////////////////////////////////////\n\n/** @inheritdoc */\n\nclass ApiKeyAuth {\n  /**\n   * Construct an interface to the API-key authentication provider.\n   *\n   * @param fetcher The fetcher used to send requests to services.\n   * @param providerName Optional custom name of the authentication provider.\n   */\n  constructor(fetcher, providerName = \"api-key\") {\n    this.fetcher = fetcher;\n  }\n  /** @inheritdoc */\n\n\n  create(name) {\n    return this.fetcher.fetchJSON({\n      method: \"POST\",\n      body: {\n        name\n      },\n      path: routes.api().auth().apiKeys().path,\n      tokenType: \"refresh\"\n    });\n  }\n  /** @inheritdoc */\n\n\n  fetch(keyId) {\n    return this.fetcher.fetchJSON({\n      method: \"GET\",\n      path: routes.api().auth().apiKeys().key(keyId).path,\n      tokenType: \"refresh\"\n    });\n  }\n  /** @inheritdoc */\n\n\n  fetchAll() {\n    return this.fetcher.fetchJSON({\n      method: \"GET\",\n      tokenType: \"refresh\",\n      path: routes.api().auth().apiKeys().path\n    });\n  }\n  /** @inheritdoc */\n\n\n  delete(keyId) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this10.fetcher.fetchJSON({\n        method: \"DELETE\",\n        path: routes.api().auth().apiKeys().key(keyId).path,\n        tokenType: \"refresh\"\n      });\n    })();\n  }\n  /** @inheritdoc */\n\n\n  enable(keyId) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this11.fetcher.fetchJSON({\n        method: \"PUT\",\n        path: routes.api().auth().apiKeys().key(keyId).enable().path,\n        tokenType: \"refresh\"\n      });\n    })();\n  }\n  /** @inheritdoc */\n\n\n  disable(keyId) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this12.fetcher.fetchJSON({\n        method: \"PUT\",\n        path: routes.api().auth().apiKeys().key(keyId).disable().path,\n        tokenType: \"refresh\"\n      });\n    })();\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nlet environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\n\nfunction setEnvironment(e) {\n  environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\n\n\nfunction getEnvironment() {\n  if (environment) {\n    return environment;\n  } else {\n    throw new Error(\"Cannot get environment before it's set\");\n  }\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * An error occured during the parsing of a watch stream.\n */\n\n\nclass WatchError extends Error {\n  constructor({\n    message,\n    code\n  }) {\n    super(message);\n    /**\n     * The name of this type of error\n     */\n\n    this.name = \"WatchError\";\n    this.code = code;\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n// NOTE: this is a fully processed event, not a single \"data: foo\" line!\n\n/**\n * The state of a WatchStream.\n */\n\n\nvar WatchStreamState;\n\n(function (WatchStreamState) {\n  /**\n   * Need to call one of the feed functions.\n   */\n  WatchStreamState[\"NEED_DATA\"] = \"NEED_DATA\";\n  /**\n   * Call nextEvent() to consume an event.\n   */\n\n  WatchStreamState[\"HAVE_EVENT\"] = \"HAVE_EVENT\";\n  /**\n   * Call error().\n   */\n\n  WatchStreamState[\"HAVE_ERROR\"] = \"HAVE_ERROR\";\n})(WatchStreamState || (WatchStreamState = {}));\n/**\n * Represents a stream of events\n */\n\n\nclass WatchStream {\n  constructor() {\n    this._state = WatchStreamState.NEED_DATA;\n    this._error = null; // Used by feedBuffer to construct lines\n\n    this._textDecoder = new (getEnvironment().TextDecoder)();\n    this._buffer = \"\";\n    this._bufferOffset = 0; // Used by feedLine for building the next SSE\n\n    this._eventType = \"\";\n    this._dataBuffer = \"\";\n  } // Call these when you have data, in whatever shape is easiest for your SDK to get.\n  // Pick one, mixing and matching on a single instance isn't supported.\n  // These can only be called in NEED_DATA state, which is the initial state.\n\n\n  feedBuffer(buffer) {\n    this.assertState(WatchStreamState.NEED_DATA);\n    this._buffer += this._textDecoder.decode(buffer, {\n      stream: true\n    });\n    this.advanceBufferState();\n  }\n\n  feedLine(line) {\n    this.assertState(WatchStreamState.NEED_DATA); // This is an implementation of the algorithm described at\n    // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation.\n    // Currently the server does not use id or retry lines, so that processing isn't implemented.\n    // ignore trailing LF if not removed by SDK.\n\n    if (line.endsWith(\"\\n\")) line = line.substr(0, line.length - 1); // ignore trailing CR from CRLF\n\n    if (line.endsWith(\"\\r\")) line = line.substr(0, line.length - 1);\n\n    if (line.length === 0) {\n      // This is the \"dispatch the event\" portion of the algorithm.\n      if (this._dataBuffer.length === 0) {\n        this._eventType = \"\";\n        return;\n      }\n\n      if (this._dataBuffer.endsWith(\"\\n\")) this._dataBuffer = this._dataBuffer.substr(0, this._dataBuffer.length - 1);\n      this.feedSse({\n        data: this._dataBuffer,\n        eventType: this._eventType\n      });\n      this._dataBuffer = \"\";\n      this._eventType = \"\";\n    }\n\n    if (line[0] === \":\") return;\n    const colon = line.indexOf(\":\");\n    const field = line.substr(0, colon);\n    let value = colon === -1 ? \"\" : line.substr(colon + 1);\n    if (value.startsWith(\" \")) value = value.substr(1);\n\n    if (field === \"event\") {\n      this._eventType = value;\n    } else if (field === \"data\") {\n      this._dataBuffer += value;\n      this._dataBuffer += \"\\n\";\n    } else ;\n  }\n\n  feedSse(sse) {\n    this.assertState(WatchStreamState.NEED_DATA);\n    const firstPercentIndex = sse.data.indexOf(\"%\");\n\n    if (firstPercentIndex !== -1) {\n      // For some reason, the stich server decided to add percent-encoding for '%', '\\n', and '\\r' to its\n      // event-stream replies. But it isn't real urlencoding, since most characters pass through, so we can't use\n      // uri_percent_decode() here.\n      let buffer = \"\";\n      let start = 0;\n\n      for (let percentIndex = firstPercentIndex; percentIndex !== -1; percentIndex = sse.data.indexOf(\"%\", start)) {\n        buffer += sse.data.substr(start, percentIndex - start);\n        const encoded = sse.data.substr(percentIndex, 3); // may be smaller than 3 if string ends with %\n\n        if (encoded === \"%25\") {\n          buffer += \"%\";\n        } else if (encoded === \"%0A\") {\n          buffer += \"\\x0A\"; // '\\n'\n        } else if (encoded === \"%0D\") {\n          buffer += \"\\x0D\"; // '\\r'\n        } else {\n          buffer += encoded; // propagate as-is\n        }\n\n        start = percentIndex + encoded.length;\n      } // Advance the buffer with the last part\n\n\n      buffer += sse.data.substr(start);\n      sse.data = buffer;\n    }\n\n    if (!sse.eventType || sse.eventType === \"message\") {\n      try {\n        const parsed = EJSON.parse(sse.data);\n\n        if (typeof parsed === \"object\") {\n          // ???\n          this._nextEvent = parsed;\n          this._state = WatchStreamState.HAVE_EVENT;\n          return;\n        }\n      } catch {// fallthrough to same handling as for non-document value.\n      }\n\n      this._state = WatchStreamState.HAVE_ERROR;\n      this._error = new WatchError({\n        message: \"server returned malformed event: \" + sse.data,\n        code: \"bad bson parse\"\n      });\n    } else if (sse.eventType === \"error\") {\n      this._state = WatchStreamState.HAVE_ERROR; // default error message if we have issues parsing the reply.\n\n      this._error = new WatchError({\n        message: sse.data,\n        code: \"unknown\"\n      });\n\n      try {\n        const {\n          error_code: errorCode,\n          error\n        } = EJSON.parse(sse.data);\n        if (typeof errorCode !== \"string\") return;\n        if (typeof error !== \"string\") return; // XXX in realm-js, object-store will error if the error_code is not one of the known\n        // error code enum values.\n\n        this._error = new WatchError({\n          message: error,\n          code: errorCode\n        });\n      } catch {\n        return; // Use the default state.\n      }\n    } else ;\n  }\n\n  get state() {\n    return this._state;\n  } // Consumes the returned event. If you used feedBuffer(), there may be another event or error after this one,\n  // so you need to call state() again to see what to do next.\n\n\n  nextEvent() {\n    this.assertState(WatchStreamState.HAVE_EVENT); // We can use \"as ChangeEvent<T>\" since we just asserted the state.\n\n    const out = this._nextEvent;\n    this._state = WatchStreamState.NEED_DATA;\n    this.advanceBufferState();\n    return out;\n  } // Once this enters the error state, it stays that way. You should not feed any more data.\n\n\n  get error() {\n    return this._error;\n  } ////////////////////////////////////////////\n\n\n  advanceBufferState() {\n    this.assertState(WatchStreamState.NEED_DATA);\n\n    while (this.state === WatchStreamState.NEED_DATA) {\n      if (this._bufferOffset === this._buffer.length) {\n        this._buffer = \"\";\n        this._bufferOffset = 0;\n        return;\n      } // NOTE not supporting CR-only newlines, just LF and CRLF.\n\n\n      const nextNewlineIndex = this._buffer.indexOf(\"\\n\", this._bufferOffset);\n\n      if (nextNewlineIndex === -1) {\n        // We have a partial line.\n        if (this._bufferOffset !== 0) {\n          // Slide the partial line down to the front of the buffer.\n          this._buffer = this._buffer.substr(this._bufferOffset, this._buffer.length - this._bufferOffset);\n          this._bufferOffset = 0;\n        }\n\n        return;\n      }\n\n      this.feedLine(this._buffer.substr(this._bufferOffset, nextNewlineIndex - this._bufferOffset));\n      this._bufferOffset = nextNewlineIndex + 1; // Advance past this line, including its newline.\n    }\n  }\n\n  assertState(state) {\n    if (this._state !== state) {\n      throw Error(`Expected WatchStream to be in state ${state}, but in state ${this._state}`);\n    }\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * A remote collection of documents.\n */\n\n\nclass MongoDBCollection {\n  /**\n   * Construct a remote collection of documents.\n   *\n   * @param fetcher The fetcher to use when requesting the service.\n   * @param serviceName The name of the remote service.\n   * @param databaseName The name of the database.\n   * @param collectionName The name of the remote collection.\n   */\n  constructor(fetcher, serviceName, databaseName, collectionName) {\n    this.functions = FunctionsFactory.create(fetcher, {\n      serviceName\n    });\n    this.databaseName = databaseName;\n    this.collectionName = collectionName;\n    this.serviceName = serviceName;\n    this.fetcher = fetcher;\n  }\n  /** @inheritdoc */\n\n\n  find(filter = {}, options = {}) {\n    return this.functions.find({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      project: options.projection,\n      sort: options.sort,\n      limit: options.limit\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOne(filter = {}, options = {}) {\n    return this.functions.findOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      project: options.projection,\n      sort: options.sort\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOneAndUpdate(filter = {}, update, options = {}) {\n    return this.functions.findOneAndUpdate({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter,\n      update,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOneAndReplace(filter = {}, replacement, options = {}) {\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter: filter,\n      update: replacement,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOneAndDelete(filter = {}, options = {}) {\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter,\n      sort: options.sort,\n      projection: options.projection\n    });\n  }\n  /** @inheritdoc */\n\n\n  aggregate(pipeline) {\n    return this.functions.aggregate({\n      database: this.databaseName,\n      collection: this.collectionName,\n      pipeline\n    });\n  }\n  /** @inheritdoc */\n\n\n  count(filter = {}, options = {}) {\n    return this.functions.count({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      limit: options.limit\n    });\n  }\n  /** @inheritdoc */\n\n\n  insertOne(document) {\n    return this.functions.insertOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      document\n    });\n  }\n  /** @inheritdoc */\n\n\n  insertMany(documents) {\n    return this.functions.insertMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      documents\n    });\n  }\n  /** @inheritdoc */\n\n\n  deleteOne(filter = {}) {\n    return this.functions.deleteOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter\n    });\n  }\n  /** @inheritdoc */\n\n\n  deleteMany(filter = {}) {\n    return this.functions.deleteMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter\n    });\n  }\n  /** @inheritdoc */\n\n\n  updateOne(filter, update, options = {}) {\n    return this.functions.updateOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      update,\n      upsert: options.upsert\n    });\n  }\n  /** @inheritdoc */\n\n\n  updateMany(filter, update, options = {}) {\n    return this.functions.updateMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      update,\n      upsert: options.upsert\n    });\n  }\n\n  watch({\n    ids,\n    filter\n  } = {}) {\n    var _this = this;\n\n    return _wrapAsyncGenerator(function* () {\n      const iterator = yield _awaitAsyncGenerator(_this.functions.callFunctionStreaming(\"watch\", {\n        database: _this.databaseName,\n        collection: _this.collectionName,\n        ids,\n        filter\n      }));\n      const watchStream = new WatchStream();\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n\n      var _iteratorError;\n\n      try {\n        for (var _iterator = _asyncIterator(iterator), _step; _iteratorAbruptCompletion = !(_step = yield _awaitAsyncGenerator(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n          const chunk = _step.value;\n          if (!chunk) continue;\n          watchStream.feedBuffer(chunk);\n\n          while (watchStream.state == WatchStreamState.HAVE_EVENT) {\n            yield watchStream.nextEvent();\n          }\n\n          if (watchStream.state == WatchStreamState.HAVE_ERROR) // XXX this is just throwing an error like {error_code: \"BadRequest, error: \"message\"},\n            // which matches realm-js, but is different from how errors are handled in realm-web\n            throw watchStream.error;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            yield _awaitAsyncGenerator(_iterator.return());\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    })();\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\n\n\nfunction createCollection(fetcher, serviceName, databaseName, collectionName) {\n  return new MongoDBCollection(fetcher, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\n\n\nfunction createDatabase(fetcher, serviceName, databaseName) {\n  return {\n    collection: createCollection.bind(null, fetcher, serviceName, databaseName)\n  };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName An optional service name.\n * @returns The service.\n */\n\n\nfunction createService(fetcher, serviceName = \"mongo-db\") {\n  return {\n    db: createDatabase.bind(null, fetcher, serviceName)\n  };\n} ////////////////////////////////////////////////////////////////////////////\n\n\nconst DEFAULT_DEVICE_ID = \"000000000000000000000000\";\n/** The state of a user within the app */\n\nvar UserState;\n\n(function (UserState) {\n  /** Active, with both access and refresh tokens */\n  UserState[\"Active\"] = \"active\";\n  /** Logged out, but there might still be data persisted about the user, in the browser. */\n\n  UserState[\"LoggedOut\"] = \"logged-out\";\n  /** Logged out and all data about the user has been removed. */\n\n  UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\n/** The type of a user. */\n\n\nvar UserType$1;\n\n(function (UserType) {\n  /** Created by the user itself. */\n  UserType[\"Normal\"] = \"normal\";\n  /** Created by an administrator of the app. */\n\n  UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\n/**\n * Representation of an authenticated user of an app.\n */\n\n\nclass User {\n  /**\n   * @param parameters Parameters of the user.\n   */\n  constructor(parameters) {\n    this.app = parameters.app;\n    this.id = parameters.id;\n    this.storage = new UserStorage(this.app.storage, this.id);\n\n    if (\"accessToken\" in parameters && \"refreshToken\" in parameters && \"providerType\" in parameters) {\n      this._accessToken = parameters.accessToken;\n      this._refreshToken = parameters.refreshToken;\n      this.providerType = parameters.providerType; // Save the parameters to storage, for future instances to be hydrated from\n\n      this.storage.accessToken = parameters.accessToken;\n      this.storage.refreshToken = parameters.refreshToken;\n      this.storage.providerType = parameters.providerType;\n    } else {\n      // Hydrate the rest of the parameters from storage\n      this._accessToken = this.storage.accessToken;\n      this._refreshToken = this.storage.refreshToken;\n      const providerType = this.storage.providerType;\n      this._profile = this.storage.profile;\n\n      if (providerType) {\n        this.providerType = providerType;\n      } else {\n        throw new Error(\"Storage is missing a provider type\");\n      }\n    }\n\n    this.fetcher = this.app.fetcher.clone({\n      userContext: {\n        currentUser: this\n      }\n    });\n    this.apiKeys = new ApiKeyAuth(this.fetcher);\n    this.functions = FunctionsFactory.create(this.fetcher);\n  }\n  /**\n   * @returns The access token used to authenticate the user towards MongoDB Realm.\n   */\n\n\n  get accessToken() {\n    return this._accessToken;\n  }\n  /**\n   * @param token The new access token.\n   */\n\n\n  set accessToken(token) {\n    this._accessToken = token;\n    this.storage.accessToken = token;\n  }\n  /**\n   * @returns The refresh token used to issue new access tokens.\n   */\n\n\n  get refreshToken() {\n    return this._refreshToken;\n  }\n  /**\n   * @param token The new refresh token.\n   */\n\n\n  set refreshToken(token) {\n    this._refreshToken = token;\n    this.storage.refreshToken = token;\n  }\n  /**\n   * @returns The current state of the user.\n   */\n\n\n  get state() {\n    if (this.id in this.app.allUsers) {\n      return this.refreshToken === null ? UserState.LoggedOut : UserState.Active;\n    } else {\n      return UserState.Removed;\n    }\n  }\n  /**\n   * @returns The logged in state of the user.\n   */\n\n\n  get isLoggedIn() {\n    return this.state === UserState.Active;\n  }\n\n  get customData() {\n    if (this.accessToken) {\n      const decodedToken = this.decodeAccessToken();\n      return decodedToken.userData;\n    } else {\n      throw new Error(\"Cannot read custom data without an access token\");\n    }\n  }\n  /**\n   * @returns Profile containing detailed information about the user.\n   */\n\n\n  get profile() {\n    if (this._profile) {\n      return this._profile.data;\n    } else {\n      throw new Error(\"A profile was never fetched for this user\");\n    }\n  }\n\n  get identities() {\n    if (this._profile) {\n      return this._profile.identities;\n    } else {\n      throw new Error(\"A profile was never fetched for this user\");\n    }\n  }\n\n  get deviceId() {\n    if (this.accessToken) {\n      const payload = this.accessToken.split(\".\")[1];\n\n      if (payload) {\n        const parsedPayload = JSON.parse(base64.Base64.decode(payload));\n        const deviceId = parsedPayload[\"baas_device_id\"];\n\n        if (typeof deviceId === \"string\" && deviceId !== DEFAULT_DEVICE_ID) {\n          return deviceId;\n        }\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Refresh the users profile data.\n   */\n\n\n  refreshProfile() {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      // Fetch the latest profile\n      const response = yield _this13.fetcher.fetchJSON({\n        method: \"GET\",\n        path: routes.api().auth().profile().path\n      }); // Create a profile instance\n\n      _this13._profile = new UserProfile(response); // Store this for later hydration\n\n      _this13.storage.profile = _this13._profile;\n    })();\n  }\n  /**\n   * Log out the user, invalidating the session (and its refresh token).\n   */\n\n\n  logOut() {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      // Invalidate the refresh token\n      try {\n        if (_this14._refreshToken !== null) {\n          yield _this14.fetcher.fetchJSON({\n            method: \"DELETE\",\n            path: routes.api().auth().session().path,\n            tokenType: \"refresh\"\n          });\n        }\n      } finally {\n        // Forget the access and refresh token\n        _this14.accessToken = null;\n        _this14.refreshToken = null;\n      }\n    })();\n  }\n  /** @inheritdoc */\n\n\n  linkCredentials(credentials) {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      const response = yield _this15.app.authenticator.authenticate(credentials, _this15); // Sanity check the response\n\n      if (_this15.id !== response.userId) {\n        const details = `got user id ${response.userId} expected ${_this15.id}`;\n        throw new Error(`Link response ment for another user (${details})`);\n      } // Update the access token\n\n\n      _this15.accessToken = response.accessToken; // Refresh the profile to include the new identity\n\n      yield _this15.refreshProfile();\n    })();\n  }\n  /**\n   * Request a new access token, using the refresh token.\n   */\n\n\n  refreshAccessToken() {\n    var _this16 = this;\n\n    return _asyncToGenerator(function* () {\n      const response = yield _this16.fetcher.fetchJSON({\n        method: \"POST\",\n        path: routes.api().auth().session().path,\n        tokenType: \"refresh\"\n      });\n      const {\n        access_token: accessToken\n      } = response;\n\n      if (typeof accessToken === \"string\") {\n        _this16.accessToken = accessToken;\n      } else {\n        throw new Error(\"Expected an 'access_token' in the response\");\n      }\n    })();\n  }\n  /** @inheritdoc */\n\n\n  refreshCustomData() {\n    var _this17 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this17.refreshAccessToken();\n      return _this17.customData;\n    })();\n  }\n  /** @inheritdoc */\n\n\n  callFunction(name, ...args) {\n    return this.functions.callFunction(name, ...args);\n  }\n  /**\n   * @returns A plain ol' JavaScript object representation of the user.\n   */\n\n\n  toJSON() {\n    return {\n      id: this.id,\n      accessToken: this.accessToken,\n      refreshToken: this.refreshToken,\n      profile: this._profile,\n      state: this.state,\n      customData: this.customData\n    };\n  }\n  /** @inheritdoc */\n\n\n  push(serviceName = \"\") {\n    throw new Error(\"Not yet implemented\");\n  }\n  /** @inheritdoc */\n\n\n  mongoClient(serviceName) {\n    return createService(this.fetcher, serviceName);\n  }\n\n  decodeAccessToken() {\n    if (this.accessToken) {\n      // Decode and spread the token\n      const parts = this.accessToken.split(\".\");\n\n      if (parts.length !== 3) {\n        throw new Error(\"Expected an access token with three parts\");\n      } // Decode the payload\n\n\n      const encodedPayload = parts[1];\n      const decodedPayload = base64.Base64.decode(encodedPayload);\n      const parsedPayload = JSON.parse(decodedPayload);\n      const {\n        exp: expires,\n        iat: issuedAt,\n        sub: subject,\n        user_data: userData = {}\n      } = parsedPayload; // Validate the types\n\n      if (typeof expires !== \"number\") {\n        throw new Error(\"Failed to decode access token 'exp'\");\n      } else if (typeof issuedAt !== \"number\") {\n        throw new Error(\"Failed to decode access token 'iat'\");\n      }\n\n      return {\n        expires,\n        issuedAt,\n        subject,\n        userData\n      };\n    } else {\n      throw new Error(\"Missing an access token\");\n    }\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\n\n\nclass Credentials {\n  /**\n   * Constructs an instance of credentials.\n   *\n   * @param providerName The name of the authentication provider used when authenticating.\n   * @param providerType The type of the authentication provider used when authenticating.\n   * @param payload The data being sent to the service when authenticating.\n   */\n  constructor(providerName, providerType, payload) {\n    this.providerName = providerName;\n    this.providerType = providerType;\n    this.payload = payload;\n  }\n  /**\n   * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n   *\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static anonymous() {\n    return new Credentials(\"anon-user\", \"anon-user\", {});\n  }\n  /**\n   * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n   *\n   * @deprecated Use `Credentials.apiKey`.\n   *\n   * @param key The secret content of the API key.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static userApiKey(key) {\n    return new Credentials(\"api-key\", \"api-key\", {\n      key\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n   *\n   * @deprecated Use `Credentials.apiKey`.\n   *\n   * @param key The secret content of the API key.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static serverApiKey(key) {\n    return new Credentials(\"api-key\", \"api-key\", {\n      key\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n   *\n   * @param key The secret content of the API key.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static apiKey(key) {\n    return new Credentials(\"api-key\", \"api-key\", {\n      key\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n   * Note: This was formerly known as the \"Username/Password\" provider.\n   *\n   * @param email The end-users email address.\n   * @param password The end-users password.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static emailPassword(email, password) {\n    return new Credentials(\"local-userpass\", \"local-userpass\", {\n      username: email,\n      password\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n   *\n   * @param payload The custom payload as expected by the server.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static function(payload) {\n    return new Credentials(\"custom-function\", \"custom-function\", payload);\n  }\n  /**\n   * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n   *\n   * @param token The JSON Web Token (JWT).\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static jwt(token) {\n    return new Credentials(\"custom-token\", \"custom-token\", {\n      token\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n   *\n   * @param payload The URL that users should be redirected to, the auth code or id token from Google.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static google(payload) {\n    return new Credentials(\"oauth2-google\", \"oauth2-google\", Credentials.derivePayload(payload));\n  }\n  /**\n   * @param payload The payload string.\n   * @returns A payload object based on the string.\n   */\n\n\n  static derivePayload(payload) {\n    if (typeof payload === \"string\") {\n      if (payload.includes(\"://\")) {\n        return this.derivePayload({\n          redirectUrl: payload\n        });\n      } else if (payload.startsWith(\"4/\")) {\n        return this.derivePayload({\n          authCode: payload\n        });\n      } else if (payload.startsWith(\"ey\")) {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        return this.derivePayload({\n          idToken: payload\n        });\n      } else {\n        throw new Error(`Unexpected payload: ${payload}`);\n      }\n    } else if (Object.keys(payload).length === 1) {\n      if (\"authCode\" in payload || \"redirectUrl\" in payload) {\n        return payload;\n      } else if (\"idToken\" in payload) {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        return {\n          id_token: payload.idToken\n        };\n      } else {\n        throw new Error(\"Unexpected payload: \" + JSON.stringify(payload));\n      }\n    } else {\n      throw new Error(\"Expected only one property in payload, got \" + JSON.stringify(payload));\n    }\n  }\n  /**\n   * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n   *\n   * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static facebook(redirectUrlOrAccessToken) {\n    return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\") ? {\n      redirectUrl: redirectUrlOrAccessToken\n    } : {\n      accessToken: redirectUrlOrAccessToken\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n   *\n   * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static apple(redirectUrlOrIdToken) {\n    return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\") ? {\n      redirectUrl: redirectUrlOrIdToken\n    } : {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      id_token: redirectUrlOrIdToken\n    });\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n\nconst USER_IDS_STORAGE_KEY = \"userIds\";\nconst DEVICE_ID_STORAGE_KEY = \"deviceId\";\n/**\n * Storage specific to the app.\n */\n\nclass AppStorage extends PrefixedStorage {\n  /**\n   * @param storage The underlying storage to wrap.\n   * @param appId The id of the app.\n   */\n  constructor(storage, appId) {\n    super(storage, `app(${appId})`);\n  }\n  /**\n   * Reads out the list of user ids from storage.\n   *\n   * @returns A list of user ids.\n   */\n\n\n  getUserIds() {\n    const userIdsString = this.get(USER_IDS_STORAGE_KEY);\n    const userIds = userIdsString ? JSON.parse(userIdsString) : [];\n\n    if (Array.isArray(userIds)) {\n      // Remove any duplicates that might have been added\n      // The Set preserves insertion order\n      return [...new Set(userIds)];\n    } else {\n      throw new Error(\"Expected the user ids to be an array\");\n    }\n  }\n  /**\n   * Sets the list of ids in storage.\n   * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n   *\n   * @param userIds The list of ids to store.\n   * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n   */\n\n\n  setUserIds(userIds, mergeWithExisting) {\n    if (mergeWithExisting) {\n      // Add any existing user id to the end of this list, avoiding duplicates\n      const existingIds = this.getUserIds();\n\n      for (const id of existingIds) {\n        if (userIds.indexOf(id) === -1) {\n          userIds.push(id);\n        }\n      }\n    } // Store the list of ids\n\n\n    this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n  }\n  /**\n   * Remove an id from the list of ids.\n   *\n   * @param userId The id of a User to be removed.\n   */\n\n\n  removeUserId(userId) {\n    const existingIds = this.getUserIds();\n    const userIds = existingIds.filter(id => id !== userId); // Store the list of ids\n\n    this.setUserIds(userIds, false);\n  }\n  /**\n   * @returns id of this device (if any exists)\n   */\n\n\n  getDeviceId() {\n    return this.get(DEVICE_ID_STORAGE_KEY);\n  }\n  /**\n   * @param deviceId The id of this device, to send on subsequent authentication requests.\n   */\n\n\n  setDeviceId(deviceId) {\n    this.set(DEVICE_ID_STORAGE_KEY, deviceId);\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nconst LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nconst CLOSE_CHECK_INTERVAL = 100; // 10 times per second\n\n/* eslint-disable @typescript-eslint/camelcase */\n\nconst REDIRECT_HASH_TO_RESULT = {\n  _stitch_client_app_id: \"appId\",\n  _baas_client_app_id: \"appId\",\n  _stitch_ua: \"userAuth\",\n  _baas_ua: \"userAuth\",\n  _stitch_link: \"link\",\n  _baas_link: \"link\",\n  _stitch_error: \"error\",\n  _baas_error: \"error\",\n  _stitch_state: \"state\",\n  _baas_state: \"state\"\n};\n/* eslint-enable @typescript-eslint/camelcase */\n\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\n\nclass OAuth2Helper {\n  /**\n   * @param storage The underlying storage to use when storing and retriving secrets.\n   * @param openWindow An optional function called when a browser window needs to open.\n   */\n  constructor(storage, openWindow = getEnvironment().openWindow) {\n    this.storage = storage.prefix(\"oauth2\");\n    this.openWindow = openWindow;\n  }\n  /**\n   * Parses the query string from the final step of the OAuth flow.\n   *\n   * @param queryString The query string passed through in location.hash.\n   * @returns The result of the OAuth flow.\n   */\n\n\n  static parseRedirectLocation(queryString) {\n    const params = decodeQueryString(queryString);\n    const result = {};\n\n    for (const [p, r] of Object.entries(REDIRECT_HASH_TO_RESULT)) {\n      const value = params[p];\n\n      if (value) {\n        result[r] = value;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Handle the redirect querystring by parsing it and storing it for others to consume.\n   *\n   * @param queryString The query string containing the encoded result from the OAuth provider.\n   * @param storage The underlying storage used to persist the result.\n   */\n\n\n  static handleRedirect(queryString, storage = getEnvironment().defaultStorage) {\n    const result = OAuth2Helper.parseRedirectLocation(queryString);\n    const {\n      state,\n      error\n    } = result;\n\n    if (typeof state === \"string\") {\n      const oauth2Storage = storage.prefix(\"oauth2\");\n      const stateStorage = OAuth2Helper.getStateStorage(oauth2Storage, state);\n      stateStorage.set(\"result\", JSON.stringify(result));\n    } else if (error) {\n      throw new Error(`Failed to handle OAuth 2.0 redirect: ${error}`);\n    } else {\n      throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n    }\n  }\n  /**\n   * Decodes the authInfo string into its seperate parts.\n   *\n   * @param authInfo An authInfo string returned from the server.\n   * @returns An object containing the separate parts of the authInfo string.\n   */\n\n\n  static decodeAuthInfo(authInfo) {\n    const parts = (authInfo || \"\").split(\"$\");\n\n    if (parts.length === 4) {\n      const [accessToken, refreshToken, userId, deviceId] = parts;\n      return {\n        accessToken,\n        refreshToken,\n        userId,\n        deviceId\n      };\n    } else {\n      throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n    }\n  }\n  /**\n   * Get the storage key associated of an secret associated with a state.\n   *\n   * @param storage The root storage used to derive a \"state namespaced\" storage.\n   * @param state The random state.\n   * @returns The storage associated with a particular state.\n   */\n\n\n  static getStateStorage(storage, state) {\n    return storage.prefix(`state(${state})`);\n  }\n  /**\n   * Open a window and wait for the redirect to be handled.\n   *\n   * @param url The URL to open.\n   * @param state The state which will be used to listen for storage updates.\n   * @returns The result passed through the redirect.\n   */\n\n\n  openWindowAndWaitForRedirect(url, state) {\n    const stateStorage = OAuth2Helper.getStateStorage(this.storage, state); // Return a promise that resolves when the  gets known\n\n    return new Promise((resolve, reject) => {\n      let redirectWindow = null; // We're declaring the interval now to enable referencing before its initialized\n\n      let windowClosedInterval; // eslint-disable-line prefer-const\n\n      const handleStorageUpdate = () => {\n        // Trying to get the secret from storage\n        const result = stateStorage.get(\"result\");\n\n        if (result) {\n          const parsedResult = JSON.parse(result); // The secret got updated!\n\n          stateStorage.removeListener(handleStorageUpdate); // Clear the storage to prevent others from reading this\n\n          stateStorage.clear(); // Try closing the newly created window\n\n          try {\n            if (redirectWindow) {\n              // Stop checking if the window closed\n              clearInterval(windowClosedInterval);\n              redirectWindow.close();\n            }\n          } catch (err) {\n            console.warn(`Failed closing redirect window: ${err}`);\n          } finally {\n            resolve(parsedResult);\n          }\n        }\n      }; // Add a listener to the state storage, awaiting an update to the secret\n\n\n      stateStorage.addListener(handleStorageUpdate); // Open up a window\n\n      redirectWindow = this.openWindow(url); // Not using a const, because we need the two listeners to reference each other when removing the other.\n\n      windowClosedInterval = setInterval(() => {\n        // Polling \"closed\" because registering listeners on the window violates cross-origin policies\n        if (!redirectWindow) {\n          // No need to keep polling for a window that we can't check\n          clearInterval(windowClosedInterval);\n        } else if (redirectWindow.closed) {\n          // Stop polling the window state\n          clearInterval(windowClosedInterval); // Stop listening for changes to the storage\n\n          stateStorage.removeListener(handleStorageUpdate); // Reject the promise\n\n          const err = new Error(\"Window closed\");\n          reject(err);\n        }\n      }, CLOSE_CHECK_INTERVAL);\n    });\n  }\n  /**\n   * Generate a random state string.\n   *\n   * @returns The random state string.\n   */\n\n\n  generateState() {\n    return generateRandomString(12, LOWERCASE_LETTERS);\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n\nconst REDIRECT_LOCATION_HEADER = \"x-baas-location\";\n/**\n * Handles authentication and linking of users.\n */\n\nclass Authenticator {\n  /**\n   * @param fetcher The fetcher used to fetch responses from the server.\n   * @param storage The storage used when completing OAuth 2.0 flows (should not be scoped to a specific app).\n   * @param getDeviceInformation Called to get device information to be sent to the server.\n   */\n  constructor(fetcher, storage, getDeviceInformation) {\n    this.fetcher = fetcher;\n    this.oauth2 = new OAuth2Helper(storage);\n    this.getDeviceInformation = getDeviceInformation;\n  }\n  /**\n   * @param credentials Credentials to use when logging in.\n   * @param linkingUser A user requesting to link.\n   */\n\n\n  authenticate(credentials, linkingUser) {\n    var _this18 = this;\n\n    return _asyncToGenerator(function* () {\n      const deviceInformation = _this18.getDeviceInformation();\n\n      const isLinking = typeof linkingUser === \"object\";\n\n      if (credentials.providerType.startsWith(\"oauth2\") && typeof credentials.payload.redirectUrl === \"string\") {\n        // Initiate the OAuth2 flow by generating a state and fetch a redirect URL\n        const state = _this18.oauth2.generateState();\n\n        const url = yield _this18.getLogInUrl(credentials, isLinking, {\n          state,\n          redirect: credentials.payload.redirectUrl,\n          // Ensure redirects are communicated in a header different from \"Location\" and status remains 200 OK\n          providerRedirectHeader: isLinking ? true : undefined,\n          // Add the device information, only if we're not linking - since that request won't have a body of its own.\n          device: !isLinking ? deviceInformation.encode() : undefined\n        }); // If we're linking, we need to send the users access token in the request\n\n        if (isLinking) {\n          const response = yield _this18.fetcher.fetch({\n            method: \"GET\",\n            url,\n            tokenType: isLinking ? \"access\" : \"none\",\n            user: linkingUser,\n            // The response will set a cookie that we need to tell the browser to store\n            mode: \"cors\",\n            credentials: \"include\"\n          }); // If a response header contains a redirect URL: Open a window and wait for the redirect to be handled\n\n          const redirectUrl = response.headers.get(REDIRECT_LOCATION_HEADER);\n\n          if (redirectUrl) {\n            return _this18.openWindowAndWaitForAuthResponse(redirectUrl, state);\n          } else {\n            throw new Error(`Missing ${REDIRECT_LOCATION_HEADER} header`);\n          }\n        } else {\n          // Otherwise we can open a window and let the server redirect the user right away\n          // This gives lower latency (as we don't need the client to receive and execute the redirect in code)\n          // This also has less dependency on cookies and doesn't sent any tokens.\n          return _this18.openWindowAndWaitForAuthResponse(url, state);\n        }\n      } else {\n        const logInUrl = yield _this18.getLogInUrl(credentials, isLinking);\n        const response = yield _this18.fetcher.fetchJSON({\n          method: \"POST\",\n          url: logInUrl,\n          body: { ...credentials.payload,\n            options: {\n              device: deviceInformation.toJSON()\n            }\n          },\n          tokenType: isLinking ? \"access\" : \"none\",\n          user: linkingUser\n        }); // Spread out values from the response and ensure they're valid\n\n        const {\n          user_id: userId,\n          access_token: accessToken,\n          refresh_token: refreshToken = null,\n          device_id: deviceId\n        } = response;\n\n        if (typeof userId !== \"string\") {\n          throw new Error(\"Expected a user id in the response\");\n        }\n\n        if (typeof accessToken !== \"string\") {\n          throw new Error(\"Expected an access token in the response\");\n        }\n\n        return {\n          userId,\n          accessToken,\n          refreshToken,\n          deviceId\n        };\n      }\n    })();\n  }\n  /**\n   * @param credentials Credentials to use when logging in.\n   * @param link Should the request link with the current user?\n   * @param extraQueryParams Any extra parameters to include in the query string\n   */\n\n\n  getLogInUrl(credentials, link = false, extraQueryParams = {}) {\n    var _this19 = this;\n\n    return _asyncToGenerator(function* () {\n      // See https://github.com/mongodb/stitch-js-sdk/blob/310f0bd5af80f818cdfbc3caf1ae29ffa8e9c7cf/packages/core/sdk/src/auth/internal/CoreStitchAuth.ts#L746-L780\n      const appRoute = _this19.fetcher.appRoute;\n      const loginRoute = appRoute.authProvider(credentials.providerName).login();\n      const qs = encodeQueryString({\n        link: link ? \"true\" : undefined,\n        ...extraQueryParams\n      });\n      const locationUrl = yield _this19.fetcher.locationUrl;\n      return locationUrl + loginRoute.path + qs;\n    })();\n  }\n\n  openWindowAndWaitForAuthResponse(redirectUrl, state) {\n    var _this20 = this;\n\n    return _asyncToGenerator(function* () {\n      const redirectResult = yield _this20.oauth2.openWindowAndWaitForRedirect(redirectUrl, state); // Decode the auth info (id, tokens, etc.) from the result of the redirect\n\n      return OAuth2Helper.decodeAuthInfo(redirectResult.userAuth);\n    })();\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Determine if the shape of an error response is specific to each service or widely used.\n\n/**\n * An error produced while communicating with the MongoDB Realm server.\n */\n\n\nclass MongoDBRealmError extends Error {\n  constructor(method, url, statusCode, statusText, error, errorCode, link) {\n    const summary = statusText ? `status ${statusCode} ${statusText}` : `status ${statusCode}`;\n\n    if (typeof error === \"string\") {\n      super(`Request failed (${method} ${url}): ${error} (${summary})`);\n    } else {\n      super(`Request failed (${method} ${url}): (${summary})`);\n    }\n\n    this.method = method;\n    this.url = url;\n    this.statusText = statusText;\n    this.statusCode = statusCode;\n    this.error = error;\n    this.errorCode = errorCode;\n    this.link = link;\n  }\n  /**\n   * Constructs and returns an error from a request and a response.\n   * Note: The caller must throw this error themselves.\n   *\n   * @param request The request sent to the server.\n   * @param response A raw response, as returned from the server.\n   */\n\n\n  static fromRequestAndResponse(request, response) {\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const {\n        url,\n        method\n      } = request;\n      const {\n        status,\n        statusText\n      } = response;\n\n      if ((_a = response.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.startsWith(\"application/json\")) {\n        const body = yield response.json();\n        const error = body.error || \"No message\";\n        const errorCode = body.error_code;\n        const link = body.link;\n        return new MongoDBRealmError(method, url, status, statusText, error, errorCode, link);\n      } else {\n        return new MongoDBRealmError(method, url, status, statusText);\n      }\n    })();\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * @param body A possible resonse body.\n * @returns An async iterator.\n */\n\n\nfunction asyncIteratorFromResponseBody(body) {\n  if (typeof body !== \"object\" || body === null) {\n    throw new Error(\"Expected a non-null object\");\n  } else if (Symbol.asyncIterator in body) {\n    return body;\n  } else if (\"getReader\" in body) {\n    const stream = body;\n    return {\n      [Symbol.asyncIterator]() {\n        const reader = stream.getReader();\n        return {\n          next() {\n            return reader.read();\n          },\n\n          return() {\n            return _asyncToGenerator(function* () {\n              yield reader.cancel();\n              return {\n                done: true,\n                value: null\n              };\n            })();\n          }\n\n        };\n      }\n\n    };\n  } else {\n    throw new Error(\"Expected an AsyncIterable or a ReadableStream\");\n  }\n}\n/**\n * Wraps a NetworkTransport from the \"realm-network-transport\" package.\n * Extracts error messages and throws `MongoDBRealmError` objects upon failures.\n * Injects access or refresh tokens for a current or specific user.\n * Refreshes access tokens if requests fails due to a 401 error.\n * Optionally parses response as JSON before returning it.\n * Fetches and exposes an app's location url.\n */\n\n\nclass Fetcher {\n  /**\n   * @param config A configuration of the fetcher.\n   */\n  constructor({\n    appId,\n    transport,\n    userContext,\n    locationUrlContext\n  }) {\n    this.appId = appId;\n    this.transport = transport;\n    this.userContext = userContext;\n    this.locationUrlContext = locationUrlContext;\n  }\n  /**\n   * @param user An optional user to generate the header for.\n   * @param tokenType The type of token (access or refresh).\n   * @returns An object containing the user's token as \"Authorization\" header or undefined if no user is given.\n   */\n\n\n  static buildAuthorizationHeader(user, tokenType) {\n    if (!user || tokenType === \"none\") {\n      return {};\n    } else if (tokenType === \"access\") {\n      return {\n        Authorization: `Bearer ${user.accessToken}`\n      };\n    } else if (tokenType === \"refresh\") {\n      return {\n        Authorization: `Bearer ${user.refreshToken}`\n      };\n    } else {\n      throw new Error(`Unexpected token type (${tokenType})`);\n    }\n  }\n  /**\n   * @param body The body string or object passed from a request.\n   * @returns An object optionally specifying the \"Content-Type\" header.\n   */\n\n\n  static buildBody(body) {\n    if (!body) {\n      return;\n    } else if (typeof body === \"object\" && body !== null) {\n      return JSON.stringify(serialize(body));\n    } else if (typeof body === \"string\") {\n      return body;\n    } else {\n      console.log(\"body is\", body);\n      throw new Error(\"Unexpected type of body\");\n    }\n  }\n  /**\n   * @param body The body string or object passed from a request.\n   * @returns An object optionally specifying the \"Content-Type\" header.\n   */\n\n\n  static buildJsonHeader(body) {\n    if (body && body.length > 0) {\n      return {\n        \"Content-Type\": \"application/json\"\n      };\n    } else {\n      return {};\n    }\n  }\n\n  clone(config) {\n    return new Fetcher({\n      appId: this.appId,\n      transport: this.transport,\n      userContext: this.userContext,\n      locationUrlContext: this.locationUrlContext,\n      ...config\n    });\n  }\n  /**\n   * Fetch a network resource as an authenticated user.\n   *\n   * @param request The request which should be sent to the server.\n   * @returns The response from the server.\n   */\n\n\n  fetch(request) {\n    var _this21 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        path,\n        url,\n        tokenType = \"access\",\n        user = _this21.userContext.currentUser,\n        ...restOfRequest\n      } = request;\n\n      if (typeof path === \"string\" && typeof url === \"string\") {\n        throw new Error(\"Use of 'url' and 'path' mutually exclusive\");\n      } else if (typeof path === \"string\") {\n        // Derive the URL\n        const url = (yield _this21.locationUrlContext.locationUrl) + path;\n        return _this21.fetch({ ...request,\n          path: undefined,\n          url\n        });\n      } else if (typeof url === \"string\") {\n        const response = yield _this21.transport.fetch({ ...restOfRequest,\n          url,\n          headers: { ...Fetcher.buildAuthorizationHeader(user, tokenType),\n            ...request.headers\n          }\n        });\n\n        if (response.ok) {\n          return response;\n        } else if (user && response.status === 401 && tokenType === \"access\") {\n          // If the access token has expired, it would help refreshing it\n          yield user.refreshAccessToken(); // Retry with the specific user, since the currentUser might have changed.\n\n          return _this21.fetch({ ...request,\n            user\n          });\n        } else {\n          if (user && response.status === 401 && tokenType === \"refresh\") {\n            // A 401 error while using the refresh token indicates the token has an issue.\n            // Reset the tokens to prevent a lock.\n            user.accessToken = null;\n            user.refreshToken = null;\n          } // Throw an error with a message extracted from the body\n\n\n          throw yield MongoDBRealmError.fromRequestAndResponse(request, response);\n        }\n      } else {\n        throw new Error(\"Expected either 'url' or 'path'\");\n      }\n    })();\n  }\n  /**\n   * Fetch a network resource as an authenticated user and parse the result as extended JSON.\n   *\n   * @param request The request which should be sent to the server.\n   * @returns The response from the server, parsed as extended JSON.\n   */\n\n\n  fetchJSON(request) {\n    var _this22 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        body\n      } = request;\n      const serializedBody = Fetcher.buildBody(body);\n      const contentTypeHeaders = Fetcher.buildJsonHeader(serializedBody);\n      const response = yield _this22.fetch({ ...request,\n        body: serializedBody,\n        headers: {\n          Accept: \"application/json\",\n          ...contentTypeHeaders,\n          ...request.headers\n        }\n      });\n      const contentType = response.headers.get(\"content-type\");\n\n      if (contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(\"application/json\")) {\n        const responseBody = yield response.json();\n        return deserialize(responseBody);\n      } else if (contentType === null) {\n        return null;\n      } else {\n        throw new Error(`Expected JSON response, got \"${contentType}\"`);\n      }\n    })();\n  }\n  /**\n   * Fetch an \"event-stream\" resource as an authenticated user.\n   *\n   * @param request The request which should be sent to the server.\n   */\n\n\n  fetchStream(request) {\n    var _this23 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        body\n      } = yield _this23.fetch({ ...request,\n        headers: {\n          Accept: \"text/event-stream\",\n          ...request.headers\n        }\n      });\n      return asyncIteratorFromResponseBody(body);\n    })();\n  }\n  /**\n   * @returns The path of the app route.\n   */\n\n\n  get appRoute() {\n    return routes.api().app(this.appId);\n  }\n  /**\n   * @returns A promise of the location URL of the app.\n   */\n\n\n  get locationUrl() {\n    return this.locationUrlContext.locationUrl;\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * The key in a storage on which the device id is stored.\n */\n\n\nconst DEVICE_ID_STORAGE_KEY$1 = \"deviceId\";\nvar DeviceFields;\n\n(function (DeviceFields) {\n  DeviceFields[\"DEVICE_ID\"] = \"deviceId\";\n  DeviceFields[\"APP_ID\"] = \"appId\";\n  DeviceFields[\"APP_VERSION\"] = \"appVersion\";\n  DeviceFields[\"PLATFORM\"] = \"platform\";\n  DeviceFields[\"PLATFORM_VERSION\"] = \"platformVersion\";\n  DeviceFields[\"SDK_VERSION\"] = \"sdkVersion\";\n})(DeviceFields || (DeviceFields = {}));\n/**\n * Information describing the device, app and SDK.\n */\n\n\nclass DeviceInformation {\n  /**\n   * @param params Construct the device information from these parameters.\n   */\n  constructor({\n    appId,\n    appVersion,\n    deviceId\n  }) {\n    /**\n     * The version of the Realm Web SDK (constant provided by Rollup).\n     */\n    this.sdkVersion = \"1.3.0\";\n    const environment = getEnvironment();\n    this.platform = environment.platform;\n    this.platformVersion = environment.platformVersion;\n    this.appId = appId;\n    this.appVersion = appVersion;\n    this.deviceId = deviceId;\n  }\n  /**\n   * @returns An base64 URI encoded representation of the device information.\n   */\n\n\n  encode() {\n    const obj = removeKeysWithUndefinedValues(this);\n    return base64.Base64.encode(JSON.stringify(obj));\n  }\n  /**\n   * @returns The defaults\n   */\n\n\n  toJSON() {\n    return removeKeysWithUndefinedValues(this);\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\n\n\nconst DEFAULT_BASE_URL = \"https://stitch.mongodb.com\";\n/**\n * MongoDB Realm App\n */\n\nclass App {\n  /**\n   * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n   *\n   * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n   */\n  constructor(idOrConfiguration) {\n    /**\n     * An array of active and logged-out users.\n     * Elements in the beginning of the array is considered more recent than the later elements.\n     */\n    this.users = [];\n    /**\n     * A promise resolving to the App's location url.\n     */\n\n    this._locationUrl = null; // If the argument is a string, convert it to a simple configuration object.\n\n    const configuration = typeof idOrConfiguration === \"string\" ? {\n      id: idOrConfiguration\n    } : idOrConfiguration; // Initialize properties from the configuration\n\n    if (typeof configuration === \"object\" && typeof configuration.id === \"string\") {\n      this.id = configuration.id;\n    } else {\n      throw new Error(\"Missing a MongoDB Realm app-id\");\n    }\n\n    this.baseUrl = configuration.baseUrl || DEFAULT_BASE_URL;\n\n    if (configuration.skipLocationRequest) {\n      // Use the base url directly, instead of requesting a location URL from the server\n      this._locationUrl = Promise.resolve(this.baseUrl);\n    }\n\n    this.localApp = configuration.app;\n    const {\n      storage,\n      transport = new DefaultNetworkTransport()\n    } = configuration; // Construct a fetcher wrapping the network transport\n\n    this.fetcher = new Fetcher({\n      appId: this.id,\n      userContext: this,\n      locationUrlContext: this,\n      transport\n    }); // Construct the auth providers\n\n    this.emailPasswordAuth = new EmailPasswordAuth(this.fetcher); // Construct the storage\n\n    const baseStorage = storage || getEnvironment().defaultStorage;\n    this.storage = new AppStorage(baseStorage, this.id);\n    this.authenticator = new Authenticator(this.fetcher, baseStorage, () => this.deviceInformation); // Hydrate the app state from storage\n\n    try {\n      this.hydrate();\n    } catch (err) {\n      // The storage was corrupted\n      this.storage.clear(); // A failed hydration shouldn't throw and break the app experience\n      // Since this is \"just\" persisted state that unfortunately got corrupted or partially lost\n\n      console.warn(\"Realm app hydration failed:\", err.message);\n    }\n  }\n  /**\n   * Get or create a singleton Realm App from an id.\n   * Calling this function multiple times with the same id will return the same instance.\n   *\n   * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n   * @returns The Realm App instance.\n   */\n\n\n  static getApp(id) {\n    if (id in App.appCache) {\n      return App.appCache[id];\n    } else {\n      const instance = new App(id);\n      App.appCache[id] = instance;\n      return instance;\n    }\n  }\n  /**\n   * Switch user.\n   *\n   * @param nextUser The user or id of the user to switch to.\n   */\n\n\n  switchUser(nextUser) {\n    const index = this.users.findIndex(u => u === nextUser);\n\n    if (index === -1) {\n      throw new Error(\"The user was never logged into this app\");\n    } // Remove the user from the stack\n\n\n    const [user] = this.users.splice(index, 1); // Insert the user in the beginning of the stack\n\n    this.users.unshift(user);\n  }\n  /**\n   * Log in a user.\n   *\n   * @param credentials Credentials to use when logging in.\n   * @param fetchProfile Should the users profile be fetched? (default: true)\n   */\n\n\n  logIn(credentials, fetchProfile = true) {\n    var _this24 = this;\n\n    return _asyncToGenerator(function* () {\n      const response = yield _this24.authenticator.authenticate(credentials);\n\n      const user = _this24.createOrUpdateUser(response, credentials.providerType); // Let's ensure this will be the current user, in case the user object was reused.\n\n\n      _this24.switchUser(user); // If neeeded, fetch and set the profile on the user\n\n\n      if (fetchProfile) {\n        yield user.refreshProfile();\n      } // Persist the user id in the storage,\n      // merging to avoid overriding logins from other apps using the same underlying storage\n\n\n      _this24.storage.setUserIds(_this24.users.map(u => u.id), true); // Read out and store the device id from the server\n\n\n      const deviceId = response.deviceId;\n\n      if (deviceId && deviceId !== \"000000000000000000000000\") {\n        _this24.storage.set(DEVICE_ID_STORAGE_KEY$1, deviceId);\n      } // Return the user\n\n\n      return user;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  removeUser(user) {\n    var _this25 = this;\n\n    return _asyncToGenerator(function* () {\n      // Remove the user from the list of users\n      const index = _this25.users.findIndex(u => u === user);\n\n      if (index === -1) {\n        throw new Error(\"The user was never logged into this app\");\n      }\n\n      _this25.users.splice(index, 1); // Log out the user - this removes access and refresh tokens from storage\n\n\n      yield user.logOut(); // Remove the users profile from storage\n\n      _this25.storage.remove(`user(${user.id}):profile`); // Remove the user from the storage\n\n\n      _this25.storage.removeUserId(user.id);\n    })();\n  }\n  /**\n   * The currently active user (or null if no active users exists).\n   *\n   * @returns the currently active user or null.\n   */\n\n\n  get currentUser() {\n    const activeUsers = this.users.filter(user => user.state === UserState.Active);\n\n    if (activeUsers.length === 0) {\n      return null;\n    } else {\n      // Current user is the top of the stack\n      return activeUsers[0];\n    }\n  }\n  /**\n   * All active and logged-out users:\n   *  - First in the list are active users (ordered by most recent call to switchUser or login)\n   *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n   *\n   * @returns An array of users active or loggedout users (current user being the first).\n   */\n\n\n  get allUsers() {\n    // Returning a freezed copy of the list of users to prevent outside changes\n    return Object.fromEntries(this.users.map(user => [user.id, user]));\n  }\n  /**\n   * @returns A promise of the app URL, with the app location resolved.\n   */\n\n\n  get locationUrl() {\n    if (!this._locationUrl) {\n      const path = routes.api().app(this.id).location().path;\n      this._locationUrl = this.fetcher.fetchJSON({\n        method: \"GET\",\n        url: this.baseUrl + path,\n        tokenType: \"none\"\n      }).then(({\n        hostname\n      }) => {\n        if (typeof hostname !== \"string\") {\n          throw new Error(\"Expected response to contain a 'hostname'\");\n        } else {\n          return hostname;\n        }\n      }).catch(err => {\n        // Reset the location to allow another request to fetch again.\n        this._locationUrl = null;\n        throw err;\n      });\n    }\n\n    return this._locationUrl;\n  }\n  /**\n   * @returns Information about the current device, sent to the server when authenticating.\n   */\n\n\n  get deviceInformation() {\n    const deviceIdStr = this.storage.getDeviceId();\n    const deviceId = typeof deviceIdStr === \"string\" && deviceIdStr !== \"000000000000000000000000\" ? new ObjectId(deviceIdStr) : undefined;\n    return new DeviceInformation({\n      appId: this.localApp ? this.localApp.name : undefined,\n      appVersion: this.localApp ? this.localApp.version : undefined,\n      deviceId\n    });\n  }\n  /**\n   * Create (and store) a new user or update an existing user's access and refresh tokens.\n   * This helps de-duplicating users in the list of users known to the app.\n   *\n   * @param response A response from the Authenticator.\n   * @param providerType The type of the authentication provider used.\n   * @returns A new or an existing user.\n   */\n\n\n  createOrUpdateUser(response, providerType) {\n    const existingUser = this.users.find(u => u.id === response.userId);\n\n    if (existingUser) {\n      // Update the users access and refresh tokens\n      existingUser.accessToken = response.accessToken;\n      existingUser.refreshToken = response.refreshToken;\n      return existingUser;\n    } else {\n      // Create and store a new user\n      if (!response.refreshToken) {\n        throw new Error(\"No refresh token in response from server\");\n      }\n\n      const user = new User({\n        app: this,\n        id: response.userId,\n        accessToken: response.accessToken,\n        refreshToken: response.refreshToken,\n        providerType\n      });\n      this.users.unshift(user);\n      return user;\n    }\n  }\n  /**\n   * Restores the state of the app (active and logged-out users) from the storage\n   */\n\n\n  hydrate() {\n    const userIds = this.storage.getUserIds();\n    this.users = userIds.map(id => new User({\n      app: this,\n      id\n    }));\n  }\n\n}\n/**\n * A map of app instances returned from calling getApp.\n */\n\n\nApp.appCache = {};\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\n\nApp.Credentials = Credentials; ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Get or create a singleton Realm App from an id.\n * Calling this function multiple times with the same id will return the same instance.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance.\n */\n\nfunction getApp(id) {\n  return App.getApp(id);\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * In-memory storage that will not be persisted.\n */\n\n\nclass LocalStorage {\n  /**\n   * Constructs a LocalStorage using the global window.\n   */\n  constructor() {\n    if (typeof window === \"object\") {\n      this.window = window;\n    } else {\n      throw new Error(\"Cannot use LocalStorage without a global window object\");\n    }\n  }\n  /** @inheritdoc */\n\n\n  get(key) {\n    return this.window.localStorage.getItem(key);\n  }\n  /** @inheritdoc */\n\n\n  set(key, value) {\n    return this.window.localStorage.setItem(key, value);\n  }\n  /** @inheritdoc */\n\n\n  remove(key) {\n    return this.window.localStorage.removeItem(key);\n  }\n  /** @inheritdoc */\n\n\n  prefix(keyPart) {\n    return new PrefixedStorage(this, keyPart);\n  }\n  /** @inheritdoc */\n\n\n  clear(prefix) {\n    const keys = []; // Iterate all keys to find the once have a matching prefix.\n\n    for (let i = 0; i < this.window.localStorage.length; i++) {\n      const key = this.window.localStorage.key(i);\n\n      if (key && (!prefix || key.startsWith(prefix))) {\n        keys.push(key);\n      }\n    } // Remove the items in a seperate loop to avoid updating while iterating.\n\n\n    for (const key of keys) {\n      this.window.localStorage.removeItem(key);\n    }\n  }\n  /** @inheritdoc */\n\n\n  addListener(listener) {\n    return this.window.addEventListener(\"storage\", listener);\n  }\n  /** @inheritdoc */\n\n\n  removeListener(listener) {\n    return this.window.removeEventListener(\"storage\", listener);\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n\nconst browser = detect();\nconst environment$1 = {\n  defaultStorage: new LocalStorage().prefix(\"realm-web\"),\n  openWindow: url => window.open(url),\n  platform: (browser === null || browser === void 0 ? void 0 : browser.name) || \"web\",\n  platformVersion: (browser === null || browser === void 0 ? void 0 : browser.version) || \"0.0.0\",\n  TextDecoder\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\n\nfunction handleAuthRedirect(location = window.location, storage = environment$1.defaultStorage) {\n  try {\n    const queryString = location.hash.substr(1); // Strip the initial # from the hash\n\n    OAuth2Helper.handleRedirect(queryString, storage);\n  } catch (err) {\n    // Ensure calling this never throws: It should not interrupt a users flow.\n    console.warn(err);\n  }\n}\n\nexport { App, Credentials, DEFAULT_BASE_URL, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, setEnvironment };","map":{"version":3,"sources":["/Users/dev/Documents/Projects/Schlosswochen-Inscription/node_modules/realm-web/dist/bundle.dom.es.js"],"names":["EJSON","ObjectId","bson","BSON","__spreadArrays","undefined","s","i","il","arguments","length","r","Array","k","a","j","jl","BrowserInfo","name","version","os","type","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOX_UA_REGEX","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","getNodeVersion","matchUserAgent","ua","reduce","matched","_a","browser","regex","uaMatch","exec","matchedRule","match","versionParts","split","slice","createVersionParts","join","detectOS","searchBotMatch","ii","count","isNode","output","push","DefaultNetworkTransport","constructor","fetch","Error","AbortController","fetchWithCallbacks","request","handler","then","response","decodedBody","text","responseHeaders","headers","forEach","value","key","statusCode","status","body","onSuccess","catch","e","onError","timeoutMs","url","rest","signal","cancelTimeout","createTimeoutSignal","controller","timeout","setTimeout","abort","clearTimeout","DEFAULT_HEADERS","window","bind","commonjsGlobal","globalThis","global","self","createCommonjsModule","fn","basedir","module","path","exports","require","base","commonjsRequire","base64","factory","_Base64","Base64","b64chars","b64tab","bin","t","l","charAt","fromCharCode","String","cb_utob","c","cc","charCodeAt","re_utob","utob","u","replace","cb_encode","ccc","padlen","ord","chars","btoa","b","RangeError","_encode","mkUriSafe","b64","m0","encode","urisafe","encodeURI","fromUint8Array","Uint8Array","a0","a1","a2","re_btou","cb_btou","cccc","cp","offset","btou","cb_decode","len","n","_atob","atob","_decode","_fromURI","decode","toUint8Array","from","noConflict","VERSION","fromBase64","toBase64","Object","defineProperty","noEnum","v","enumerable","writable","configurable","extendString","prototype","SERIALIZATION_OPTIONS","relaxed","serialize","obj","deserialize","isArray","map","doc","UserType","DataKey","DATA_MAPPING","NAME","EMAIL","PICTURE","FIRST_NAME","LAST_NAME","GENDER","BIRTHDAY","MIN_AGE","MAX_AGE","UserProfile","Normal","identities","data","identity","id","providerType","mappedData","fromEntries","entries","PrefixedStorage","storage","keyPart","get","PART_SEPARATOR","set","remove","prefix","clear","addListener","listener","removeListener","ACCESS_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","PROFILE_STORAGE_KEY","PROVIDER_TYPE_STORAGE_KEY","UserStorage","userId","accessToken","refreshToken","profile","assign","JSON","parse","stringify","removeKeysWithUndefinedValues","filter","entry","generateRandomString","alphabet","result","Math","floor","random","encodeQueryString","params","prefixed","cleanedParams","keys","encodeURIComponent","decodeQueryString","str","cleanStr","substr","kvp","decodeURIComponent","RESERVED_NAMES","getOwnPropertyNames","cleanArgs","args","arg","cleanArgsAndSerialize","cleaned","FunctionsFactory","fetcher","config","serviceName","argsTransformation","create","Proxy","target","p","receiver","indexOf","callFunction","prop","Reflect","service","appRoute","fetchJSON","method","functionsCall","callFunctionStreaming","qs","fetchStream","EmailPasswordAuth","providerName","registerUser","email","password","emailPasswordAuth","register","confirmUser","token","tokenId","confirm","resendConfirmationEmail","confirmSend","resetPassword","reset","sendResetPasswordEmail","resetSend","callResetPasswordFunction","resetCall","api","app","appId","location","authProvider","login","authProviderRoutes","auth","apiKeys","enable","disable","session","routes","ApiKeyAuth","tokenType","keyId","fetchAll","delete","environment","setEnvironment","getEnvironment","WatchError","message","code","WatchStreamState","WatchStream","_state","NEED_DATA","_error","_textDecoder","TextDecoder","_buffer","_bufferOffset","_eventType","_dataBuffer","feedBuffer","buffer","assertState","stream","advanceBufferState","feedLine","line","endsWith","feedSse","eventType","colon","field","startsWith","sse","firstPercentIndex","start","percentIndex","encoded","parsed","_nextEvent","HAVE_EVENT","HAVE_ERROR","error_code","errorCode","error","state","nextEvent","out","nextNewlineIndex","MongoDBCollection","databaseName","collectionName","functions","find","options","database","collection","query","project","projection","sort","limit","findOne","findOneAndUpdate","update","upsert","returnNewDocument","findOneAndReplace","replacement","findOneAndDelete","aggregate","pipeline","insertOne","insertMany","documents","deleteOne","deleteMany","updateOne","updateMany","watch","ids","iterator","watchStream","chunk","createCollection","createDatabase","createService","db","DEFAULT_DEVICE_ID","UserState","UserType$1","User","parameters","_accessToken","_refreshToken","_profile","clone","userContext","currentUser","allUsers","LoggedOut","Active","Removed","isLoggedIn","customData","decodedToken","decodeAccessToken","userData","deviceId","payload","parsedPayload","refreshProfile","logOut","linkCredentials","credentials","authenticator","authenticate","details","refreshAccessToken","access_token","refreshCustomData","toJSON","mongoClient","parts","encodedPayload","decodedPayload","exp","expires","iat","issuedAt","sub","subject","user_data","Credentials","anonymous","userApiKey","serverApiKey","apiKey","emailPassword","username","function","jwt","google","derivePayload","includes","redirectUrl","authCode","idToken","id_token","facebook","redirectUrlOrAccessToken","apple","redirectUrlOrIdToken","USER_IDS_STORAGE_KEY","DEVICE_ID_STORAGE_KEY","AppStorage","getUserIds","userIdsString","userIds","Set","setUserIds","mergeWithExisting","existingIds","removeUserId","getDeviceId","setDeviceId","LOWERCASE_LETTERS","CLOSE_CHECK_INTERVAL","REDIRECT_HASH_TO_RESULT","_stitch_client_app_id","_baas_client_app_id","_stitch_ua","_baas_ua","_stitch_link","_baas_link","_stitch_error","_baas_error","_stitch_state","_baas_state","OAuth2Helper","openWindow","parseRedirectLocation","queryString","handleRedirect","defaultStorage","oauth2Storage","stateStorage","getStateStorage","decodeAuthInfo","authInfo","openWindowAndWaitForRedirect","Promise","resolve","reject","redirectWindow","windowClosedInterval","handleStorageUpdate","parsedResult","clearInterval","close","err","console","warn","setInterval","closed","generateState","REDIRECT_LOCATION_HEADER","Authenticator","getDeviceInformation","oauth2","linkingUser","deviceInformation","isLinking","getLogInUrl","redirect","providerRedirectHeader","device","user","mode","openWindowAndWaitForAuthResponse","logInUrl","user_id","refresh_token","device_id","link","extraQueryParams","loginRoute","locationUrl","redirectResult","userAuth","MongoDBRealmError","statusText","summary","fromRequestAndResponse","json","asyncIteratorFromResponseBody","Symbol","asyncIterator","reader","getReader","next","read","return","cancel","done","Fetcher","transport","locationUrlContext","buildAuthorizationHeader","Authorization","buildBody","log","buildJsonHeader","restOfRequest","ok","serializedBody","contentTypeHeaders","Accept","contentType","responseBody","DEVICE_ID_STORAGE_KEY$1","DeviceFields","DeviceInformation","appVersion","sdkVersion","platformVersion","DEFAULT_BASE_URL","App","idOrConfiguration","users","_locationUrl","configuration","baseUrl","skipLocationRequest","localApp","baseStorage","hydrate","getApp","appCache","instance","switchUser","nextUser","index","findIndex","splice","unshift","logIn","fetchProfile","createOrUpdateUser","removeUser","activeUsers","hostname","deviceIdStr","existingUser","LocalStorage","localStorage","getItem","setItem","removeItem","addEventListener","removeEventListener","environment$1","open","handleAuthRedirect","hash"],"mappings":"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","sourcesContent":["import { EJSON, ObjectId } from 'bson';\nimport * as bson from 'bson';\nexport { bson as BSON };\n\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /Edg\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nfunction detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nfunction parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nfunction detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nfunction getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nclass DefaultNetworkTransport {\n    constructor() {\n        if (!DefaultNetworkTransport.fetch) {\n            throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n        }\n        if (!DefaultNetworkTransport.AbortController) {\n            throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n        }\n    }\n    fetchWithCallbacks(request, handler) {\n        // tslint:disable-next-line: no-console\n        this.fetch(request)\n            .then(async (response) => {\n            const decodedBody = await response.text();\n            // Pull out the headers of the response\n            const responseHeaders = {};\n            response.headers.forEach((value, key) => {\n                responseHeaders[key] = value;\n            });\n            return {\n                statusCode: response.status,\n                headers: responseHeaders,\n                body: decodedBody,\n            };\n        })\n            .then(r => handler.onSuccess(r))\n            .catch(e => handler.onError(e));\n    }\n    async fetch(request) {\n        const { timeoutMs, url, ...rest } = request;\n        const { signal, cancelTimeout } = this.createTimeoutSignal(timeoutMs);\n        try {\n            // We'll await the response to catch throw our own error\n            return await DefaultNetworkTransport.fetch(url, {\n                signal,\n                ...rest\n            });\n        }\n        finally {\n            // Whatever happens, cancel any timeout\n            cancelTimeout();\n        }\n    }\n    createTimeoutSignal(timeoutMs) {\n        if (typeof timeoutMs === \"number\") {\n            const controller = new DefaultNetworkTransport.AbortController();\n            // Call abort after a specific number of milliseconds\n            const timeout = setTimeout(() => {\n                controller.abort();\n            }, timeoutMs);\n            return {\n                signal: controller.signal,\n                cancelTimeout: () => {\n                    clearTimeout(timeout);\n                },\n            };\n        }\n        else {\n            return {\n                signal: undefined,\n                cancelTimeout: () => {\n                    /* No-op */\n                },\n            };\n        }\n    }\n}\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n    \"Content-Type\": \"application/json\",\n};\n\n////////////////////////////////////////////////////////////////////////////\nDefaultNetworkTransport.fetch = window.fetch.bind(window);\nDefaultNetworkTransport.AbortController = window.AbortController;\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t  path: basedir,\n\t  exports: {},\n\t  require: function (path, base) {\n      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n    }\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar base64 = createCommonjsModule(function (module, exports) {\n(function (global, factory) {\n     module.exports = factory(global)\n        ;\n}((\n    typeof self !== 'undefined' ? self\n        : typeof window !== 'undefined' ? window\n        : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal\n: commonjsGlobal\n), function(global) {\n    // existing version for noConflict()\n    global = global || {};\n    var _Base64 = global.Base64;\n    var version = \"2.6.4\";\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa && typeof global.btoa == 'function'\n        ? function(b){ return global.btoa(b) } : function(b) {\n        if (b.match(/[^\\x00-\\xFF]/)) throw new RangeError(\n            'The string contains invalid characters.'\n        );\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = function(u) {\n        return btoa(utob(String(u)));\n    };\n    var mkUriSafe = function (b64) {\n        return b64.replace(/[+\\/]/g, function(m0) {\n            return m0 == '+' ? '-' : '_';\n        }).replace(/=/g, '');\n    };\n    var encode = function(u, urisafe) {\n        return urisafe ? mkUriSafe(_encode(u)) : _encode(u);\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    var fromUint8Array;\n    if (global.Uint8Array) fromUint8Array = function(a, urisafe) {\n        // return btoa(fromCharCode.apply(null, a));\n        var b64 = '';\n        for (var i = 0, l = a.length; i < l; i += 3) {\n            var a0 = a[i], a1 = a[i+1], a2 = a[i+2];\n            var ord = a0 << 16 | a1 << 8 | a2;\n            b64 +=    b64chars.charAt( ord >>> 18)\n                +     b64chars.charAt((ord >>> 12) & 63)\n                + ( typeof a1 != 'undefined'\n                    ? b64chars.charAt((ord >>>  6) & 63) : '=')\n                + ( typeof a2 != 'undefined'\n                    ? b64chars.charAt( ord         & 63) : '=');\n        }\n        return urisafe ? mkUriSafe(b64) : b64;\n    };\n    // decoder stuff\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var _atob = global.atob && typeof global.atob == 'function'\n        ? function(a){ return global.atob(a) } : function(a){\n        return a.replace(/\\S{1,4}/g, cb_decode);\n    };\n    var atob = function(a) {\n        return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n    };\n    var _decode = function(a) { return btou(_atob(a)) };\n    var _fromURI = function(a) {\n        return String(a).replace(/[-_]/g, function(m0) {\n            return m0 == '-' ? '+' : '/'\n        }).replace(/[^A-Za-z0-9\\+\\/]/g, '');\n    };\n    var decode = function(a){\n        return _decode(_fromURI(a));\n    };\n    var toUint8Array;\n    if (global.Uint8Array) toUint8Array = function(a) {\n        return Uint8Array.from(atob(_fromURI(a)), function(c) {\n            return c.charCodeAt(0);\n        });\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict,\n        fromUint8Array: fromUint8Array,\n        toUint8Array: toUint8Array\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if ( module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n});\n\n////////////////////////////////////////////////////////////////////////////\nconst SERIALIZATION_OPTIONS = {\n    relaxed: false,\n};\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\nfunction serialize(obj) {\n    return EJSON.serialize(obj, SERIALIZATION_OPTIONS);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\nfunction deserialize(obj) {\n    if (Array.isArray(obj)) {\n        return obj.map(doc => EJSON.deserialize(doc));\n    }\n    else {\n        return EJSON.deserialize(obj);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The type of a user.\n */\nvar UserType;\n(function (UserType) {\n    /**\n     * A normal end-user created this user.\n     */\n    UserType[\"Normal\"] = \"normal\";\n    /**\n     * The user was created by the server.\n     */\n    UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\nvar DataKey;\n(function (DataKey) {\n    /** @ignore */\n    DataKey[\"NAME\"] = \"name\";\n    /** @ignore */\n    DataKey[\"EMAIL\"] = \"email\";\n    /** @ignore */\n    DataKey[\"PICTURE\"] = \"picture\";\n    /** @ignore */\n    DataKey[\"FIRST_NAME\"] = \"first_name\";\n    /** @ignore */\n    DataKey[\"LAST_NAME\"] = \"last_name\";\n    /** @ignore */\n    DataKey[\"GENDER\"] = \"gender\";\n    /** @ignore */\n    DataKey[\"BIRTHDAY\"] = \"birthday\";\n    /** @ignore */\n    DataKey[\"MIN_AGE\"] = \"min_age\";\n    /** @ignore */\n    DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\nconst DATA_MAPPING = {\n    [DataKey.NAME]: \"name\",\n    [DataKey.EMAIL]: \"email\",\n    [DataKey.PICTURE]: \"pictureUrl\",\n    [DataKey.FIRST_NAME]: \"firstName\",\n    [DataKey.LAST_NAME]: \"lastName\",\n    [DataKey.GENDER]: \"gender\",\n    [DataKey.BIRTHDAY]: \"birthday\",\n    [DataKey.MIN_AGE]: \"minAge\",\n    [DataKey.MAX_AGE]: \"maxAge\",\n};\n/** @inheritdoc */\nclass UserProfile {\n    /**\n     * @param response The response of a call fetching the users profile.\n     */\n    constructor(response) {\n        /** @ignore */\n        this.type = UserType.Normal;\n        /** @ignore */\n        this.identities = [];\n        if (typeof response === \"object\" && response !== null) {\n            const { type, identities, data } = response;\n            if (typeof type === \"string\") {\n                this.type = type;\n            }\n            else {\n                throw new Error(\"Expected 'type' in the response body\");\n            }\n            if (Array.isArray(identities)) {\n                this.identities = identities.map((identity) => {\n                    return {\n                        id: identity.id,\n                        providerType: identity[\"provider_type\"],\n                    };\n                });\n            }\n            else {\n                throw new Error(\"Expected 'identities' in the response body\");\n            }\n            if (typeof data === \"object\" && data !== null) {\n                const mappedData = Object.fromEntries(Object.entries(data).map(([key, value]) => {\n                    if (key in DATA_MAPPING) {\n                        // Translate any known data field to its JS idiomatic alias\n                        return [DATA_MAPPING[key], value];\n                    }\n                    else {\n                        // Pass through any other values\n                        return [key, value];\n                    }\n                }));\n                // We can use `any` since we trust the user supplies the correct type\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this.data = deserialize(mappedData);\n            }\n            else {\n                throw new Error(\"Expected 'data' in the response body\");\n            }\n        }\n        else {\n            this.data = {};\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\nclass PrefixedStorage {\n    /**\n     * Construct a `Storage` which will prefix a key part to every operation.\n     *\n     * @param storage The underlying storage to use for operations.\n     * @param keyPart The part of the key to prefix when performing operations.\n     */\n    constructor(storage, keyPart) {\n        this.storage = storage;\n        this.keyPart = keyPart;\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix = \"\") {\n        return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.storage.addListener(listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.storage.addListener(listener);\n    }\n}\n/**\n * The string separating two parts.\n */\nPrefixedStorage.PART_SEPARATOR = \":\";\n\n////////////////////////////////////////////////////////////////////////////\nconst ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nconst PROFILE_STORAGE_KEY = \"profile\";\nconst PROVIDER_TYPE_STORAGE_KEY = \"providerType\";\n/**\n * Storage specific to the app.\n */\nclass UserStorage extends PrefixedStorage {\n    /**\n     * Construct a storage for a `User`.\n     *\n     * @param storage The underlying storage to wrap.\n     * @param userId The id of the user.\n     */\n    constructor(storage, userId) {\n        super(storage, `user(${userId})`);\n    }\n    /**\n     * Get the access token from storage.\n     *\n     * @returns Access token (null if unknown).\n     */\n    get accessToken() {\n        return this.get(ACCESS_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the access token in storage.\n     *\n     * @param value Access token (null if unknown).\n     */\n    set accessToken(value) {\n        if (value === null) {\n            this.remove(ACCESS_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the refresh token from storage.\n     *\n     * @returns Refresh token (null if unknown and user is logged out).\n     */\n    get refreshToken() {\n        return this.get(REFRESH_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the refresh token in storage.\n     *\n     * @param value Refresh token (null if unknown and user is logged out).\n     */\n    set refreshToken(value) {\n        if (value === null) {\n            this.remove(REFRESH_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the user profile from storage.\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get profile() {\n        const value = this.get(PROFILE_STORAGE_KEY);\n        if (value) {\n            const profile = new UserProfile();\n            // Patch in the values\n            Object.assign(profile, JSON.parse(value));\n            return profile;\n        }\n    }\n    /**\n     * Set the user profile in storage.\n     *\n     * @param value User profile (undefined if its unknown).\n     */\n    set profile(value) {\n        if (value) {\n            this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n        }\n        else {\n            this.remove(PROFILE_STORAGE_KEY);\n        }\n    }\n    /**\n     * Get the type of authentication provider used to authenticate\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get providerType() {\n        const value = this.get(PROVIDER_TYPE_STORAGE_KEY);\n        if (value) {\n            return value;\n        }\n    }\n    /**\n     * Set the type of authentication provider used to authenticate\n     *\n     * @param value Type of authentication provider.\n     */\n    set providerType(value) {\n        if (value) {\n            this.set(PROVIDER_TYPE_STORAGE_KEY, value);\n        }\n        else {\n            this.remove(PROVIDER_TYPE_STORAGE_KEY);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param obj The object to remove keys (and undefined values from)\n * @returns A new object without the keys where the value is undefined.\n */\nfunction removeKeysWithUndefinedValues(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(entry => typeof entry[1] !== \"undefined\"));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\nfunction generateRandomString(length, alphabet) {\n    let result = \"\";\n    for (let i = 0; i < length; i++) {\n        result += alphabet[Math.floor(Math.random() * alphabet.length)];\n    }\n    return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @param prefixed Should the \"?\" prefix be added if values exists?\n * @returns A URL encoded representation of the parameters (omitting a \"?\" prefix).\n */\nfunction encodeQueryString(params, prefixed = true) {\n    // Filter out undefined values\n    const cleanedParams = removeKeysWithUndefinedValues(params);\n    // Determine if a prefixed \"?\" is appropreate\n    const prefix = prefixed && Object.keys(cleanedParams).length > 0 ? \"?\" : \"\";\n    // Transform keys and values to a query string\n    return (prefix +\n        Object.entries(cleanedParams)\n            .map(([k, v]) => `${k}=${encodeURIComponent(v)}`)\n            .join(\"&\"));\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\nfunction decodeQueryString(str) {\n    const cleanStr = str[0] === \"?\" ? str.substr(1) : str;\n    return Object.fromEntries(cleanStr\n        .split(\"&\")\n        .filter(s => s.length > 0)\n        .map(kvp => kvp.split(\"=\"))\n        .map(([k, v]) => [k, decodeURIComponent(v)]));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\nconst RESERVED_NAMES = [\n    \"inspect\",\n    \"callFunction\",\n    \"callFunctionStreaming\",\n    // Methods defined on the Object.prototype might be \"typeof probed\" and called by libraries and runtime environments.\n    ...Object.getOwnPropertyNames(Object.prototype),\n];\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\nfunction cleanArgs(args) {\n    for (const arg of args) {\n        if (typeof arg === \"object\") {\n            for (const [key, value] of Object.entries(arg)) {\n                if (value === undefined) {\n                    delete arg[key];\n                }\n            }\n        }\n    }\n    return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\nfunction cleanArgsAndSerialize(args) {\n    const cleaned = cleanArgs(args);\n    return cleaned.map(arg => (typeof arg === \"object\" ? serialize(arg) : arg));\n}\n/**\n * Defines how functions are called.\n */\nclass FunctionsFactory {\n    /**\n     * @param fetcher The underlying fetcher to use when sending requests.\n     * @param config Additional configuration parameters.\n     */\n    constructor(fetcher, config = {}) {\n        this.fetcher = fetcher;\n        this.serviceName = config.serviceName;\n        this.argsTransformation =\n            config.argsTransformation || cleanArgsAndSerialize;\n    }\n    /**\n     * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n     *\n     * @param fetcher The underlying fetcher to use when requesting.\n     * @param config Additional configuration parameters.\n     * @returns The newly created factory of functions.\n     */\n    static create(fetcher, config = {}) {\n        // Create a proxy, wrapping a simple object returning methods that calls functions\n        // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n        const factory = new FunctionsFactory(fetcher, config);\n        // Wrap the factory in a proxy that calls the internal call method\n        return new Proxy(factory, {\n            get(target, p, receiver) {\n                if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n                    return target.callFunction.bind(target, p);\n                }\n                else {\n                    const prop = Reflect.get(target, p, receiver);\n                    return typeof prop === \"function\"\n                        ? prop.bind(target)\n                        : prop;\n                }\n            },\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    async callFunction(name, ...args) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n        const body = {\n            name,\n            arguments: this.argsTransformation\n                ? this.argsTransformation(args)\n                : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const appRoute = this.fetcher.appRoute;\n        return this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.functionsCall().path,\n            body,\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    callFunctionStreaming(name, ...args) {\n        const body = {\n            name,\n            arguments: this.argsTransformation\n                ? this.argsTransformation(args)\n                : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const appRoute = this.fetcher.appRoute;\n        const qs = encodeQueryString({\n            [\"baas_request\"]: Base64.encode(JSON.stringify(body)),\n        });\n        return this.fetcher.fetchStream({\n            method: \"GET\",\n            path: appRoute.functionsCall().path + qs,\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass EmailPasswordAuth {\n    /**\n     * Construct an interface to the email / password authentication provider.\n     *\n     * @param fetcher The underlying fetcher used to request the services.\n     * @param providerName Optional custom name of the authentication provider.\n     */\n    constructor(fetcher, providerName = \"local-userpass\") {\n        this.fetcher = fetcher;\n        this.providerName = providerName;\n    }\n    /** @inheritdoc */\n    async registerUser(email, password) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).register().path,\n            body: { email, password },\n        });\n    }\n    /** @inheritdoc */\n    async confirmUser(token, tokenId) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirm().path,\n            body: { token, tokenId },\n        });\n    }\n    /** @inheritdoc */\n    async resendConfirmationEmail(email) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirmSend()\n                .path,\n            body: { email },\n        });\n    }\n    /** @inheritdoc */\n    async resetPassword(token, tokenId, password) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).reset().path,\n            body: { token, tokenId, password },\n        });\n    }\n    /** @inheritdoc */\n    async sendResetPasswordEmail(email) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).resetSend()\n                .path,\n            body: { email },\n        });\n    }\n    /** @inheritdoc */\n    async callResetPasswordFunction(email, password, ...args) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).resetCall()\n                .path,\n            body: { email, password, arguments: args },\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @returns The base api route.\n */\nfunction api() {\n    return {\n        path: \"/api/client/v2.0\",\n        /**\n         * @param appId The id of the app.\n         * @returns The URL of the app endpoint.\n         */\n        app(appId) {\n            return {\n                path: this.path + `/app/${appId}`,\n                /**\n                 * @returns The URL of the app location endpoint.\n                 */\n                location() {\n                    return {\n                        path: this.path + \"/location\",\n                    };\n                },\n                /**\n                 * @param providerName The name of the provider.\n                 * @returns The app url concatinated with the /auth/providers/{providerName}\n                 */\n                authProvider(providerName) {\n                    return {\n                        path: this.path + `/auth/providers/${providerName}`,\n                        /**\n                         * @returns Get the URL of an authentication provider.\n                         */\n                        login() {\n                            return { path: this.path + \"/login\" };\n                        },\n                    };\n                },\n                /**\n                 * @param providerName The name of the provider.\n                 * @returns The app url concatinated with the /auth/providers/{providerName}\n                 */\n                emailPasswordAuth(providerName) {\n                    const authProviderRoutes = this.authProvider(providerName);\n                    return {\n                        ...authProviderRoutes,\n                        register() {\n                            return { path: this.path + \"/register\" };\n                        },\n                        confirm() {\n                            return { path: this.path + \"/confirm\" };\n                        },\n                        confirmSend() {\n                            return { path: this.path + \"/confirm/send\" };\n                        },\n                        reset() {\n                            return { path: this.path + \"/reset\" };\n                        },\n                        resetSend() {\n                            return { path: this.path + \"/reset/send\" };\n                        },\n                        resetCall() {\n                            return { path: this.path + \"/reset/call\" };\n                        },\n                    };\n                },\n                functionsCall() {\n                    return {\n                        path: this.path + \"/functions/call\",\n                    };\n                },\n            };\n        },\n        auth() {\n            return {\n                path: this.path + \"/auth\",\n                apiKeys() {\n                    return {\n                        path: this.path + \"/api_keys\",\n                        key(id) {\n                            return {\n                                path: this.path + `/${id}`,\n                                enable() {\n                                    return { path: this.path + \"/enable\" };\n                                },\n                                disable() {\n                                    return { path: this.path + \"/disable\" };\n                                },\n                            };\n                        },\n                    };\n                },\n                profile() {\n                    return { path: this.path + \"/profile\" };\n                },\n                session() {\n                    return { path: this.path + \"/session\" };\n                },\n            };\n        },\n    };\n}\nvar routes = { api };\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass ApiKeyAuth {\n    /**\n     * Construct an interface to the API-key authentication provider.\n     *\n     * @param fetcher The fetcher used to send requests to services.\n     * @param providerName Optional custom name of the authentication provider.\n     */\n    constructor(fetcher, providerName = \"api-key\") {\n        this.fetcher = fetcher;\n    }\n    /** @inheritdoc */\n    create(name) {\n        return this.fetcher.fetchJSON({\n            method: \"POST\",\n            body: { name },\n            path: routes.api().auth().apiKeys().path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    fetch(keyId) {\n        return this.fetcher.fetchJSON({\n            method: \"GET\",\n            path: routes.api().auth().apiKeys().key(keyId).path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    fetchAll() {\n        return this.fetcher.fetchJSON({\n            method: \"GET\",\n            tokenType: \"refresh\",\n            path: routes.api().auth().apiKeys().path,\n        });\n    }\n    /** @inheritdoc */\n    async delete(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"DELETE\",\n            path: routes.api().auth().apiKeys().key(keyId).path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    async enable(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"PUT\",\n            path: routes.api().auth().apiKeys().key(keyId).enable().path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    async disable(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"PUT\",\n            path: routes.api().auth().apiKeys().key(keyId).disable().path,\n            tokenType: \"refresh\",\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nlet environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\nfunction setEnvironment(e) {\n    environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\nfunction getEnvironment() {\n    if (environment) {\n        return environment;\n    }\n    else {\n        throw new Error(\"Cannot get environment before it's set\");\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * An error occured during the parsing of a watch stream.\n */\nclass WatchError extends Error {\n    constructor({ message, code }) {\n        super(message);\n        /**\n         * The name of this type of error\n         */\n        this.name = \"WatchError\";\n        this.code = code;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n// NOTE: this is a fully processed event, not a single \"data: foo\" line!\n/**\n * The state of a WatchStream.\n */\nvar WatchStreamState;\n(function (WatchStreamState) {\n    /**\n     * Need to call one of the feed functions.\n     */\n    WatchStreamState[\"NEED_DATA\"] = \"NEED_DATA\";\n    /**\n     * Call nextEvent() to consume an event.\n     */\n    WatchStreamState[\"HAVE_EVENT\"] = \"HAVE_EVENT\";\n    /**\n     * Call error().\n     */\n    WatchStreamState[\"HAVE_ERROR\"] = \"HAVE_ERROR\";\n})(WatchStreamState || (WatchStreamState = {}));\n/**\n * Represents a stream of events\n */\nclass WatchStream {\n    constructor() {\n        this._state = WatchStreamState.NEED_DATA;\n        this._error = null;\n        // Used by feedBuffer to construct lines\n        this._textDecoder = new (getEnvironment().TextDecoder)();\n        this._buffer = \"\";\n        this._bufferOffset = 0;\n        // Used by feedLine for building the next SSE\n        this._eventType = \"\";\n        this._dataBuffer = \"\";\n    }\n    // Call these when you have data, in whatever shape is easiest for your SDK to get.\n    // Pick one, mixing and matching on a single instance isn't supported.\n    // These can only be called in NEED_DATA state, which is the initial state.\n    feedBuffer(buffer) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        this._buffer += this._textDecoder.decode(buffer, { stream: true });\n        this.advanceBufferState();\n    }\n    feedLine(line) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        // This is an implementation of the algorithm described at\n        // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation.\n        // Currently the server does not use id or retry lines, so that processing isn't implemented.\n        // ignore trailing LF if not removed by SDK.\n        if (line.endsWith(\"\\n\"))\n            line = line.substr(0, line.length - 1);\n        // ignore trailing CR from CRLF\n        if (line.endsWith(\"\\r\"))\n            line = line.substr(0, line.length - 1);\n        if (line.length === 0) {\n            // This is the \"dispatch the event\" portion of the algorithm.\n            if (this._dataBuffer.length === 0) {\n                this._eventType = \"\";\n                return;\n            }\n            if (this._dataBuffer.endsWith(\"\\n\"))\n                this._dataBuffer = this._dataBuffer.substr(0, this._dataBuffer.length - 1);\n            this.feedSse({\n                data: this._dataBuffer,\n                eventType: this._eventType,\n            });\n            this._dataBuffer = \"\";\n            this._eventType = \"\";\n        }\n        if (line[0] === \":\")\n            return;\n        const colon = line.indexOf(\":\");\n        const field = line.substr(0, colon);\n        let value = colon === -1 ? \"\" : line.substr(colon + 1);\n        if (value.startsWith(\" \"))\n            value = value.substr(1);\n        if (field === \"event\") {\n            this._eventType = value;\n        }\n        else if (field === \"data\") {\n            this._dataBuffer += value;\n            this._dataBuffer += \"\\n\";\n        }\n        else ;\n    }\n    feedSse(sse) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        const firstPercentIndex = sse.data.indexOf(\"%\");\n        if (firstPercentIndex !== -1) {\n            // For some reason, the stich server decided to add percent-encoding for '%', '\\n', and '\\r' to its\n            // event-stream replies. But it isn't real urlencoding, since most characters pass through, so we can't use\n            // uri_percent_decode() here.\n            let buffer = \"\";\n            let start = 0;\n            for (let percentIndex = firstPercentIndex; percentIndex !== -1; percentIndex = sse.data.indexOf(\"%\", start)) {\n                buffer += sse.data.substr(start, percentIndex - start);\n                const encoded = sse.data.substr(percentIndex, 3); // may be smaller than 3 if string ends with %\n                if (encoded === \"%25\") {\n                    buffer += \"%\";\n                }\n                else if (encoded === \"%0A\") {\n                    buffer += \"\\x0A\"; // '\\n'\n                }\n                else if (encoded === \"%0D\") {\n                    buffer += \"\\x0D\"; // '\\r'\n                }\n                else {\n                    buffer += encoded; // propagate as-is\n                }\n                start = percentIndex + encoded.length;\n            }\n            // Advance the buffer with the last part\n            buffer += sse.data.substr(start);\n            sse.data = buffer;\n        }\n        if (!sse.eventType || sse.eventType === \"message\") {\n            try {\n                const parsed = EJSON.parse(sse.data);\n                if (typeof parsed === \"object\") {\n                    // ???\n                    this._nextEvent = parsed;\n                    this._state = WatchStreamState.HAVE_EVENT;\n                    return;\n                }\n            }\n            catch {\n                // fallthrough to same handling as for non-document value.\n            }\n            this._state = WatchStreamState.HAVE_ERROR;\n            this._error = new WatchError({\n                message: \"server returned malformed event: \" + sse.data,\n                code: \"bad bson parse\",\n            });\n        }\n        else if (sse.eventType === \"error\") {\n            this._state = WatchStreamState.HAVE_ERROR;\n            // default error message if we have issues parsing the reply.\n            this._error = new WatchError({\n                message: sse.data,\n                code: \"unknown\",\n            });\n            try {\n                const { error_code: errorCode, error } = EJSON.parse(sse.data);\n                if (typeof errorCode !== \"string\")\n                    return;\n                if (typeof error !== \"string\")\n                    return;\n                // XXX in realm-js, object-store will error if the error_code is not one of the known\n                // error code enum values.\n                this._error = new WatchError({\n                    message: error,\n                    code: errorCode,\n                });\n            }\n            catch {\n                return; // Use the default state.\n            }\n        }\n        else ;\n    }\n    get state() {\n        return this._state;\n    }\n    // Consumes the returned event. If you used feedBuffer(), there may be another event or error after this one,\n    // so you need to call state() again to see what to do next.\n    nextEvent() {\n        this.assertState(WatchStreamState.HAVE_EVENT);\n        // We can use \"as ChangeEvent<T>\" since we just asserted the state.\n        const out = this._nextEvent;\n        this._state = WatchStreamState.NEED_DATA;\n        this.advanceBufferState();\n        return out;\n    }\n    // Once this enters the error state, it stays that way. You should not feed any more data.\n    get error() {\n        return this._error;\n    }\n    ////////////////////////////////////////////\n    advanceBufferState() {\n        this.assertState(WatchStreamState.NEED_DATA);\n        while (this.state === WatchStreamState.NEED_DATA) {\n            if (this._bufferOffset === this._buffer.length) {\n                this._buffer = \"\";\n                this._bufferOffset = 0;\n                return;\n            }\n            // NOTE not supporting CR-only newlines, just LF and CRLF.\n            const nextNewlineIndex = this._buffer.indexOf(\"\\n\", this._bufferOffset);\n            if (nextNewlineIndex === -1) {\n                // We have a partial line.\n                if (this._bufferOffset !== 0) {\n                    // Slide the partial line down to the front of the buffer.\n                    this._buffer = this._buffer.substr(this._bufferOffset, this._buffer.length - this._bufferOffset);\n                    this._bufferOffset = 0;\n                }\n                return;\n            }\n            this.feedLine(this._buffer.substr(this._bufferOffset, nextNewlineIndex - this._bufferOffset));\n            this._bufferOffset = nextNewlineIndex + 1; // Advance past this line, including its newline.\n        }\n    }\n    assertState(state) {\n        if (this._state !== state) {\n            throw Error(`Expected WatchStream to be in state ${state}, but in state ${this._state}`);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A remote collection of documents.\n */\nclass MongoDBCollection {\n    /**\n     * Construct a remote collection of documents.\n     *\n     * @param fetcher The fetcher to use when requesting the service.\n     * @param serviceName The name of the remote service.\n     * @param databaseName The name of the database.\n     * @param collectionName The name of the remote collection.\n     */\n    constructor(fetcher, serviceName, databaseName, collectionName) {\n        this.functions = FunctionsFactory.create(fetcher, {\n            serviceName,\n        });\n        this.databaseName = databaseName;\n        this.collectionName = collectionName;\n        this.serviceName = serviceName;\n        this.fetcher = fetcher;\n    }\n    /** @inheritdoc */\n    find(filter = {}, options = {}) {\n        return this.functions.find({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    findOne(filter = {}, options = {}) {\n        return this.functions.findOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndUpdate(filter = {}, update, options = {}) {\n        return this.functions.findOneAndUpdate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            update,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndReplace(filter = {}, replacement, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter: filter,\n            update: replacement,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndDelete(filter = {}, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            sort: options.sort,\n            projection: options.projection,\n        });\n    }\n    /** @inheritdoc */\n    aggregate(pipeline) {\n        return this.functions.aggregate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            pipeline,\n        });\n    }\n    /** @inheritdoc */\n    count(filter = {}, options = {}) {\n        return this.functions.count({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    insertOne(document) {\n        return this.functions.insertOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            document,\n        });\n    }\n    /** @inheritdoc */\n    insertMany(documents) {\n        return this.functions.insertMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            documents,\n        });\n    }\n    /** @inheritdoc */\n    deleteOne(filter = {}) {\n        return this.functions.deleteOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    deleteMany(filter = {}) {\n        return this.functions.deleteMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    updateOne(filter, update, options = {}) {\n        return this.functions.updateOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n        });\n    }\n    /** @inheritdoc */\n    updateMany(filter, update, options = {}) {\n        return this.functions.updateMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n        });\n    }\n    async *watch({ ids, filter, } = {}) {\n        const iterator = await this.functions.callFunctionStreaming(\"watch\", {\n            database: this.databaseName,\n            collection: this.collectionName,\n            ids,\n            filter,\n        });\n        const watchStream = new WatchStream();\n        for await (const chunk of iterator) {\n            if (!chunk)\n                continue;\n            watchStream.feedBuffer(chunk);\n            while (watchStream.state == WatchStreamState.HAVE_EVENT) {\n                yield watchStream.nextEvent();\n            }\n            if (watchStream.state == WatchStreamState.HAVE_ERROR)\n                // XXX this is just throwing an error like {error_code: \"BadRequest, error: \"message\"},\n                // which matches realm-js, but is different from how errors are handled in realm-web\n                throw watchStream.error;\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\nfunction createCollection(fetcher, serviceName, databaseName, collectionName) {\n    return new MongoDBCollection(fetcher, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\nfunction createDatabase(fetcher, serviceName, databaseName) {\n    return {\n        collection: createCollection.bind(null, fetcher, serviceName, databaseName),\n    };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName An optional service name.\n * @returns The service.\n */\nfunction createService(fetcher, serviceName = \"mongo-db\") {\n    return { db: createDatabase.bind(null, fetcher, serviceName) };\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst DEFAULT_DEVICE_ID = \"000000000000000000000000\";\n/** The state of a user within the app */\nvar UserState;\n(function (UserState) {\n    /** Active, with both access and refresh tokens */\n    UserState[\"Active\"] = \"active\";\n    /** Logged out, but there might still be data persisted about the user, in the browser. */\n    UserState[\"LoggedOut\"] = \"logged-out\";\n    /** Logged out and all data about the user has been removed. */\n    UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\n/** The type of a user. */\nvar UserType$1;\n(function (UserType) {\n    /** Created by the user itself. */\n    UserType[\"Normal\"] = \"normal\";\n    /** Created by an administrator of the app. */\n    UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\n/**\n * Representation of an authenticated user of an app.\n */\nclass User {\n    /**\n     * @param parameters Parameters of the user.\n     */\n    constructor(parameters) {\n        this.app = parameters.app;\n        this.id = parameters.id;\n        this.storage = new UserStorage(this.app.storage, this.id);\n        if (\"accessToken\" in parameters &&\n            \"refreshToken\" in parameters &&\n            \"providerType\" in parameters) {\n            this._accessToken = parameters.accessToken;\n            this._refreshToken = parameters.refreshToken;\n            this.providerType = parameters.providerType;\n            // Save the parameters to storage, for future instances to be hydrated from\n            this.storage.accessToken = parameters.accessToken;\n            this.storage.refreshToken = parameters.refreshToken;\n            this.storage.providerType = parameters.providerType;\n        }\n        else {\n            // Hydrate the rest of the parameters from storage\n            this._accessToken = this.storage.accessToken;\n            this._refreshToken = this.storage.refreshToken;\n            const providerType = this.storage.providerType;\n            this._profile = this.storage.profile;\n            if (providerType) {\n                this.providerType = providerType;\n            }\n            else {\n                throw new Error(\"Storage is missing a provider type\");\n            }\n        }\n        this.fetcher = this.app.fetcher.clone({\n            userContext: { currentUser: this },\n        });\n        this.apiKeys = new ApiKeyAuth(this.fetcher);\n        this.functions = FunctionsFactory.create(this.fetcher);\n    }\n    /**\n     * @returns The access token used to authenticate the user towards MongoDB Realm.\n     */\n    get accessToken() {\n        return this._accessToken;\n    }\n    /**\n     * @param token The new access token.\n     */\n    set accessToken(token) {\n        this._accessToken = token;\n        this.storage.accessToken = token;\n    }\n    /**\n     * @returns The refresh token used to issue new access tokens.\n     */\n    get refreshToken() {\n        return this._refreshToken;\n    }\n    /**\n     * @param token The new refresh token.\n     */\n    set refreshToken(token) {\n        this._refreshToken = token;\n        this.storage.refreshToken = token;\n    }\n    /**\n     * @returns The current state of the user.\n     */\n    get state() {\n        if (this.id in this.app.allUsers) {\n            return this.refreshToken === null\n                ? UserState.LoggedOut\n                : UserState.Active;\n        }\n        else {\n            return UserState.Removed;\n        }\n    }\n    /**\n     * @returns The logged in state of the user.\n     */\n    get isLoggedIn() {\n        return this.state === UserState.Active;\n    }\n    get customData() {\n        if (this.accessToken) {\n            const decodedToken = this.decodeAccessToken();\n            return decodedToken.userData;\n        }\n        else {\n            throw new Error(\"Cannot read custom data without an access token\");\n        }\n    }\n    /**\n     * @returns Profile containing detailed information about the user.\n     */\n    get profile() {\n        if (this._profile) {\n            return this._profile.data;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    get identities() {\n        if (this._profile) {\n            return this._profile.identities;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    get deviceId() {\n        if (this.accessToken) {\n            const payload = this.accessToken.split(\".\")[1];\n            if (payload) {\n                const parsedPayload = JSON.parse(base64.Base64.decode(payload));\n                const deviceId = parsedPayload[\"baas_device_id\"];\n                if (typeof deviceId === \"string\" &&\n                    deviceId !== DEFAULT_DEVICE_ID) {\n                    return deviceId;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Refresh the users profile data.\n     */\n    async refreshProfile() {\n        // Fetch the latest profile\n        const response = await this.fetcher.fetchJSON({\n            method: \"GET\",\n            path: routes.api().auth().profile().path,\n        });\n        // Create a profile instance\n        this._profile = new UserProfile(response);\n        // Store this for later hydration\n        this.storage.profile = this._profile;\n    }\n    /**\n     * Log out the user, invalidating the session (and its refresh token).\n     */\n    async logOut() {\n        // Invalidate the refresh token\n        try {\n            if (this._refreshToken !== null) {\n                await this.fetcher.fetchJSON({\n                    method: \"DELETE\",\n                    path: routes.api().auth().session().path,\n                    tokenType: \"refresh\",\n                });\n            }\n        }\n        finally {\n            // Forget the access and refresh token\n            this.accessToken = null;\n            this.refreshToken = null;\n        }\n    }\n    /** @inheritdoc */\n    async linkCredentials(credentials) {\n        const response = await this.app.authenticator.authenticate(credentials, this);\n        // Sanity check the response\n        if (this.id !== response.userId) {\n            const details = `got user id ${response.userId} expected ${this.id}`;\n            throw new Error(`Link response ment for another user (${details})`);\n        }\n        // Update the access token\n        this.accessToken = response.accessToken;\n        // Refresh the profile to include the new identity\n        await this.refreshProfile();\n    }\n    /**\n     * Request a new access token, using the refresh token.\n     */\n    async refreshAccessToken() {\n        const response = await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: routes.api().auth().session().path,\n            tokenType: \"refresh\",\n        });\n        const { access_token: accessToken } = response;\n        if (typeof accessToken === \"string\") {\n            this.accessToken = accessToken;\n        }\n        else {\n            throw new Error(\"Expected an 'access_token' in the response\");\n        }\n    }\n    /** @inheritdoc */\n    async refreshCustomData() {\n        await this.refreshAccessToken();\n        return this.customData;\n    }\n    /** @inheritdoc */\n    callFunction(name, ...args) {\n        return this.functions.callFunction(name, ...args);\n    }\n    /**\n     * @returns A plain ol' JavaScript object representation of the user.\n     */\n    toJSON() {\n        return {\n            id: this.id,\n            accessToken: this.accessToken,\n            refreshToken: this.refreshToken,\n            profile: this._profile,\n            state: this.state,\n            customData: this.customData,\n        };\n    }\n    /** @inheritdoc */\n    push(serviceName = \"\") {\n        throw new Error(\"Not yet implemented\");\n    }\n    /** @inheritdoc */\n    mongoClient(serviceName) {\n        return createService(this.fetcher, serviceName);\n    }\n    decodeAccessToken() {\n        if (this.accessToken) {\n            // Decode and spread the token\n            const parts = this.accessToken.split(\".\");\n            if (parts.length !== 3) {\n                throw new Error(\"Expected an access token with three parts\");\n            }\n            // Decode the payload\n            const encodedPayload = parts[1];\n            const decodedPayload = base64.Base64.decode(encodedPayload);\n            const parsedPayload = JSON.parse(decodedPayload);\n            const { exp: expires, iat: issuedAt, sub: subject, user_data: userData = {}, } = parsedPayload;\n            // Validate the types\n            if (typeof expires !== \"number\") {\n                throw new Error(\"Failed to decode access token 'exp'\");\n            }\n            else if (typeof issuedAt !== \"number\") {\n                throw new Error(\"Failed to decode access token 'iat'\");\n            }\n            return { expires, issuedAt, subject, userData };\n        }\n        else {\n            throw new Error(\"Missing an access token\");\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nclass Credentials {\n    /**\n     * Constructs an instance of credentials.\n     *\n     * @param providerName The name of the authentication provider used when authenticating.\n     * @param providerType The type of the authentication provider used when authenticating.\n     * @param payload The data being sent to the service when authenticating.\n     */\n    constructor(providerName, providerType, payload) {\n        this.providerName = providerName;\n        this.providerType = providerType;\n        this.payload = payload;\n    }\n    /**\n     * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n     *\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static anonymous() {\n        return new Credentials(\"anon-user\", \"anon-user\", {});\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static userApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static serverApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n     * Note: This was formerly known as the \"Username/Password\" provider.\n     *\n     * @param email The end-users email address.\n     * @param password The end-users password.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static emailPassword(email, password) {\n        return new Credentials(\"local-userpass\", \"local-userpass\", {\n            username: email,\n            password,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n     *\n     * @param payload The custom payload as expected by the server.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static function(payload) {\n        return new Credentials(\"custom-function\", \"custom-function\", payload);\n    }\n    /**\n     * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n     *\n     * @param token The JSON Web Token (JWT).\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static jwt(token) {\n        return new Credentials(\"custom-token\", \"custom-token\", {\n            token,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n     *\n     * @param payload The URL that users should be redirected to, the auth code or id token from Google.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static google(payload) {\n        return new Credentials(\"oauth2-google\", \"oauth2-google\", Credentials.derivePayload(payload));\n    }\n    /**\n     * @param payload The payload string.\n     * @returns A payload object based on the string.\n     */\n    static derivePayload(payload) {\n        if (typeof payload === \"string\") {\n            if (payload.includes(\"://\")) {\n                return this.derivePayload({ redirectUrl: payload });\n            }\n            else if (payload.startsWith(\"4/\")) {\n                return this.derivePayload({ authCode: payload });\n            }\n            else if (payload.startsWith(\"ey\")) {\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                return this.derivePayload({ idToken: payload });\n            }\n            else {\n                throw new Error(`Unexpected payload: ${payload}`);\n            }\n        }\n        else if (Object.keys(payload).length === 1) {\n            if (\"authCode\" in payload || \"redirectUrl\" in payload) {\n                return payload;\n            }\n            else if (\"idToken\" in payload) {\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                return { id_token: payload.idToken };\n            }\n            else {\n                throw new Error(\"Unexpected payload: \" + JSON.stringify(payload));\n            }\n        }\n        else {\n            throw new Error(\"Expected only one property in payload, got \" +\n                JSON.stringify(payload));\n        }\n    }\n    /**\n     * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n     *\n     * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static facebook(redirectUrlOrAccessToken) {\n        return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\")\n            ? { redirectUrl: redirectUrlOrAccessToken }\n            : { accessToken: redirectUrlOrAccessToken });\n    }\n    /**\n     * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n     *\n     * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apple(redirectUrlOrIdToken) {\n        return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\")\n            ? { redirectUrl: redirectUrlOrIdToken }\n            : {\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                id_token: redirectUrlOrIdToken,\n            });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst USER_IDS_STORAGE_KEY = \"userIds\";\nconst DEVICE_ID_STORAGE_KEY = \"deviceId\";\n/**\n * Storage specific to the app.\n */\nclass AppStorage extends PrefixedStorage {\n    /**\n     * @param storage The underlying storage to wrap.\n     * @param appId The id of the app.\n     */\n    constructor(storage, appId) {\n        super(storage, `app(${appId})`);\n    }\n    /**\n     * Reads out the list of user ids from storage.\n     *\n     * @returns A list of user ids.\n     */\n    getUserIds() {\n        const userIdsString = this.get(USER_IDS_STORAGE_KEY);\n        const userIds = userIdsString ? JSON.parse(userIdsString) : [];\n        if (Array.isArray(userIds)) {\n            // Remove any duplicates that might have been added\n            // The Set preserves insertion order\n            return [...new Set(userIds)];\n        }\n        else {\n            throw new Error(\"Expected the user ids to be an array\");\n        }\n    }\n    /**\n     * Sets the list of ids in storage.\n     * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n     *\n     * @param userIds The list of ids to store.\n     * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n     */\n    setUserIds(userIds, mergeWithExisting) {\n        if (mergeWithExisting) {\n            // Add any existing user id to the end of this list, avoiding duplicates\n            const existingIds = this.getUserIds();\n            for (const id of existingIds) {\n                if (userIds.indexOf(id) === -1) {\n                    userIds.push(id);\n                }\n            }\n        }\n        // Store the list of ids\n        this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n    }\n    /**\n     * Remove an id from the list of ids.\n     *\n     * @param userId The id of a User to be removed.\n     */\n    removeUserId(userId) {\n        const existingIds = this.getUserIds();\n        const userIds = existingIds.filter(id => id !== userId);\n        // Store the list of ids\n        this.setUserIds(userIds, false);\n    }\n    /**\n     * @returns id of this device (if any exists)\n     */\n    getDeviceId() {\n        return this.get(DEVICE_ID_STORAGE_KEY);\n    }\n    /**\n     * @param deviceId The id of this device, to send on subsequent authentication requests.\n     */\n    setDeviceId(deviceId) {\n        this.set(DEVICE_ID_STORAGE_KEY, deviceId);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nconst LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nconst CLOSE_CHECK_INTERVAL = 100; // 10 times per second\n/* eslint-disable @typescript-eslint/camelcase */\nconst REDIRECT_HASH_TO_RESULT = {\n    _stitch_client_app_id: \"appId\",\n    _baas_client_app_id: \"appId\",\n    _stitch_ua: \"userAuth\",\n    _baas_ua: \"userAuth\",\n    _stitch_link: \"link\",\n    _baas_link: \"link\",\n    _stitch_error: \"error\",\n    _baas_error: \"error\",\n    _stitch_state: \"state\",\n    _baas_state: \"state\",\n};\n/* eslint-enable @typescript-eslint/camelcase */\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\nclass OAuth2Helper {\n    /**\n     * @param storage The underlying storage to use when storing and retriving secrets.\n     * @param openWindow An optional function called when a browser window needs to open.\n     */\n    constructor(storage, openWindow = getEnvironment().openWindow) {\n        this.storage = storage.prefix(\"oauth2\");\n        this.openWindow = openWindow;\n    }\n    /**\n     * Parses the query string from the final step of the OAuth flow.\n     *\n     * @param queryString The query string passed through in location.hash.\n     * @returns The result of the OAuth flow.\n     */\n    static parseRedirectLocation(queryString) {\n        const params = decodeQueryString(queryString);\n        const result = {};\n        for (const [p, r] of Object.entries(REDIRECT_HASH_TO_RESULT)) {\n            const value = params[p];\n            if (value) {\n                result[r] = value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Handle the redirect querystring by parsing it and storing it for others to consume.\n     *\n     * @param queryString The query string containing the encoded result from the OAuth provider.\n     * @param storage The underlying storage used to persist the result.\n     */\n    static handleRedirect(queryString, storage = getEnvironment().defaultStorage) {\n        const result = OAuth2Helper.parseRedirectLocation(queryString);\n        const { state, error } = result;\n        if (typeof state === \"string\") {\n            const oauth2Storage = storage.prefix(\"oauth2\");\n            const stateStorage = OAuth2Helper.getStateStorage(oauth2Storage, state);\n            stateStorage.set(\"result\", JSON.stringify(result));\n        }\n        else if (error) {\n            throw new Error(`Failed to handle OAuth 2.0 redirect: ${error}`);\n        }\n        else {\n            throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n        }\n    }\n    /**\n     * Decodes the authInfo string into its seperate parts.\n     *\n     * @param authInfo An authInfo string returned from the server.\n     * @returns An object containing the separate parts of the authInfo string.\n     */\n    static decodeAuthInfo(authInfo) {\n        const parts = (authInfo || \"\").split(\"$\");\n        if (parts.length === 4) {\n            const [accessToken, refreshToken, userId, deviceId] = parts;\n            return { accessToken, refreshToken, userId, deviceId };\n        }\n        else {\n            throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n        }\n    }\n    /**\n     * Get the storage key associated of an secret associated with a state.\n     *\n     * @param storage The root storage used to derive a \"state namespaced\" storage.\n     * @param state The random state.\n     * @returns The storage associated with a particular state.\n     */\n    static getStateStorage(storage, state) {\n        return storage.prefix(`state(${state})`);\n    }\n    /**\n     * Open a window and wait for the redirect to be handled.\n     *\n     * @param url The URL to open.\n     * @param state The state which will be used to listen for storage updates.\n     * @returns The result passed through the redirect.\n     */\n    openWindowAndWaitForRedirect(url, state) {\n        const stateStorage = OAuth2Helper.getStateStorage(this.storage, state);\n        // Return a promise that resolves when the  gets known\n        return new Promise((resolve, reject) => {\n            let redirectWindow = null;\n            // We're declaring the interval now to enable referencing before its initialized\n            let windowClosedInterval; // eslint-disable-line prefer-const\n            const handleStorageUpdate = () => {\n                // Trying to get the secret from storage\n                const result = stateStorage.get(\"result\");\n                if (result) {\n                    const parsedResult = JSON.parse(result);\n                    // The secret got updated!\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Clear the storage to prevent others from reading this\n                    stateStorage.clear();\n                    // Try closing the newly created window\n                    try {\n                        if (redirectWindow) {\n                            // Stop checking if the window closed\n                            clearInterval(windowClosedInterval);\n                            redirectWindow.close();\n                        }\n                    }\n                    catch (err) {\n                        console.warn(`Failed closing redirect window: ${err}`);\n                    }\n                    finally {\n                        resolve(parsedResult);\n                    }\n                }\n            };\n            // Add a listener to the state storage, awaiting an update to the secret\n            stateStorage.addListener(handleStorageUpdate);\n            // Open up a window\n            redirectWindow = this.openWindow(url);\n            // Not using a const, because we need the two listeners to reference each other when removing the other.\n            windowClosedInterval = setInterval(() => {\n                // Polling \"closed\" because registering listeners on the window violates cross-origin policies\n                if (!redirectWindow) {\n                    // No need to keep polling for a window that we can't check\n                    clearInterval(windowClosedInterval);\n                }\n                else if (redirectWindow.closed) {\n                    // Stop polling the window state\n                    clearInterval(windowClosedInterval);\n                    // Stop listening for changes to the storage\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Reject the promise\n                    const err = new Error(\"Window closed\");\n                    reject(err);\n                }\n            }, CLOSE_CHECK_INTERVAL);\n        });\n    }\n    /**\n     * Generate a random state string.\n     *\n     * @returns The random state string.\n     */\n    generateState() {\n        return generateRandomString(12, LOWERCASE_LETTERS);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst REDIRECT_LOCATION_HEADER = \"x-baas-location\";\n/**\n * Handles authentication and linking of users.\n */\nclass Authenticator {\n    /**\n     * @param fetcher The fetcher used to fetch responses from the server.\n     * @param storage The storage used when completing OAuth 2.0 flows (should not be scoped to a specific app).\n     * @param getDeviceInformation Called to get device information to be sent to the server.\n     */\n    constructor(fetcher, storage, getDeviceInformation) {\n        this.fetcher = fetcher;\n        this.oauth2 = new OAuth2Helper(storage);\n        this.getDeviceInformation = getDeviceInformation;\n    }\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param linkingUser A user requesting to link.\n     */\n    async authenticate(credentials, linkingUser) {\n        const deviceInformation = this.getDeviceInformation();\n        const isLinking = typeof linkingUser === \"object\";\n        if (credentials.providerType.startsWith(\"oauth2\") &&\n            typeof credentials.payload.redirectUrl === \"string\") {\n            // Initiate the OAuth2 flow by generating a state and fetch a redirect URL\n            const state = this.oauth2.generateState();\n            const url = await this.getLogInUrl(credentials, isLinking, {\n                state,\n                redirect: credentials.payload.redirectUrl,\n                // Ensure redirects are communicated in a header different from \"Location\" and status remains 200 OK\n                providerRedirectHeader: isLinking ? true : undefined,\n                // Add the device information, only if we're not linking - since that request won't have a body of its own.\n                device: !isLinking ? deviceInformation.encode() : undefined,\n            });\n            // If we're linking, we need to send the users access token in the request\n            if (isLinking) {\n                const response = await this.fetcher.fetch({\n                    method: \"GET\",\n                    url,\n                    tokenType: isLinking ? \"access\" : \"none\",\n                    user: linkingUser,\n                    // The response will set a cookie that we need to tell the browser to store\n                    mode: \"cors\",\n                    credentials: \"include\",\n                });\n                // If a response header contains a redirect URL: Open a window and wait for the redirect to be handled\n                const redirectUrl = response.headers.get(REDIRECT_LOCATION_HEADER);\n                if (redirectUrl) {\n                    return this.openWindowAndWaitForAuthResponse(redirectUrl, state);\n                }\n                else {\n                    throw new Error(`Missing ${REDIRECT_LOCATION_HEADER} header`);\n                }\n            }\n            else {\n                // Otherwise we can open a window and let the server redirect the user right away\n                // This gives lower latency (as we don't need the client to receive and execute the redirect in code)\n                // This also has less dependency on cookies and doesn't sent any tokens.\n                return this.openWindowAndWaitForAuthResponse(url, state);\n            }\n        }\n        else {\n            const logInUrl = await this.getLogInUrl(credentials, isLinking);\n            const response = await this.fetcher.fetchJSON({\n                method: \"POST\",\n                url: logInUrl,\n                body: {\n                    ...credentials.payload,\n                    options: {\n                        device: deviceInformation.toJSON(),\n                    },\n                },\n                tokenType: isLinking ? \"access\" : \"none\",\n                user: linkingUser,\n            });\n            // Spread out values from the response and ensure they're valid\n            const { user_id: userId, access_token: accessToken, refresh_token: refreshToken = null, device_id: deviceId, } = response;\n            if (typeof userId !== \"string\") {\n                throw new Error(\"Expected a user id in the response\");\n            }\n            if (typeof accessToken !== \"string\") {\n                throw new Error(\"Expected an access token in the response\");\n            }\n            return { userId, accessToken, refreshToken, deviceId };\n        }\n    }\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param link Should the request link with the current user?\n     * @param extraQueryParams Any extra parameters to include in the query string\n     */\n    async getLogInUrl(credentials, link = false, extraQueryParams = {}) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/310f0bd5af80f818cdfbc3caf1ae29ffa8e9c7cf/packages/core/sdk/src/auth/internal/CoreStitchAuth.ts#L746-L780\n        const appRoute = this.fetcher.appRoute;\n        const loginRoute = appRoute\n            .authProvider(credentials.providerName)\n            .login();\n        const qs = encodeQueryString({\n            link: link ? \"true\" : undefined,\n            ...extraQueryParams,\n        });\n        const locationUrl = await this.fetcher.locationUrl;\n        return locationUrl + loginRoute.path + qs;\n    }\n    async openWindowAndWaitForAuthResponse(redirectUrl, state) {\n        const redirectResult = await this.oauth2.openWindowAndWaitForRedirect(redirectUrl, state);\n        // Decode the auth info (id, tokens, etc.) from the result of the redirect\n        return OAuth2Helper.decodeAuthInfo(redirectResult.userAuth);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Determine if the shape of an error response is specific to each service or widely used.\n/**\n * An error produced while communicating with the MongoDB Realm server.\n */\nclass MongoDBRealmError extends Error {\n    constructor(method, url, statusCode, statusText, error, errorCode, link) {\n        const summary = statusText\n            ? `status ${statusCode} ${statusText}`\n            : `status ${statusCode}`;\n        if (typeof error === \"string\") {\n            super(`Request failed (${method} ${url}): ${error} (${summary})`);\n        }\n        else {\n            super(`Request failed (${method} ${url}): (${summary})`);\n        }\n        this.method = method;\n        this.url = url;\n        this.statusText = statusText;\n        this.statusCode = statusCode;\n        this.error = error;\n        this.errorCode = errorCode;\n        this.link = link;\n    }\n    /**\n     * Constructs and returns an error from a request and a response.\n     * Note: The caller must throw this error themselves.\n     *\n     * @param request The request sent to the server.\n     * @param response A raw response, as returned from the server.\n     */\n    static async fromRequestAndResponse(request, response) {\n        var _a;\n        const { url, method } = request;\n        const { status, statusText } = response;\n        if ((_a = response.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.startsWith(\"application/json\")) {\n            const body = await response.json();\n            const error = body.error || \"No message\";\n            const errorCode = body.error_code;\n            const link = body.link;\n            return new MongoDBRealmError(method, url, status, statusText, error, errorCode, link);\n        }\n        else {\n            return new MongoDBRealmError(method, url, status, statusText);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param body A possible resonse body.\n * @returns An async iterator.\n */\nfunction asyncIteratorFromResponseBody(body) {\n    if (typeof body !== \"object\" || body === null) {\n        throw new Error(\"Expected a non-null object\");\n    }\n    else if (Symbol.asyncIterator in body) {\n        return body;\n    }\n    else if (\"getReader\" in body) {\n        const stream = body;\n        return {\n            [Symbol.asyncIterator]() {\n                const reader = stream.getReader();\n                return {\n                    next() {\n                        return reader.read();\n                    },\n                    async return() {\n                        await reader.cancel();\n                        return { done: true, value: null };\n                    },\n                };\n            },\n        };\n    }\n    else {\n        throw new Error(\"Expected an AsyncIterable or a ReadableStream\");\n    }\n}\n/**\n * Wraps a NetworkTransport from the \"realm-network-transport\" package.\n * Extracts error messages and throws `MongoDBRealmError` objects upon failures.\n * Injects access or refresh tokens for a current or specific user.\n * Refreshes access tokens if requests fails due to a 401 error.\n * Optionally parses response as JSON before returning it.\n * Fetches and exposes an app's location url.\n */\nclass Fetcher {\n    /**\n     * @param config A configuration of the fetcher.\n     */\n    constructor({ appId, transport, userContext, locationUrlContext, }) {\n        this.appId = appId;\n        this.transport = transport;\n        this.userContext = userContext;\n        this.locationUrlContext = locationUrlContext;\n    }\n    /**\n     * @param user An optional user to generate the header for.\n     * @param tokenType The type of token (access or refresh).\n     * @returns An object containing the user's token as \"Authorization\" header or undefined if no user is given.\n     */\n    static buildAuthorizationHeader(user, tokenType) {\n        if (!user || tokenType === \"none\") {\n            return {};\n        }\n        else if (tokenType === \"access\") {\n            return { Authorization: `Bearer ${user.accessToken}` };\n        }\n        else if (tokenType === \"refresh\") {\n            return { Authorization: `Bearer ${user.refreshToken}` };\n        }\n        else {\n            throw new Error(`Unexpected token type (${tokenType})`);\n        }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n    static buildBody(body) {\n        if (!body) {\n            return;\n        }\n        else if (typeof body === \"object\" && body !== null) {\n            return JSON.stringify(serialize(body));\n        }\n        else if (typeof body === \"string\") {\n            return body;\n        }\n        else {\n            console.log(\"body is\", body);\n            throw new Error(\"Unexpected type of body\");\n        }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n    static buildJsonHeader(body) {\n        if (body && body.length > 0) {\n            return { \"Content-Type\": \"application/json\" };\n        }\n        else {\n            return {};\n        }\n    }\n    clone(config) {\n        return new Fetcher({\n            appId: this.appId,\n            transport: this.transport,\n            userContext: this.userContext,\n            locationUrlContext: this.locationUrlContext,\n            ...config,\n        });\n    }\n    /**\n     * Fetch a network resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server.\n     */\n    async fetch(request) {\n        const { path, url, tokenType = \"access\", user = this.userContext.currentUser, ...restOfRequest } = request;\n        if (typeof path === \"string\" && typeof url === \"string\") {\n            throw new Error(\"Use of 'url' and 'path' mutually exclusive\");\n        }\n        else if (typeof path === \"string\") {\n            // Derive the URL\n            const url = (await this.locationUrlContext.locationUrl) + path;\n            return this.fetch({ ...request, path: undefined, url });\n        }\n        else if (typeof url === \"string\") {\n            const response = await this.transport.fetch({\n                ...restOfRequest,\n                url,\n                headers: {\n                    ...Fetcher.buildAuthorizationHeader(user, tokenType),\n                    ...request.headers,\n                },\n            });\n            if (response.ok) {\n                return response;\n            }\n            else if (user &&\n                response.status === 401 &&\n                tokenType === \"access\") {\n                // If the access token has expired, it would help refreshing it\n                await user.refreshAccessToken();\n                // Retry with the specific user, since the currentUser might have changed.\n                return this.fetch({ ...request, user });\n            }\n            else {\n                if (user &&\n                    response.status === 401 &&\n                    tokenType === \"refresh\") {\n                    // A 401 error while using the refresh token indicates the token has an issue.\n                    // Reset the tokens to prevent a lock.\n                    user.accessToken = null;\n                    user.refreshToken = null;\n                }\n                // Throw an error with a message extracted from the body\n                throw await MongoDBRealmError.fromRequestAndResponse(request, response);\n            }\n        }\n        else {\n            throw new Error(\"Expected either 'url' or 'path'\");\n        }\n    }\n    /**\n     * Fetch a network resource as an authenticated user and parse the result as extended JSON.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server, parsed as extended JSON.\n     */\n    async fetchJSON(request) {\n        const { body } = request;\n        const serializedBody = Fetcher.buildBody(body);\n        const contentTypeHeaders = Fetcher.buildJsonHeader(serializedBody);\n        const response = await this.fetch({\n            ...request,\n            body: serializedBody,\n            headers: {\n                Accept: \"application/json\",\n                ...contentTypeHeaders,\n                ...request.headers,\n            },\n        });\n        const contentType = response.headers.get(\"content-type\");\n        if (contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(\"application/json\")) {\n            const responseBody = await response.json();\n            return deserialize(responseBody);\n        }\n        else if (contentType === null) {\n            return null;\n        }\n        else {\n            throw new Error(`Expected JSON response, got \"${contentType}\"`);\n        }\n    }\n    /**\n     * Fetch an \"event-stream\" resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     */\n    async fetchStream(request) {\n        const { body } = await this.fetch({\n            ...request,\n            headers: {\n                Accept: \"text/event-stream\",\n                ...request.headers,\n            },\n        });\n        return asyncIteratorFromResponseBody(body);\n    }\n    /**\n     * @returns The path of the app route.\n     */\n    get appRoute() {\n        return routes.api().app(this.appId);\n    }\n    /**\n     * @returns A promise of the location URL of the app.\n     */\n    get locationUrl() {\n        return this.locationUrlContext.locationUrl;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The key in a storage on which the device id is stored.\n */\nconst DEVICE_ID_STORAGE_KEY$1 = \"deviceId\";\nvar DeviceFields;\n(function (DeviceFields) {\n    DeviceFields[\"DEVICE_ID\"] = \"deviceId\";\n    DeviceFields[\"APP_ID\"] = \"appId\";\n    DeviceFields[\"APP_VERSION\"] = \"appVersion\";\n    DeviceFields[\"PLATFORM\"] = \"platform\";\n    DeviceFields[\"PLATFORM_VERSION\"] = \"platformVersion\";\n    DeviceFields[\"SDK_VERSION\"] = \"sdkVersion\";\n})(DeviceFields || (DeviceFields = {}));\n/**\n * Information describing the device, app and SDK.\n */\nclass DeviceInformation {\n    /**\n     * @param params Construct the device information from these parameters.\n     */\n    constructor({ appId, appVersion, deviceId, }) {\n        /**\n         * The version of the Realm Web SDK (constant provided by Rollup).\n         */\n        this.sdkVersion = \"1.3.0\";\n        const environment = getEnvironment();\n        this.platform = environment.platform;\n        this.platformVersion = environment.platformVersion;\n        this.appId = appId;\n        this.appVersion = appVersion;\n        this.deviceId = deviceId;\n    }\n    /**\n     * @returns An base64 URI encoded representation of the device information.\n     */\n    encode() {\n        const obj = removeKeysWithUndefinedValues(this);\n        return base64.Base64.encode(JSON.stringify(obj));\n    }\n    /**\n     * @returns The defaults\n     */\n    toJSON() {\n        return removeKeysWithUndefinedValues(this);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\nconst DEFAULT_BASE_URL = \"https://stitch.mongodb.com\";\n/**\n * MongoDB Realm App\n */\nclass App {\n    /**\n     * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n     *\n     * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n     */\n    constructor(idOrConfiguration) {\n        /**\n         * An array of active and logged-out users.\n         * Elements in the beginning of the array is considered more recent than the later elements.\n         */\n        this.users = [];\n        /**\n         * A promise resolving to the App's location url.\n         */\n        this._locationUrl = null;\n        // If the argument is a string, convert it to a simple configuration object.\n        const configuration = typeof idOrConfiguration === \"string\"\n            ? { id: idOrConfiguration }\n            : idOrConfiguration;\n        // Initialize properties from the configuration\n        if (typeof configuration === \"object\" &&\n            typeof configuration.id === \"string\") {\n            this.id = configuration.id;\n        }\n        else {\n            throw new Error(\"Missing a MongoDB Realm app-id\");\n        }\n        this.baseUrl = configuration.baseUrl || DEFAULT_BASE_URL;\n        if (configuration.skipLocationRequest) {\n            // Use the base url directly, instead of requesting a location URL from the server\n            this._locationUrl = Promise.resolve(this.baseUrl);\n        }\n        this.localApp = configuration.app;\n        const { storage, transport = new DefaultNetworkTransport(), } = configuration;\n        // Construct a fetcher wrapping the network transport\n        this.fetcher = new Fetcher({\n            appId: this.id,\n            userContext: this,\n            locationUrlContext: this,\n            transport,\n        });\n        // Construct the auth providers\n        this.emailPasswordAuth = new EmailPasswordAuth(this.fetcher);\n        // Construct the storage\n        const baseStorage = storage || getEnvironment().defaultStorage;\n        this.storage = new AppStorage(baseStorage, this.id);\n        this.authenticator = new Authenticator(this.fetcher, baseStorage, () => this.deviceInformation);\n        // Hydrate the app state from storage\n        try {\n            this.hydrate();\n        }\n        catch (err) {\n            // The storage was corrupted\n            this.storage.clear();\n            // A failed hydration shouldn't throw and break the app experience\n            // Since this is \"just\" persisted state that unfortunately got corrupted or partially lost\n            console.warn(\"Realm app hydration failed:\", err.message);\n        }\n    }\n    /**\n     * Get or create a singleton Realm App from an id.\n     * Calling this function multiple times with the same id will return the same instance.\n     *\n     * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n     * @returns The Realm App instance.\n     */\n    static getApp(id) {\n        if (id in App.appCache) {\n            return App.appCache[id];\n        }\n        else {\n            const instance = new App(id);\n            App.appCache[id] = instance;\n            return instance;\n        }\n    }\n    /**\n     * Switch user.\n     *\n     * @param nextUser The user or id of the user to switch to.\n     */\n    switchUser(nextUser) {\n        const index = this.users.findIndex(u => u === nextUser);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        // Remove the user from the stack\n        const [user] = this.users.splice(index, 1);\n        // Insert the user in the beginning of the stack\n        this.users.unshift(user);\n    }\n    /**\n     * Log in a user.\n     *\n     * @param credentials Credentials to use when logging in.\n     * @param fetchProfile Should the users profile be fetched? (default: true)\n     */\n    async logIn(credentials, fetchProfile = true) {\n        const response = await this.authenticator.authenticate(credentials);\n        const user = this.createOrUpdateUser(response, credentials.providerType);\n        // Let's ensure this will be the current user, in case the user object was reused.\n        this.switchUser(user);\n        // If neeeded, fetch and set the profile on the user\n        if (fetchProfile) {\n            await user.refreshProfile();\n        }\n        // Persist the user id in the storage,\n        // merging to avoid overriding logins from other apps using the same underlying storage\n        this.storage.setUserIds(this.users.map(u => u.id), true);\n        // Read out and store the device id from the server\n        const deviceId = response.deviceId;\n        if (deviceId && deviceId !== \"000000000000000000000000\") {\n            this.storage.set(DEVICE_ID_STORAGE_KEY$1, deviceId);\n        }\n        // Return the user\n        return user;\n    }\n    /**\n     * @inheritdoc\n     */\n    async removeUser(user) {\n        // Remove the user from the list of users\n        const index = this.users.findIndex(u => u === user);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        this.users.splice(index, 1);\n        // Log out the user - this removes access and refresh tokens from storage\n        await user.logOut();\n        // Remove the users profile from storage\n        this.storage.remove(`user(${user.id}):profile`);\n        // Remove the user from the storage\n        this.storage.removeUserId(user.id);\n    }\n    /**\n     * The currently active user (or null if no active users exists).\n     *\n     * @returns the currently active user or null.\n     */\n    get currentUser() {\n        const activeUsers = this.users.filter(user => user.state === UserState.Active);\n        if (activeUsers.length === 0) {\n            return null;\n        }\n        else {\n            // Current user is the top of the stack\n            return activeUsers[0];\n        }\n    }\n    /**\n     * All active and logged-out users:\n     *  - First in the list are active users (ordered by most recent call to switchUser or login)\n     *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n     *\n     * @returns An array of users active or loggedout users (current user being the first).\n     */\n    get allUsers() {\n        // Returning a freezed copy of the list of users to prevent outside changes\n        return Object.fromEntries(this.users.map(user => [user.id, user]));\n    }\n    /**\n     * @returns A promise of the app URL, with the app location resolved.\n     */\n    get locationUrl() {\n        if (!this._locationUrl) {\n            const path = routes.api().app(this.id).location().path;\n            this._locationUrl = this.fetcher\n                .fetchJSON({\n                method: \"GET\",\n                url: this.baseUrl + path,\n                tokenType: \"none\",\n            })\n                .then(({ hostname }) => {\n                if (typeof hostname !== \"string\") {\n                    throw new Error(\"Expected response to contain a 'hostname'\");\n                }\n                else {\n                    return hostname;\n                }\n            })\n                .catch(err => {\n                // Reset the location to allow another request to fetch again.\n                this._locationUrl = null;\n                throw err;\n            });\n        }\n        return this._locationUrl;\n    }\n    /**\n     * @returns Information about the current device, sent to the server when authenticating.\n     */\n    get deviceInformation() {\n        const deviceIdStr = this.storage.getDeviceId();\n        const deviceId = typeof deviceIdStr === \"string\" &&\n            deviceIdStr !== \"000000000000000000000000\"\n            ? new ObjectId(deviceIdStr)\n            : undefined;\n        return new DeviceInformation({\n            appId: this.localApp ? this.localApp.name : undefined,\n            appVersion: this.localApp ? this.localApp.version : undefined,\n            deviceId,\n        });\n    }\n    /**\n     * Create (and store) a new user or update an existing user's access and refresh tokens.\n     * This helps de-duplicating users in the list of users known to the app.\n     *\n     * @param response A response from the Authenticator.\n     * @param providerType The type of the authentication provider used.\n     * @returns A new or an existing user.\n     */\n    createOrUpdateUser(response, providerType) {\n        const existingUser = this.users.find(u => u.id === response.userId);\n        if (existingUser) {\n            // Update the users access and refresh tokens\n            existingUser.accessToken = response.accessToken;\n            existingUser.refreshToken = response.refreshToken;\n            return existingUser;\n        }\n        else {\n            // Create and store a new user\n            if (!response.refreshToken) {\n                throw new Error(\"No refresh token in response from server\");\n            }\n            const user = new User({\n                app: this,\n                id: response.userId,\n                accessToken: response.accessToken,\n                refreshToken: response.refreshToken,\n                providerType,\n            });\n            this.users.unshift(user);\n            return user;\n        }\n    }\n    /**\n     * Restores the state of the app (active and logged-out users) from the storage\n     */\n    hydrate() {\n        const userIds = this.storage.getUserIds();\n        this.users = userIds.map(id => new User({ app: this, id }));\n    }\n}\n/**\n * A map of app instances returned from calling getApp.\n */\nApp.appCache = {};\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nApp.Credentials = Credentials;\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Get or create a singleton Realm App from an id.\n * Calling this function multiple times with the same id will return the same instance.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance.\n */\nfunction getApp(id) {\n    return App.getApp(id);\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass LocalStorage {\n    /**\n     * Constructs a LocalStorage using the global window.\n     */\n    constructor() {\n        if (typeof window === \"object\") {\n            this.window = window;\n        }\n        else {\n            throw new Error(\"Cannot use LocalStorage without a global window object\");\n        }\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.window.localStorage.getItem(key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.window.localStorage.setItem(key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.window.localStorage.removeItem(key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix) {\n        const keys = [];\n        // Iterate all keys to find the once have a matching prefix.\n        for (let i = 0; i < this.window.localStorage.length; i++) {\n            const key = this.window.localStorage.key(i);\n            if (key && (!prefix || key.startsWith(prefix))) {\n                keys.push(key);\n            }\n        }\n        // Remove the items in a seperate loop to avoid updating while iterating.\n        for (const key of keys) {\n            this.window.localStorage.removeItem(key);\n        }\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.window.addEventListener(\"storage\", listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.window.removeEventListener(\"storage\", listener);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst browser = detect();\nconst environment$1 = {\n    defaultStorage: new LocalStorage().prefix(\"realm-web\"),\n    openWindow: url => window.open(url),\n    platform: (browser === null || browser === void 0 ? void 0 : browser.name) || \"web\",\n    platformVersion: (browser === null || browser === void 0 ? void 0 : browser.version) || \"0.0.0\",\n    TextDecoder,\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\nfunction handleAuthRedirect(location = window.location, storage = environment$1.defaultStorage) {\n    try {\n        const queryString = location.hash.substr(1); // Strip the initial # from the hash\n        OAuth2Helper.handleRedirect(queryString, storage);\n    }\n    catch (err) {\n        // Ensure calling this never throws: It should not interrupt a users flow.\n        console.warn(err);\n    }\n}\n\nexport { App, Credentials, DEFAULT_BASE_URL, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, setEnvironment };\n"]},"metadata":{},"sourceType":"module"}